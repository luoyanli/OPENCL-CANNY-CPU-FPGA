

================================================================
== Vitis HLS Report for 'sobel'
================================================================
* Date:           Tue Dec 12 08:47:37 2023

* Version:        2020.1 (Build 2902540 on Wed May 27 20:16:15 MDT 2020)
* Project:        test.prj
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: virtexuplus
* Target device:  xcu250-figd2104-2L-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 2.50 ns | 1.750 ns |   0.68 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    76046|    76046| 0.190 ms | 0.190 ms |  76047|  76047|   none  |
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1            |      768|      768|         2|          1|          1|   768|    yes   |
        |- Loop 2            |        9|        9|         1|          1|          1|     9|    yes   |
        |- VITIS_LOOP_41_1   |    75264|    75264|       294|          -|          -|   256|    no    |
        | + VITIS_LOOP_42_2  |      291|      291|        37|          1|          1|   256|    yes   |
        +--------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 1
  * Pipeline-2: initiation interval (II) = 1, depth = 37


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 45
* Pipeline : 3
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
  Pipeline-1 : II = 1, D = 1, States = { 5 }
  Pipeline-2 : II = 1, D = 37, States = { 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 5 
5 --> 6 5 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 45 12 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 18 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 
23 --> 24 
24 --> 25 
25 --> 26 
26 --> 27 
27 --> 28 
28 --> 29 
29 --> 30 
30 --> 31 
31 --> 32 
32 --> 33 
33 --> 34 
34 --> 35 
35 --> 36 
36 --> 37 
37 --> 38 
38 --> 39 
39 --> 40 
40 --> 41 
41 --> 42 
42 --> 43 
43 --> 44 
44 --> 8 
45 --> 7 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.60>
ST_1 : Operation 46 [1/1] (0.00ns)   --->   "%spectopmodule_ln0 = spectopmodule void @_ssdm_op_SpecTopModule, void @empty_0"   --->   Operation 46 'spectopmodule' 'spectopmodule_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 47 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %data, void @empty_2, i32, i32, void @empty_1, i32, i32, void @empty_1, void @empty_1, void @empty_1, i32, i32, i32, i32, void @empty_1, void @empty_1"   --->   Operation 47 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 48 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i8 %data"   --->   Operation 48 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i16 %out_r, void @empty_2, i32, i32, void @empty_1, i32, i32, void @empty_1, void @empty_1, void @empty_1, i32, i32, i32, i32, void @empty_1, void @empty_1"   --->   Operation 49 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 50 [1/1] (0.00ns)   --->   "%specbitsmap_ln0 = specbitsmap void @_ssdm_op_SpecBitsMap, i16 %out_r"   --->   Operation 50 'specbitsmap' 'specbitsmap_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 51 [1/1] (0.00ns)   --->   "%line_buf = alloca i64" [../src/sobel.cpp:22]   --->   Operation 51 'alloca' 'line_buf' <Predicate = true> <Delay = 0.00> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 256> <RAM>
ST_1 : Operation 52 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i16 %out_r"   --->   Operation 52 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 53 [1/1] (0.60ns)   --->   "%br_ln22 = br void %memset.loop36" [../src/sobel.cpp:22]   --->   Operation 53 'br' 'br_ln22' <Predicate = true> <Delay = 0.60>

State 2 <SV = 1> <Delay = 1.34>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%empty = phi i10, void, i10 %empty_28, void %memset.loop36.split"   --->   Operation 54 'phi' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32, i32, i32, i32, void @p_str"   --->   Operation 55 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.60ns)   --->   "%exitcond6716 = icmp_eq  i10 %empty, i10"   --->   Operation 56 'icmp' 'exitcond6716' <Predicate = true> <Delay = 0.60> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%empty_27 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64, i64, i64"   --->   Operation 57 'speclooptripcount' 'empty_27' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.72ns)   --->   "%empty_28 = add i10 %empty, i10"   --->   Operation 58 'add' 'empty_28' <Predicate = true> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond6716, void %memset.loop36.split, void %memset.loop.preheader"   --->   Operation 59 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%empty_29 = trunc i10 %empty"   --->   Operation 60 'trunc' 'empty_29' <Predicate = (!exitcond6716)> <Delay = 0.00>
ST_2 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_5 = partselect i2 @_ssdm_op_PartSelect.i2.i10.i32.i32, i10 %empty, i32, i32"   --->   Operation 61 'partselect' 'tmp_5' <Predicate = (!exitcond6716)> <Delay = 0.00>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_7 = bitconcatenate i5 @_ssdm_op_BitConcatenate.i5.i2.i3, i2 %tmp_5, i3"   --->   Operation 62 'bitconcatenate' 'tmp_7' <Predicate = (!exitcond6716)> <Delay = 0.00>
ST_2 : Operation 63 [1/1] (0.00ns)   --->   "%empty_30 = or i5 %tmp_7, i5"   --->   Operation 63 'or' 'empty_30' <Predicate = (!exitcond6716)> <Delay = 0.00>
ST_2 : Operation 64 [1/1] (0.63ns)   --->   "%empty_31 = icmp_ugt  i5 %tmp_7, i5 %empty_30"   --->   Operation 64 'icmp' 'empty_31' <Predicate = (!exitcond6716)> <Delay = 0.63> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node empty_34)   --->   "%empty_32 = select i1 %empty_31, i5 %tmp_7, i5 %empty_30"   --->   Operation 65 'select' 'empty_32' <Predicate = (!exitcond6716)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.70ns) (out node of the LUT)   --->   "%empty_34 = sub i5, i5 %empty_32"   --->   Operation 66 'sub' 'empty_34' <Predicate = (!exitcond6716)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 1.75>
ST_3 : Operation 67 [1/1] (0.00ns)   --->   "%p_cast7 = zext i8 %empty_29"   --->   Operation 67 'zext' 'p_cast7' <Predicate = (!exitcond6716)> <Delay = 0.00>
ST_3 : Operation 68 [1/1] (0.00ns)   --->   "%line_buf_addr = getelementptr i24 %line_buf, i64, i64 %p_cast7"   --->   Operation 68 'getelementptr' 'line_buf_addr' <Predicate = (!exitcond6716)> <Delay = 0.00>
ST_3 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node empty_40)   --->   "%empty_33 = select i1 %empty_31, i5 %empty_30, i5 %tmp_7"   --->   Operation 69 'select' 'empty_33' <Predicate = (!exitcond6716)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node empty_40)   --->   "%empty_35 = zext i5 %empty_33"   --->   Operation 70 'zext' 'empty_35' <Predicate = (!exitcond6716)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node empty_40)   --->   "%empty_36 = zext i5 %empty_34"   --->   Operation 71 'zext' 'empty_36' <Predicate = (!exitcond6716)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node empty_40)   --->   "%empty_37 = select i1 %empty_31, i24, i24"   --->   Operation 72 'select' 'empty_37' <Predicate = (!exitcond6716)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node empty_40)   --->   "%empty_38 = shl i24, i24 %empty_35"   --->   Operation 73 'shl' 'empty_38' <Predicate = (!exitcond6716)> <Delay = 0.00> <CoreInst = "Shift">   --->   Core 13 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node empty_40)   --->   "%empty_39 = lshr i24, i24 %empty_36"   --->   Operation 74 'lshr' 'empty_39' <Predicate = (!exitcond6716)> <Delay = 0.00> <CoreInst = "Shift">   --->   Core 13 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node empty_40)   --->   "%p_demorgan = and i24 %empty_38, i24 %empty_39"   --->   Operation 75 'and' 'p_demorgan' <Predicate = (!exitcond6716)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (0.59ns) (out node of the LUT)   --->   "%empty_40 = and i24 %empty_37, i24 %p_demorgan"   --->   Operation 76 'and' 'empty_40' <Predicate = (!exitcond6716)> <Delay = 0.59> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%specbramwithbyteenable_ln0 = specbramwithbyteenable void @_ssdm_op_SpecBRAMWithByteEnable, i24 %line_buf"   --->   Operation 77 'specbramwithbyteenable' 'specbramwithbyteenable_ln0' <Predicate = (!exitcond6716)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%empty_41 = zext i2 %tmp_5"   --->   Operation 78 'zext' 'empty_41' <Predicate = (!exitcond6716)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.48ns)   --->   "%mask = shl i3, i3 %empty_41"   --->   Operation 79 'shl' 'mask' <Predicate = (!exitcond6716)> <Delay = 0.48> <CoreInst = "Shift">   --->   Core 13 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 80 [1/1] (1.15ns)   --->   "%store_ln0 = store void @_ssdm_op_Write.bram.i24, i8 %line_buf_addr, i24 %empty_40, i3 %mask"   --->   Operation 80 'store' 'store_ln0' <Predicate = (!exitcond6716)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 256> <RAM>
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memset.loop36"   --->   Operation 81 'br' 'br_ln0' <Predicate = (!exitcond6716)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 0.60>
ST_4 : Operation 82 [1/1] (0.00ns)   --->   "%window_buf_0_1_0 = alloca i32"   --->   Operation 82 'alloca' 'window_buf_0_1_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 83 [1/1] (0.00ns)   --->   "%window_buf_0_2_0 = alloca i32"   --->   Operation 83 'alloca' 'window_buf_0_2_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 84 [1/1] (0.00ns)   --->   "%window_buf_1_1_0 = alloca i32"   --->   Operation 84 'alloca' 'window_buf_1_1_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (0.00ns)   --->   "%window_buf_1_2_0 = alloca i32"   --->   Operation 85 'alloca' 'window_buf_1_2_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%window_buf_2_1_0 = alloca i32"   --->   Operation 86 'alloca' 'window_buf_2_1_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%window_buf_2_2_0 = alloca i32"   --->   Operation 87 'alloca' 'window_buf_2_2_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.60ns)   --->   "%br_ln0 = br void %memset.loop"   --->   Operation 88 'br' 'br_ln0' <Predicate = true> <Delay = 0.60>

State 5 <SV = 3> <Delay = 1.71>
ST_5 : Operation 89 [1/1] (0.00ns)   --->   "%empty_42 = phi i4 %empty_44, void %memset.loop.split56, i4, void %memset.loop.preheader"   --->   Operation 89 'phi' 'empty_42' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%phi_mul = phi i8 %next_mul, void %memset.loop.split56, i8, void %memset.loop.preheader"   --->   Operation 90 'phi' 'phi_mul' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (0.00ns)   --->   "%phi_urem = phi i4 %idx_urem, void %memset.loop.split56, i4, void %memset.loop.preheader"   --->   Operation 91 'phi' 'phi_urem' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 92 [1/1] (0.00ns)   --->   "%window_buf_0_1_0_load = load i8 %window_buf_0_1_0"   --->   Operation 92 'load' 'window_buf_0_1_0_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 93 [1/1] (0.00ns)   --->   "%window_buf_0_2_0_load = load i8 %window_buf_0_2_0"   --->   Operation 93 'load' 'window_buf_0_2_0_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 94 [1/1] (0.00ns)   --->   "%window_buf_1_1_0_load = load i8 %window_buf_1_1_0"   --->   Operation 94 'load' 'window_buf_1_1_0_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 95 [1/1] (0.00ns)   --->   "%window_buf_1_2_0_load = load i8 %window_buf_1_2_0"   --->   Operation 95 'load' 'window_buf_1_2_0_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 96 [1/1] (0.00ns)   --->   "%window_buf_2_1_0_load = load i8 %window_buf_2_1_0"   --->   Operation 96 'load' 'window_buf_2_1_0_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%window_buf_2_2_0_load = load i8 %window_buf_2_2_0"   --->   Operation 97 'load' 'window_buf_2_2_0_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32, i32, i32, i32, void @p_str"   --->   Operation 98 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (0.65ns)   --->   "%exitcond6615 = icmp_eq  i4 %empty_42, i4"   --->   Operation 99 'icmp' 'exitcond6615' <Predicate = true> <Delay = 0.65> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%empty_43 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64, i64, i64"   --->   Operation 100 'speclooptripcount' 'empty_43' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.70ns)   --->   "%empty_44 = add i4 %empty_42, i4"   --->   Operation 101 'add' 'empty_44' <Predicate = true> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%br_ln0 = br i1 %exitcond6615, void %memset.loop.split, void %split.preheader"   --->   Operation 102 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.70ns)   --->   "%next_mul = add i8, i8 %phi_mul"   --->   Operation 103 'add' 'next_mul' <Predicate = (!exitcond6615)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 104 [1/1] (0.00ns)   --->   "%p_t = partselect i2 @_ssdm_op_PartSelect.i2.i8.i32.i32, i8 %phi_mul, i32, i32"   --->   Operation 104 'partselect' 'p_t' <Predicate = (!exitcond6615)> <Delay = 0.00>
ST_5 : Operation 105 [1/1] (0.00ns)   --->   "%empty_45 = trunc i4 %phi_urem"   --->   Operation 105 'trunc' 'empty_45' <Predicate = (!exitcond6615)> <Delay = 0.00>
ST_5 : Operation 106 [1/1] (0.49ns)   --->   "%switch_ln0 = switch i2 %p_t, void %branch2, i2, void %branch0, i2, void %branch1"   --->   Operation 106 'switch' 'switch_ln0' <Predicate = (!exitcond6615)> <Delay = 0.49>
ST_5 : Operation 107 [1/1] (0.49ns)   --->   "%switch_ln0 = switch i2 %empty_45, void %branch8, i2, void %memset.loop.split56, i2, void %branch7"   --->   Operation 107 'switch' 'switch_ln0' <Predicate = (!exitcond6615 & p_t == 1)> <Delay = 0.49>
ST_5 : Operation 108 [1/1] (0.00ns)   --->   "%store_ln0 = store i8, i8 %window_buf_1_1_0, i8 %window_buf_1_1_0_load"   --->   Operation 108 'store' 'store_ln0' <Predicate = (!exitcond6615 & p_t == 1 & empty_45 == 1)> <Delay = 0.00>
ST_5 : Operation 109 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memset.loop.split56"   --->   Operation 109 'br' 'br_ln0' <Predicate = (!exitcond6615 & p_t == 1 & empty_45 == 1)> <Delay = 0.00>
ST_5 : Operation 110 [1/1] (0.00ns)   --->   "%store_ln0 = store i8, i8 %window_buf_1_2_0, i8 %window_buf_1_2_0_load"   --->   Operation 110 'store' 'store_ln0' <Predicate = (!exitcond6615 & p_t == 1 & empty_45 != 0 & empty_45 != 1)> <Delay = 0.00>
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memset.loop.split56"   --->   Operation 111 'br' 'br_ln0' <Predicate = (!exitcond6615 & p_t == 1 & empty_45 != 0 & empty_45 != 1)> <Delay = 0.00>
ST_5 : Operation 112 [1/1] (0.49ns)   --->   "%switch_ln0 = switch i2 %empty_45, void %branch5, i2, void %memset.loop.split56, i2, void %branch4"   --->   Operation 112 'switch' 'switch_ln0' <Predicate = (!exitcond6615 & p_t == 0)> <Delay = 0.49>
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "%store_ln0 = store i8, i8 %window_buf_0_1_0, i8 %window_buf_0_1_0_load"   --->   Operation 113 'store' 'store_ln0' <Predicate = (!exitcond6615 & p_t == 0 & empty_45 == 1)> <Delay = 0.00>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memset.loop.split56"   --->   Operation 114 'br' 'br_ln0' <Predicate = (!exitcond6615 & p_t == 0 & empty_45 == 1)> <Delay = 0.00>
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%store_ln0 = store i8, i8 %window_buf_0_2_0, i8 %window_buf_0_2_0_load"   --->   Operation 115 'store' 'store_ln0' <Predicate = (!exitcond6615 & p_t == 0 & empty_45 != 0 & empty_45 != 1)> <Delay = 0.00>
ST_5 : Operation 116 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memset.loop.split56"   --->   Operation 116 'br' 'br_ln0' <Predicate = (!exitcond6615 & p_t == 0 & empty_45 != 0 & empty_45 != 1)> <Delay = 0.00>
ST_5 : Operation 117 [1/1] (0.49ns)   --->   "%switch_ln0 = switch i2 %empty_45, void %branch11, i2, void %memset.loop.split56, i2, void %branch10"   --->   Operation 117 'switch' 'switch_ln0' <Predicate = (!exitcond6615 & p_t != 0 & p_t != 1)> <Delay = 0.49>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%store_ln0 = store i8, i8 %window_buf_2_1_0, i8 %window_buf_2_1_0_load"   --->   Operation 118 'store' 'store_ln0' <Predicate = (!exitcond6615 & p_t != 0 & p_t != 1 & empty_45 == 1)> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memset.loop.split56"   --->   Operation 119 'br' 'br_ln0' <Predicate = (!exitcond6615 & p_t != 0 & p_t != 1 & empty_45 == 1)> <Delay = 0.00>
ST_5 : Operation 120 [1/1] (0.00ns)   --->   "%store_ln0 = store i8, i8 %window_buf_2_2_0, i8 %window_buf_2_2_0_load"   --->   Operation 120 'store' 'store_ln0' <Predicate = (!exitcond6615 & p_t != 0 & p_t != 1 & empty_45 != 0 & empty_45 != 1)> <Delay = 0.00>
ST_5 : Operation 121 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memset.loop.split56"   --->   Operation 121 'br' 'br_ln0' <Predicate = (!exitcond6615 & p_t != 0 & p_t != 1 & empty_45 != 0 & empty_45 != 1)> <Delay = 0.00>
ST_5 : Operation 122 [1/1] (0.70ns)   --->   "%next_urem = add i4 %phi_urem, i4"   --->   Operation 122 'add' 'next_urem' <Predicate = (!exitcond6615)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 123 [1/1] (0.65ns)   --->   "%empty_46 = icmp_ult  i4 %next_urem, i4"   --->   Operation 123 'icmp' 'empty_46' <Predicate = (!exitcond6615)> <Delay = 0.65> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 124 [1/1] (0.35ns)   --->   "%idx_urem = select i1 %empty_46, i4 %next_urem, i4"   --->   Operation 124 'select' 'idx_urem' <Predicate = (!exitcond6615)> <Delay = 0.35> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "%br_ln0 = br void %memset.loop"   --->   Operation 125 'br' 'br_ln0' <Predicate = (!exitcond6615)> <Delay = 0.00>

State 6 <SV = 4> <Delay = 0.60>
ST_6 : Operation 126 [1/1] (0.00ns)   --->   "%window_buf_0_1 = alloca i32"   --->   Operation 126 'alloca' 'window_buf_0_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 127 [1/1] (0.00ns)   --->   "%window_buf_0_1_1 = alloca i32"   --->   Operation 127 'alloca' 'window_buf_0_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 128 [1/1] (0.00ns)   --->   "%window_buf_1_1 = alloca i32"   --->   Operation 128 'alloca' 'window_buf_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 129 [1/1] (0.00ns)   --->   "%window_buf_1_1_1 = alloca i32"   --->   Operation 129 'alloca' 'window_buf_1_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 130 [1/1] (0.00ns)   --->   "%window_buf_2_1 = alloca i32"   --->   Operation 130 'alloca' 'window_buf_2_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 131 [1/1] (0.00ns)   --->   "%window_buf_2_1_1 = alloca i32"   --->   Operation 131 'alloca' 'window_buf_2_1_1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 132 [1/1] (0.60ns)   --->   "%store_ln41 = store i8 %window_buf_2_2_0_load, i8 %window_buf_2_1_1" [../src/sobel.cpp:41]   --->   Operation 132 'store' 'store_ln41' <Predicate = true> <Delay = 0.60>
ST_6 : Operation 133 [1/1] (0.60ns)   --->   "%store_ln41 = store i8 %window_buf_2_1_0_load, i8 %window_buf_2_1" [../src/sobel.cpp:41]   --->   Operation 133 'store' 'store_ln41' <Predicate = true> <Delay = 0.60>
ST_6 : Operation 134 [1/1] (0.60ns)   --->   "%store_ln41 = store i8 %window_buf_1_2_0_load, i8 %window_buf_1_1_1" [../src/sobel.cpp:41]   --->   Operation 134 'store' 'store_ln41' <Predicate = true> <Delay = 0.60>
ST_6 : Operation 135 [1/1] (0.60ns)   --->   "%store_ln41 = store i8 %window_buf_1_1_0_load, i8 %window_buf_1_1" [../src/sobel.cpp:41]   --->   Operation 135 'store' 'store_ln41' <Predicate = true> <Delay = 0.60>
ST_6 : Operation 136 [1/1] (0.60ns)   --->   "%store_ln41 = store i8 %window_buf_0_2_0_load, i8 %window_buf_0_1_1" [../src/sobel.cpp:41]   --->   Operation 136 'store' 'store_ln41' <Predicate = true> <Delay = 0.60>
ST_6 : Operation 137 [1/1] (0.60ns)   --->   "%store_ln41 = store i8 %window_buf_0_1_0_load, i8 %window_buf_0_1" [../src/sobel.cpp:41]   --->   Operation 137 'store' 'store_ln41' <Predicate = true> <Delay = 0.60>
ST_6 : Operation 138 [1/1] (0.60ns)   --->   "%br_ln41 = br void %split" [../src/sobel.cpp:41]   --->   Operation 138 'br' 'br_ln41' <Predicate = true> <Delay = 0.60>

State 7 <SV = 5> <Delay = 0.72>
ST_7 : Operation 139 [1/1] (0.00ns)   --->   "%yi = phi i9 %add_ln41, void, i9, void %split.preheader" [../src/sobel.cpp:41]   --->   Operation 139 'phi' 'yi' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 140 [1/1] (0.59ns)   --->   "%icmp_ln41 = icmp_eq  i9 %yi, i9" [../src/sobel.cpp:41]   --->   Operation 140 'icmp' 'icmp_ln41' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 141 [1/1] (0.00ns)   --->   "%empty_47 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64, i64, i64"   --->   Operation 141 'speclooptripcount' 'empty_47' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 142 [1/1] (0.71ns)   --->   "%add_ln41 = add i9 %yi, i9" [../src/sobel.cpp:41]   --->   Operation 142 'add' 'add_ln41' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 143 [1/1] (0.00ns)   --->   "%br_ln41 = br i1 %icmp_ln41, void %.split13, void" [../src/sobel.cpp:41]   --->   Operation 143 'br' 'br_ln41' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 144 [1/1] (0.00ns)   --->   "%specloopname_ln41 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [../src/sobel.cpp:41]   --->   Operation 144 'specloopname' 'specloopname_ln41' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_7 : Operation 145 [1/1] (0.00ns)   --->   "%trunc_ln55 = trunc i9 %yi" [../src/sobel.cpp:55]   --->   Operation 145 'trunc' 'trunc_ln55' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_7 : Operation 146 [1/1] (0.00ns)   --->   "%shl_ln = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i8.i8, i8 %trunc_ln55, i8" [../src/sobel.cpp:55]   --->   Operation 146 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_7 : Operation 147 [1/1] (0.00ns)   --->   "%tmp_1 = partselect i7 @_ssdm_op_PartSelect.i7.i9.i32.i32, i9 %yi, i32, i32" [../src/sobel.cpp:41]   --->   Operation 147 'partselect' 'tmp_1' <Predicate = (!icmp_ln41)> <Delay = 0.00>
ST_7 : Operation 148 [1/1] (0.59ns)   --->   "%icmp = icmp_eq  i7 %tmp_1, i7" [../src/sobel.cpp:41]   --->   Operation 148 'icmp' 'icmp' <Predicate = (!icmp_ln41)> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 149 [1/1] (0.59ns)   --->   "%cmp88_not = icmp_ugt  i9 %yi, i9" [../src/sobel.cpp:41]   --->   Operation 149 'icmp' 'cmp88_not' <Predicate = (!icmp_ln41)> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 150 [1/1] (0.12ns)   --->   "%or_ln120_1 = or i1 %icmp, i1 %cmp88_not" [../src/sobel.cpp:120]   --->   Operation 150 'or' 'or_ln120_1' <Predicate = (!icmp_ln41)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 151 [1/1] (0.60ns)   --->   "%br_ln42 = br void" [../src/sobel.cpp:42]   --->   Operation 151 'br' 'br_ln42' <Predicate = (!icmp_ln41)> <Delay = 0.60>
ST_7 : Operation 152 [1/1] (0.00ns)   --->   "%ret_ln131 = ret" [../src/sobel.cpp:131]   --->   Operation 152 'ret' 'ret_ln131' <Predicate = (icmp_ln41)> <Delay = 0.00>

State 8 <SV = 6> <Delay = 1.15>
ST_8 : Operation 153 [1/1] (0.00ns)   --->   "%xi = phi i9, void %.split13, i9 %add_ln42, void" [../src/sobel.cpp:42]   --->   Operation 153 'phi' 'xi' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 154 [1/1] (0.00ns)   --->   "%zext_ln42 = zext i9 %xi" [../src/sobel.cpp:42]   --->   Operation 154 'zext' 'zext_ln42' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 155 [1/1] (0.00ns)   --->   "%zext_ln42_1 = zext i9 %xi" [../src/sobel.cpp:42]   --->   Operation 155 'zext' 'zext_ln42_1' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 156 [1/1] (0.59ns)   --->   "%icmp_ln42 = icmp_eq  i9 %xi, i9" [../src/sobel.cpp:42]   --->   Operation 156 'icmp' 'icmp_ln42' <Predicate = true> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 157 [1/1] (0.71ns)   --->   "%add_ln42 = add i9 %xi, i9" [../src/sobel.cpp:42]   --->   Operation 157 'add' 'add_ln42' <Predicate = true> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 158 [1/1] (0.00ns)   --->   "%br_ln42 = br i1 %icmp_ln42, void %.split11, void" [../src/sobel.cpp:42]   --->   Operation 158 'br' 'br_ln42' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 159 [1/1] (0.00ns)   --->   "%line_buf_addr_1 = getelementptr i24 %line_buf, i64, i64 %zext_ln42" [../src/sobel.cpp:52]   --->   Operation 159 'getelementptr' 'line_buf_addr_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_8 : Operation 160 [2/2] (1.15ns)   --->   "%line_buf_load = load i8 %line_buf_addr_1" [../src/sobel.cpp:52]   --->   Operation 160 'load' 'line_buf_load' <Predicate = (!icmp_ln42)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 256> <RAM>
ST_8 : Operation 161 [1/1] (0.00ns)   --->   "%trunc_ln55_1 = trunc i9 %xi" [../src/sobel.cpp:55]   --->   Operation 161 'trunc' 'trunc_ln55_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_8 : Operation 162 [1/1] (0.78ns)   --->   "%add_ln55 = add i16 %zext_ln42_1, i16 %shl_ln" [../src/sobel.cpp:55]   --->   Operation 162 'add' 'add_ln55' <Predicate = (!icmp_ln42)> <Delay = 0.78> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 163 [1/1] (0.00ns)   --->   "%tmp_14 = partselect i7 @_ssdm_op_PartSelect.i7.i9.i32.i32, i9 %xi, i32, i32" [../src/sobel.cpp:120]   --->   Operation 163 'partselect' 'tmp_14' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_8 : Operation 164 [1/1] (0.59ns)   --->   "%icmp_ln120 = icmp_eq  i7 %tmp_14, i7" [../src/sobel.cpp:120]   --->   Operation 164 'icmp' 'icmp_ln120' <Predicate = (!icmp_ln42)> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 165 [1/1] (0.59ns)   --->   "%icmp_ln120_1 = icmp_ugt  i9 %xi, i9" [../src/sobel.cpp:120]   --->   Operation 165 'icmp' 'icmp_ln120_1' <Predicate = (!icmp_ln42)> <Delay = 0.59> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node or_ln120_2)   --->   "%or_ln120 = or i1 %icmp_ln120_1, i1 %icmp_ln120" [../src/sobel.cpp:120]   --->   Operation 166 'or' 'or_ln120' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 167 [1/1] (0.12ns) (out node of the LUT)   --->   "%or_ln120_2 = or i1 %or_ln120_1, i1 %or_ln120" [../src/sobel.cpp:120]   --->   Operation 167 'or' 'or_ln120_2' <Predicate = (!icmp_ln42)> <Delay = 0.12> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 168 [1/1] (0.00ns)   --->   "%br_ln120 = br i1 %or_ln120_2, void %bb68, void %bb" [../src/sobel.cpp:120]   --->   Operation 168 'br' 'br_ln120' <Predicate = (!icmp_ln42)> <Delay = 0.00>

State 9 <SV = 7> <Delay = 1.15>
ST_9 : Operation 169 [1/2] (1.15ns)   --->   "%line_buf_load = load i8 %line_buf_addr_1" [../src/sobel.cpp:52]   --->   Operation 169 'load' 'line_buf_load' <Predicate = (!icmp_ln42)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 256> <RAM>
ST_9 : Operation 170 [1/1] (0.00ns)   --->   "%window_buf_0_2 = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %line_buf_load, i32, i32" [../src/sobel.cpp:52]   --->   Operation 170 'partselect' 'window_buf_0_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_9 : Operation 171 [1/1] (0.00ns)   --->   "%window_buf_1_2 = partselect i8 @_ssdm_op_PartSelect.i8.i24.i32.i32, i24 %line_buf_load, i32, i32" [../src/sobel.cpp:52]   --->   Operation 171 'partselect' 'window_buf_1_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_9 : Operation 172 [1/1] (0.00ns)   --->   "%zext_ln55 = zext i16 %add_ln55" [../src/sobel.cpp:55]   --->   Operation 172 'zext' 'zext_ln55' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_9 : Operation 173 [1/1] (0.00ns)   --->   "%data_addr = getelementptr i8 %data, i64, i64 %zext_ln55" [../src/sobel.cpp:55]   --->   Operation 173 'getelementptr' 'data_addr' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_9 : Operation 174 [2/2] (1.15ns)   --->   "%window_buf_2_2 = load i16 %data_addr" [../src/sobel.cpp:55]   --->   Operation 174 'load' 'window_buf_2_2' <Predicate = (!icmp_ln42)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 65536> <RAM>
ST_9 : Operation 175 [1/1] (0.00ns)   --->   "%tmp_2 = partselect i16 @_ssdm_op_PartSelect.i16.i24.i32.i32, i24 %line_buf_load, i32, i32" [../src/sobel.cpp:55]   --->   Operation 175 'partselect' 'tmp_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>

State 10 <SV = 8> <Delay = 1.42>
ST_10 : Operation 176 [1/1] (0.00ns)   --->   "%window_buf_0_1_2 = load i8 %window_buf_0_1_1, void %store_ln41"   --->   Operation 176 'load' 'window_buf_0_1_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 177 [1/1] (0.00ns)   --->   "%window_buf_1_1_2 = load i8 %window_buf_1_1_1, void %store_ln41"   --->   Operation 177 'load' 'window_buf_1_1_2' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 178 [1/1] (0.00ns)   --->   "%window_buf_0_1_load = load i8 %window_buf_0_1, void %store_ln41" [../src/sobel.cpp:75]   --->   Operation 178 'load' 'window_buf_0_1_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_10 : Operation 179 [1/1] (0.00ns)   --->   "%window_buf_1_1_load = load i8 %window_buf_1_1, void %store_ln41" [../src/sobel.cpp:75]   --->   Operation 179 'load' 'window_buf_1_1_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_10 : Operation 180 [1/2] (1.15ns)   --->   "%window_buf_2_2 = load i16 %data_addr" [../src/sobel.cpp:55]   --->   Operation 180 'load' 'window_buf_2_2' <Predicate = (!icmp_ln42)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 65536> <RAM>
ST_10 : Operation 181 [1/1] (0.00ns)   --->   "%zext_ln75 = zext i8 %window_buf_0_1_load" [../src/sobel.cpp:75]   --->   Operation 181 'zext' 'zext_ln75' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_10 : Operation 182 [1/1] (0.00ns)   --->   "%zext_ln75_1 = zext i8 %window_buf_0_2" [../src/sobel.cpp:75]   --->   Operation 182 'zext' 'zext_ln75_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_10 : Operation 183 [1/1] (0.70ns)   --->   "%sub_ln75 = sub i9 %zext_ln75, i9 %zext_ln75_1" [../src/sobel.cpp:75]   --->   Operation 183 'sub' 'sub_ln75' <Predicate = (!icmp_ln42)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 184 [1/1] (0.00ns)   --->   "%sext_ln75 = sext i9 %sub_ln75" [../src/sobel.cpp:75]   --->   Operation 184 'sext' 'sext_ln75' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_10 : Operation 185 [1/1] (0.00ns)   --->   "%shl_ln1 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %window_buf_1_1_load, i1" [../src/sobel.cpp:75]   --->   Operation 185 'bitconcatenate' 'shl_ln1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_10 : Operation 186 [1/1] (0.00ns)   --->   "%zext_ln75_2 = zext i9 %shl_ln1" [../src/sobel.cpp:75]   --->   Operation 186 'zext' 'zext_ln75_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_10 : Operation 187 [1/1] (0.71ns)   --->   "%add_ln75 = add i11 %zext_ln75_2, i11 %sext_ln75" [../src/sobel.cpp:75]   --->   Operation 187 'add' 'add_ln75' <Predicate = (!icmp_ln42)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 188 [1/1] (0.00ns)   --->   "%shl_ln2 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %window_buf_0_1_2, i1" [../src/sobel.cpp:82]   --->   Operation 188 'bitconcatenate' 'shl_ln2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_10 : Operation 189 [1/1] (0.00ns)   --->   "%zext_ln82 = zext i9 %shl_ln2" [../src/sobel.cpp:82]   --->   Operation 189 'zext' 'zext_ln82' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_10 : Operation 190 [1/1] (0.70ns)   --->   "%add_ln82 = add i9 %zext_ln75_1, i9 %zext_ln75" [../src/sobel.cpp:82]   --->   Operation 190 'add' 'add_ln82' <Predicate = (!icmp_ln42)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 191 [1/1] (0.00ns)   --->   "%zext_ln82_1 = zext i9 %add_ln82" [../src/sobel.cpp:82]   --->   Operation 191 'zext' 'zext_ln82_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_10 : Operation 192 [1/1] (0.71ns)   --->   "%add_ln82_1 = add i10 %zext_ln82, i10 %zext_ln82_1" [../src/sobel.cpp:82]   --->   Operation 192 'add' 'add_ln82_1' <Predicate = (!icmp_ln42)> <Delay = 0.71> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 193 [1/1] (0.60ns)   --->   "%store_ln52 = store i8 %window_buf_1_2, i8 %window_buf_1_1_1, void %store_ln41, i8 %window_buf_1_1_2" [../src/sobel.cpp:52]   --->   Operation 193 'store' 'store_ln52' <Predicate = (!icmp_ln42)> <Delay = 0.60>
ST_10 : Operation 194 [1/1] (0.60ns)   --->   "%store_ln0 = store i8 %window_buf_1_1_2, i8 %window_buf_1_1, void %store_ln41, i8 %window_buf_1_1_load"   --->   Operation 194 'store' 'store_ln0' <Predicate = (!icmp_ln42)> <Delay = 0.60>
ST_10 : Operation 195 [1/1] (0.60ns)   --->   "%store_ln52 = store i8 %window_buf_0_2, i8 %window_buf_0_1_1, void %store_ln41, i8 %window_buf_0_1_2" [../src/sobel.cpp:52]   --->   Operation 195 'store' 'store_ln52' <Predicate = (!icmp_ln42)> <Delay = 0.60>
ST_10 : Operation 196 [1/1] (0.60ns)   --->   "%store_ln0 = store i8 %window_buf_0_1_2, i8 %window_buf_0_1, void %store_ln41, i8 %window_buf_0_1_load"   --->   Operation 196 'store' 'store_ln0' <Predicate = (!icmp_ln42)> <Delay = 0.60>

State 11 <SV = 9> <Delay = 1.51>
ST_11 : Operation 197 [1/1] (0.00ns)   --->   "%window_buf_2_1_2 = load i8 %window_buf_2_1_1, void %store_ln41"   --->   Operation 197 'load' 'window_buf_2_1_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 198 [1/1] (0.00ns)   --->   "%empty_48 = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64, i64, i64"   --->   Operation 198 'speclooptripcount' 'empty_48' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 199 [1/1] (0.00ns)   --->   "%window_buf_2_1_load = load i8 %window_buf_2_1, void %store_ln41" [../src/sobel.cpp:75]   --->   Operation 199 'load' 'window_buf_2_1_load' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_11 : Operation 200 [1/1] (0.00ns)   --->   "%tmp_6 = bitconcatenate i24 @_ssdm_op_BitConcatenate.i24.i8.i16, i8 %window_buf_2_2, i16 %tmp_2" [../src/sobel.cpp:55]   --->   Operation 200 'bitconcatenate' 'tmp_6' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_11 : Operation 201 [1/1] (1.15ns)   --->   "%store_ln55 = store void @_ssdm_op_Write.bram.i24, i8 %line_buf_addr_1, i24 %tmp_6, i3, i24 %line_buf_load" [../src/sobel.cpp:55]   --->   Operation 201 'store' 'store_ln55' <Predicate = (!icmp_ln42)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 24> <Depth = 256> <RAM>
ST_11 : Operation 202 [1/1] (0.00ns)   --->   "%shl_ln75_1 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %window_buf_1_2, i1" [../src/sobel.cpp:75]   --->   Operation 202 'bitconcatenate' 'shl_ln75_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_11 : Operation 203 [1/1] (0.00ns)   --->   "%zext_ln75_3 = zext i9 %shl_ln75_1" [../src/sobel.cpp:75]   --->   Operation 203 'zext' 'zext_ln75_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_11 : Operation 204 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln75_1 = sub i11 %add_ln75, i11 %zext_ln75_3" [../src/sobel.cpp:75]   --->   Operation 204 'sub' 'sub_ln75_1' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 205 [1/1] (0.00ns)   --->   "%zext_ln75_4 = zext i8 %window_buf_2_1_load" [../src/sobel.cpp:75]   --->   Operation 205 'zext' 'zext_ln75_4' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_11 : Operation 206 [1/1] (0.77ns) (root node of TernaryAdder)   --->   "%add_ln75_1 = add i11 %zext_ln75_4, i11 %sub_ln75_1" [../src/sobel.cpp:75]   --->   Operation 206 'add' 'add_ln75_1' <Predicate = (!icmp_ln42)> <Delay = 0.77> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 207 [1/1] (0.00ns)   --->   "%zext_ln75_5 = zext i8 %window_buf_2_2" [../src/sobel.cpp:75]   --->   Operation 207 'zext' 'zext_ln75_5' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_11 : Operation 208 [1/1] (0.73ns)   --->   "%sub_ln96 = sub i11 %add_ln75_1, i11 %zext_ln75_5" [../src/sobel.cpp:96]   --->   Operation 208 'sub' 'sub_ln96' <Predicate = (!icmp_ln42)> <Delay = 0.73> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 209 [1/1] (0.00ns)   --->   "%zext_ln82_2 = zext i10 %add_ln82_1" [../src/sobel.cpp:82]   --->   Operation 209 'zext' 'zext_ln82_2' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_11 : Operation 210 [1/1] (0.72ns)   --->   "%sub_ln82 = sub i11 %zext_ln82_2, i11 %zext_ln75_4" [../src/sobel.cpp:82]   --->   Operation 210 'sub' 'sub_ln82' <Predicate = (!icmp_ln42)> <Delay = 0.72> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 211 [1/1] (0.00ns)   --->   "%shl_ln82_1 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %window_buf_2_1_2, i1" [../src/sobel.cpp:82]   --->   Operation 211 'bitconcatenate' 'shl_ln82_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_11 : Operation 212 [1/1] (0.00ns)   --->   "%zext_ln82_3 = zext i9 %shl_ln82_1" [../src/sobel.cpp:82]   --->   Operation 212 'zext' 'zext_ln82_3' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_11 : Operation 213 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln82_1 = sub i11 %sub_ln82, i11 %zext_ln82_3" [../src/sobel.cpp:82]   --->   Operation 213 'sub' 'sub_ln82_1' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 214 [1/1] (0.77ns) (root node of TernaryAdder)   --->   "%sub_ln96_1 = sub i11 %sub_ln82_1, i11 %zext_ln75_5" [../src/sobel.cpp:96]   --->   Operation 214 'sub' 'sub_ln96_1' <Predicate = (!icmp_ln42)> <Delay = 0.77> <CoreInst = "TAddSub">   --->   Core 3 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.38> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_11 : Operation 215 [1/1] (0.61ns)   --->   "%icmp_ln95 = icmp_eq  i11 %add_ln75_1, i11 %zext_ln75_5" [../src/sobel.cpp:95]   --->   Operation 215 'icmp' 'icmp_ln95' <Predicate = (!icmp_ln42)> <Delay = 0.61> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 216 [1/1] (0.60ns)   --->   "%store_ln55 = store i8 %window_buf_2_2, i8 %window_buf_2_1_1, void %store_ln41, i8 %window_buf_2_1_2" [../src/sobel.cpp:55]   --->   Operation 216 'store' 'store_ln55' <Predicate = (!icmp_ln42)> <Delay = 0.60>
ST_11 : Operation 217 [1/1] (0.60ns)   --->   "%store_ln0 = store i8 %window_buf_2_1_2, i8 %window_buf_2_1, void %store_ln41, i8 %window_buf_2_1_load"   --->   Operation 217 'store' 'store_ln0' <Predicate = (!icmp_ln42)> <Delay = 0.60>
ST_11 : Operation 218 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 218 'br' 'br_ln0' <Predicate = (!icmp_ln42)> <Delay = 0.00>

State 12 <SV = 10> <Delay = 0.60>
ST_12 : Operation 219 [1/1] (0.00ns)   --->   "%sext_ln86 = sext i11 %sub_ln96_1" [../src/sobel.cpp:86]   --->   Operation 219 'sext' 'sext_ln86' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_12 : Operation 220 [4/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln86_1 = mul i22 %sext_ln86, i22 %sext_ln86" [../src/sobel.cpp:86]   --->   Operation 220 'mul' 'mul_ln86_1' <Predicate = (!icmp_ln42)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 221 [1/1] (0.60ns)   --->   "%br_ln95 = br i1 %icmp_ln95, void, void %.thread79" [../src/sobel.cpp:95]   --->   Operation 221 'br' 'br_ln95' <Predicate = (!icmp_ln42)> <Delay = 0.60>
ST_12 : Operation 222 [1/1] (0.00ns)   --->   "%sext_ln103 = sext i11 %sub_ln96" [../src/sobel.cpp:103]   --->   Operation 222 'sext' 'sext_ln103' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00>
ST_12 : Operation 223 [4/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln103 = mul i31 %sext_ln103, i31" [../src/sobel.cpp:103]   --->   Operation 223 'mul' 'mul_ln103' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_12 : Operation 224 [1/1] (0.00ns)   --->   "%sext_ln103_2 = sext i11 %sub_ln96" [../src/sobel.cpp:103]   --->   Operation 224 'sext' 'sext_ln103_2' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00>
ST_12 : Operation 225 [4/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln103_1 = mul i28 %sext_ln103_2, i28" [../src/sobel.cpp:103]   --->   Operation 225 'mul' 'mul_ln103_1' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 13 <SV = 11> <Delay = 0.99>
ST_13 : Operation 226 [1/1] (0.00ns)   --->   "%sext_ln82 = sext i11 %sub_ln96" [../src/sobel.cpp:82]   --->   Operation 226 'sext' 'sext_ln82' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_13 : Operation 227 [3/3] (0.99ns) (grouped into DSP with root node add_ln86)   --->   "%mul_ln86 = mul i22 %sext_ln82, i22 %sext_ln82" [../src/sobel.cpp:86]   --->   Operation 227 'mul' 'mul_ln86' <Predicate = (!icmp_ln42)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 228 [3/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln86_1 = mul i22 %sext_ln86, i22 %sext_ln86" [../src/sobel.cpp:86]   --->   Operation 228 'mul' 'mul_ln86_1' <Predicate = (!icmp_ln42)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 229 [3/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln103 = mul i31 %sext_ln103, i31" [../src/sobel.cpp:103]   --->   Operation 229 'mul' 'mul_ln103' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_13 : Operation 230 [3/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln103_1 = mul i28 %sext_ln103_2, i28" [../src/sobel.cpp:103]   --->   Operation 230 'mul' 'mul_ln103_1' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 14 <SV = 12> <Delay = 0.99>
ST_14 : Operation 231 [2/3] (0.99ns) (grouped into DSP with root node add_ln86)   --->   "%mul_ln86 = mul i22 %sext_ln82, i22 %sext_ln82" [../src/sobel.cpp:86]   --->   Operation 231 'mul' 'mul_ln86' <Predicate = (!icmp_ln42)> <Delay = 0.99> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 232 [2/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln86_1 = mul i22 %sext_ln86, i22 %sext_ln86" [../src/sobel.cpp:86]   --->   Operation 232 'mul' 'mul_ln86_1' <Predicate = (!icmp_ln42)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 233 [2/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln103 = mul i31 %sext_ln103, i31" [../src/sobel.cpp:103]   --->   Operation 233 'mul' 'mul_ln103' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_14 : Operation 234 [2/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln103_1 = mul i28 %sext_ln103_2, i28" [../src/sobel.cpp:103]   --->   Operation 234 'mul' 'mul_ln103_1' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 15 <SV = 13> <Delay = 1.14>
ST_15 : Operation 235 [1/3] (0.00ns) (grouped into DSP with root node add_ln86)   --->   "%mul_ln86 = mul i22 %sext_ln82, i22 %sext_ln82" [../src/sobel.cpp:86]   --->   Operation 235 'mul' 'mul_ln86' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 236 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln86_1 = mul i22 %sext_ln86, i22 %sext_ln86" [../src/sobel.cpp:86]   --->   Operation 236 'mul' 'mul_ln86_1' <Predicate = (!icmp_ln42)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 237 [2/2] (0.64ns) (root node of the DSP)   --->   "%add_ln86 = add i22 %mul_ln86_1, i22 %mul_ln86" [../src/sobel.cpp:86]   --->   Operation 237 'add' 'add_ln86' <Predicate = (!icmp_ln42)> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 238 [1/1] (0.00ns)   --->   "%shl_ln3 = bitconcatenate i19 @_ssdm_op_BitConcatenate.i19.i11.i8, i11 %sub_ln96_1, i8" [../src/sobel.cpp:96]   --->   Operation 238 'bitconcatenate' 'shl_ln3' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00>
ST_15 : Operation 239 [1/1] (0.00ns)   --->   "%sext_ln96_1 = sext i11 %sub_ln96" [../src/sobel.cpp:96]   --->   Operation 239 'sext' 'sext_ln96_1' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00>
ST_15 : Operation 240 [1/1] (0.00ns) (grouped into LUT with out node and_ln103)   --->   "%tmp_10 = bitselect i1 @_ssdm_op_BitSelect.i1.i20.i32, i20 %sext_ln96_1, i32" [../src/sobel.cpp:103]   --->   Operation 240 'bitselect' 'tmp_10' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00>
ST_15 : Operation 241 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln103 = mul i31 %sext_ln103, i31" [../src/sobel.cpp:103]   --->   Operation 241 'mul' 'mul_ln103' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 242 [1/1] (0.00ns)   --->   "%sext_ln103_1 = sext i19 %shl_ln3" [../src/sobel.cpp:103]   --->   Operation 242 'sext' 'sext_ln103_1' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00>
ST_15 : Operation 243 [1/1] (0.74ns)   --->   "%icmp_ln103 = icmp_slt  i31 %sext_ln103_1, i31 %mul_ln103" [../src/sobel.cpp:103]   --->   Operation 243 'icmp' 'icmp_ln103' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.74> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 244 [1/1] (0.74ns)   --->   "%icmp_ln103_1 = icmp_sgt  i31 %sext_ln103_1, i31 %mul_ln103" [../src/sobel.cpp:103]   --->   Operation 244 'icmp' 'icmp_ln103_1' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.74> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 245 [1/1] (0.00ns) (grouped into LUT with out node and_ln103)   --->   "%select_ln103 = select i1 %tmp_10, i1 %icmp_ln103, i1 %icmp_ln103_1" [../src/sobel.cpp:103]   --->   Operation 245 'select' 'select_ln103' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 246 [1/1] (0.00ns) (grouped into LUT with out node and_ln103)   --->   "%tmp_11 = bitselect i1 @_ssdm_op_BitSelect.i1.i20.i32, i20 %sext_ln96_1, i32" [../src/sobel.cpp:103]   --->   Operation 246 'bitselect' 'tmp_11' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00>
ST_15 : Operation 247 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln103_1 = mul i28 %sext_ln103_2, i28" [../src/sobel.cpp:103]   --->   Operation 247 'mul' 'mul_ln103_1' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 248 [1/1] (0.00ns)   --->   "%sext_ln103_3 = sext i19 %shl_ln3" [../src/sobel.cpp:103]   --->   Operation 248 'sext' 'sext_ln103_3' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00>
ST_15 : Operation 249 [1/1] (0.71ns)   --->   "%icmp_ln103_2 = icmp_slt  i28 %sext_ln103_3, i28 %mul_ln103_1" [../src/sobel.cpp:103]   --->   Operation 249 'icmp' 'icmp_ln103_2' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 250 [1/1] (0.00ns) (grouped into LUT with out node and_ln103)   --->   "%xor_ln103 = xor i1 %icmp_ln103_2, i1" [../src/sobel.cpp:103]   --->   Operation 250 'xor' 'xor_ln103' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 251 [1/1] (0.71ns)   --->   "%icmp_ln103_3 = icmp_slt  i28 %mul_ln103_1, i28 %sext_ln103_3" [../src/sobel.cpp:103]   --->   Operation 251 'icmp' 'icmp_ln103_3' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 252 [1/1] (0.00ns) (grouped into LUT with out node and_ln103)   --->   "%xor_ln103_1 = xor i1 %icmp_ln103_3, i1" [../src/sobel.cpp:103]   --->   Operation 252 'xor' 'xor_ln103_1' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 253 [1/1] (0.00ns) (grouped into LUT with out node and_ln103)   --->   "%select_ln103_1 = select i1 %tmp_11, i1 %xor_ln103, i1 %xor_ln103_1" [../src/sobel.cpp:103]   --->   Operation 253 'select' 'select_ln103_1' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_15 : Operation 254 [1/1] (0.27ns) (out node of the LUT)   --->   "%and_ln103 = and i1 %select_ln103, i1 %select_ln103_1" [../src/sobel.cpp:103]   --->   Operation 254 'and' 'and_ln103' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.27> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 255 [1/1] (0.00ns)   --->   "%sext_ln107 = sext i11 %sub_ln96" [../src/sobel.cpp:107]   --->   Operation 255 'sext' 'sext_ln107' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.00>
ST_15 : Operation 256 [4/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln107 = mul i28 %sext_ln107, i28" [../src/sobel.cpp:107]   --->   Operation 256 'mul' 'mul_ln107' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_15 : Operation 257 [1/1] (0.00ns)   --->   "%sext_ln107_2 = sext i11 %sub_ln96" [../src/sobel.cpp:107]   --->   Operation 257 'sext' 'sext_ln107_2' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.00>
ST_15 : Operation 258 [4/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln107_1 = mul i28 %sext_ln107_2, i28" [../src/sobel.cpp:107]   --->   Operation 258 'mul' 'mul_ln107_1' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 16 <SV = 14> <Delay = 0.64>
ST_16 : Operation 259 [1/2] (0.64ns) (root node of the DSP)   --->   "%add_ln86 = add i22 %mul_ln86_1, i22 %mul_ln86" [../src/sobel.cpp:86]   --->   Operation 259 'add' 'add_ln86' <Predicate = (!icmp_ln42)> <Delay = 0.64> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 260 [1/1] (0.61ns)   --->   "%br_ln103 = br i1 %and_ln103, void, void %._crit_edge" [../src/sobel.cpp:103]   --->   Operation 260 'br' 'br_ln103' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.61>
ST_16 : Operation 261 [3/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln107 = mul i28 %sext_ln107, i28" [../src/sobel.cpp:107]   --->   Operation 261 'mul' 'mul_ln107' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_16 : Operation 262 [3/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln107_1 = mul i28 %sext_ln107_2, i28" [../src/sobel.cpp:107]   --->   Operation 262 'mul' 'mul_ln107_1' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 17 <SV = 15> <Delay = 1.73>
ST_17 : Operation 263 [1/1] (0.00ns)   --->   "%sext_ln86_1 = sext i22 %add_ln86" [../src/sobel.cpp:86]   --->   Operation 263 'sext' 'sext_ln86_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_17 : Operation 264 [6/6] (1.73ns)   --->   "%x_assign = sitofp i32 %sext_ln86_1" [../src/sobel.cpp:86]   --->   Operation 264 'sitofp' 'x_assign' <Predicate = (!icmp_ln42)> <Delay = 1.73> <CoreInst = "Int2Float">   --->   Core 118 'Int2Float' <Latency = 5> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_17 : Operation 265 [2/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln107 = mul i28 %sext_ln107, i28" [../src/sobel.cpp:107]   --->   Operation 265 'mul' 'mul_ln107' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_17 : Operation 266 [2/4] (0.53ns) (root node of the DSP)   --->   "%mul_ln107_1 = mul i28 %sext_ln107_2, i28" [../src/sobel.cpp:107]   --->   Operation 266 'mul' 'mul_ln107_1' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.53> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>

State 18 <SV = 16> <Delay = 1.73>
ST_18 : Operation 267 [5/6] (1.73ns)   --->   "%x_assign = sitofp i32 %sext_ln86_1" [../src/sobel.cpp:86]   --->   Operation 267 'sitofp' 'x_assign' <Predicate = (!icmp_ln42)> <Delay = 1.73> <CoreInst = "Int2Float">   --->   Core 118 'Int2Float' <Latency = 5> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_18 : Operation 268 [1/1] (0.00ns)   --->   "%sext_ln96 = sext i19 %shl_ln3" [../src/sobel.cpp:96]   --->   Operation 268 'sext' 'sext_ln96' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00>
ST_18 : Operation 269 [24/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 269 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 270 [1/1] (0.00ns) (grouped into LUT with out node and_ln107)   --->   "%tmp_12 = bitselect i1 @_ssdm_op_BitSelect.i1.i20.i32, i20 %sext_ln96_1, i32" [../src/sobel.cpp:107]   --->   Operation 270 'bitselect' 'tmp_12' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.00>
ST_18 : Operation 271 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln107 = mul i28 %sext_ln107, i28" [../src/sobel.cpp:107]   --->   Operation 271 'mul' 'mul_ln107' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 272 [1/1] (0.00ns)   --->   "%sext_ln107_1 = sext i19 %shl_ln3" [../src/sobel.cpp:107]   --->   Operation 272 'sext' 'sext_ln107_1' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.00>
ST_18 : Operation 273 [1/1] (0.71ns)   --->   "%icmp_ln107 = icmp_slt  i28 %sext_ln107_1, i28 %mul_ln107" [../src/sobel.cpp:107]   --->   Operation 273 'icmp' 'icmp_ln107' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 274 [1/1] (0.71ns)   --->   "%icmp_ln107_1 = icmp_sgt  i28 %sext_ln107_1, i28 %mul_ln107" [../src/sobel.cpp:107]   --->   Operation 274 'icmp' 'icmp_ln107_1' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 275 [1/1] (0.00ns) (grouped into LUT with out node and_ln107)   --->   "%select_ln107 = select i1 %tmp_12, i1 %icmp_ln107, i1 %icmp_ln107_1" [../src/sobel.cpp:107]   --->   Operation 275 'select' 'select_ln107' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 276 [1/1] (0.00ns) (grouped into LUT with out node and_ln107)   --->   "%tmp_13 = bitselect i1 @_ssdm_op_BitSelect.i1.i20.i32, i20 %sext_ln96_1, i32" [../src/sobel.cpp:107]   --->   Operation 276 'bitselect' 'tmp_13' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.00>
ST_18 : Operation 277 [1/4] (0.00ns) (root node of the DSP)   --->   "%mul_ln107_1 = mul i28 %sext_ln107_2, i28" [../src/sobel.cpp:107]   --->   Operation 277 'mul' 'mul_ln107_1' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.00> <CoreInst = "DSP48">   --->   Core 71 'DSP48' <Latency = 3> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 2> <OutPorts = 1> <Sync> <CReg>
ST_18 : Operation 278 [1/1] (0.00ns)   --->   "%sext_ln107_3 = sext i19 %shl_ln3" [../src/sobel.cpp:107]   --->   Operation 278 'sext' 'sext_ln107_3' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.00>
ST_18 : Operation 279 [1/1] (0.71ns)   --->   "%icmp_ln107_2 = icmp_sgt  i28 %sext_ln107_3, i28 %mul_ln107_1" [../src/sobel.cpp:107]   --->   Operation 279 'icmp' 'icmp_ln107_2' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 280 [1/1] (0.71ns)   --->   "%icmp_ln107_3 = icmp_slt  i28 %sext_ln107_3, i28 %mul_ln107_1" [../src/sobel.cpp:107]   --->   Operation 280 'icmp' 'icmp_ln107_3' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.71> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_18 : Operation 281 [1/1] (0.00ns) (grouped into LUT with out node and_ln107)   --->   "%select_ln107_1 = select i1 %tmp_13, i1 %icmp_ln107_2, i1 %icmp_ln107_3" [../src/sobel.cpp:107]   --->   Operation 281 'select' 'select_ln107_1' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_18 : Operation 282 [1/1] (0.27ns) (out node of the LUT)   --->   "%and_ln107 = and i1 %select_ln107, i1 %select_ln107_1" [../src/sobel.cpp:107]   --->   Operation 282 'and' 'and_ln107' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.27> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 19 <SV = 17> <Delay = 1.73>
ST_19 : Operation 283 [4/6] (1.73ns)   --->   "%x_assign = sitofp i32 %sext_ln86_1" [../src/sobel.cpp:86]   --->   Operation 283 'sitofp' 'x_assign' <Predicate = (!icmp_ln42)> <Delay = 1.73> <CoreInst = "Int2Float">   --->   Core 118 'Int2Float' <Latency = 5> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_19 : Operation 284 [23/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 284 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 20 <SV = 18> <Delay = 1.73>
ST_20 : Operation 285 [3/6] (1.73ns)   --->   "%x_assign = sitofp i32 %sext_ln86_1" [../src/sobel.cpp:86]   --->   Operation 285 'sitofp' 'x_assign' <Predicate = (!icmp_ln42)> <Delay = 1.73> <CoreInst = "Int2Float">   --->   Core 118 'Int2Float' <Latency = 5> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_20 : Operation 286 [22/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 286 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 19> <Delay = 1.73>
ST_21 : Operation 287 [2/6] (1.73ns)   --->   "%x_assign = sitofp i32 %sext_ln86_1" [../src/sobel.cpp:86]   --->   Operation 287 'sitofp' 'x_assign' <Predicate = (!icmp_ln42)> <Delay = 1.73> <CoreInst = "Int2Float">   --->   Core 118 'Int2Float' <Latency = 5> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_21 : Operation 288 [21/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 288 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 20> <Delay = 1.73>
ST_22 : Operation 289 [1/6] (1.73ns)   --->   "%x_assign = sitofp i32 %sext_ln86_1" [../src/sobel.cpp:86]   --->   Operation 289 'sitofp' 'x_assign' <Predicate = (!icmp_ln42)> <Delay = 1.73> <CoreInst = "Int2Float">   --->   Core 118 'Int2Float' <Latency = 5> <II = 1> <Delay = 1.73> <FuncUnit> <Opcode : 'sitofp' 'uitofp'> <InPorts = 1> <OutPorts = 1>
ST_22 : Operation 290 [20/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 290 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 21> <Delay = 1.70>
ST_23 : Operation 291 [17/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 291 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_23 : Operation 292 [19/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 292 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 22> <Delay = 1.70>
ST_24 : Operation 293 [16/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 293 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_24 : Operation 294 [18/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 294 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 23> <Delay = 1.70>
ST_25 : Operation 295 [15/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 295 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_25 : Operation 296 [17/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 296 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 26 <SV = 24> <Delay = 1.70>
ST_26 : Operation 297 [14/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 297 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_26 : Operation 298 [16/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 298 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 25> <Delay = 1.70>
ST_27 : Operation 299 [13/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 299 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_27 : Operation 300 [15/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 300 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 26> <Delay = 1.70>
ST_28 : Operation 301 [12/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 301 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_28 : Operation 302 [14/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 302 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 27> <Delay = 1.70>
ST_29 : Operation 303 [11/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 303 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_29 : Operation 304 [13/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 304 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 28> <Delay = 1.70>
ST_30 : Operation 305 [10/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 305 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_30 : Operation 306 [12/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 306 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 29> <Delay = 1.70>
ST_31 : Operation 307 [9/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 307 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_31 : Operation 308 [11/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 308 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 30> <Delay = 1.70>
ST_32 : Operation 309 [8/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 309 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_32 : Operation 310 [10/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 310 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 31> <Delay = 1.70>
ST_33 : Operation 311 [7/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 311 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_33 : Operation 312 [9/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 312 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 32> <Delay = 1.70>
ST_34 : Operation 313 [6/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 313 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_34 : Operation 314 [8/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 314 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 33> <Delay = 1.70>
ST_35 : Operation 315 [5/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 315 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_35 : Operation 316 [7/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 316 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 34> <Delay = 1.70>
ST_36 : Operation 317 [4/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 317 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_36 : Operation 318 [6/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 318 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 37 <SV = 35> <Delay = 1.70>
ST_37 : Operation 319 [3/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 319 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_37 : Operation 320 [5/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 320 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 38 <SV = 36> <Delay = 1.70>
ST_38 : Operation 321 [2/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 321 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_38 : Operation 322 [4/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 322 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 39 <SV = 37> <Delay = 1.70>
ST_39 : Operation 323 [1/17] (1.70ns)   --->   "%f = fsqrt i32 @llvm.sqrt.f32, i32 %x_assign" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7]   --->   Operation 323 'fsqrt' 'f' <Predicate = (!icmp_ln42)> <Delay = 1.70> <CoreInst = "FSqrt">   --->   Core 91 'FSqrt' <Latency = 16> <II = 1> <Delay = 1.70> <FuncUnit> <Opcode : 'fsqrt'> <InPorts = 1> <OutPorts = 1>
ST_39 : Operation 324 [3/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 324 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 38> <Delay = 1.16>
ST_40 : Operation 325 [1/1] (0.00ns)   --->   "%p_Val2_s = bitcast i32 %f" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/src/hls/utils/x_hls_utils.h:311]   --->   Operation 325 'bitcast' 'p_Val2_s' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_40 : Operation 326 [1/1] (0.00ns)   --->   "%p_Result_s = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %p_Val2_s, i32"   --->   Operation 326 'bitselect' 'p_Result_s' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_40 : Operation 327 [1/1] (0.00ns)   --->   "%p_Repl2_1 = partselect i8 @_ssdm_op_PartSelect.i8.i32.i32.i32, i32 %p_Val2_s, i32, i32"   --->   Operation 327 'partselect' 'p_Repl2_1' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_40 : Operation 328 [1/1] (0.00ns)   --->   "%p_Repl2_s = trunc i32 %p_Val2_s"   --->   Operation 328 'trunc' 'p_Repl2_s' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_40 : Operation 329 [1/1] (0.00ns)   --->   "%zext_ln340 = zext i8 %p_Repl2_1" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/src/hls/utils/x_hls_utils.h:340]   --->   Operation 329 'zext' 'zext_ln340' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_40 : Operation 330 [1/1] (0.70ns)   --->   "%add_ln340 = add i9, i9 %zext_ln340" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/src/hls/utils/x_hls_utils.h:340]   --->   Operation 330 'add' 'add_ln340' <Predicate = (!icmp_ln42)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 331 [1/1] (0.00ns)   --->   "%isNeg = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %add_ln340, i32"   --->   Operation 331 'bitselect' 'isNeg' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_40 : Operation 332 [1/1] (0.70ns)   --->   "%sub_ln1311 = sub i8, i8 %p_Repl2_1"   --->   Operation 332 'sub' 'sub_ln1311' <Predicate = (!icmp_ln42)> <Delay = 0.70> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_40 : Operation 333 [1/1] (0.00ns)   --->   "%sext_ln1311 = sext i8 %sub_ln1311"   --->   Operation 333 'sext' 'sext_ln1311' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_40 : Operation 334 [1/1] (0.30ns)   --->   "%ush = select i1 %isNeg, i9 %sext_ln1311, i9 %add_ln340"   --->   Operation 334 'select' 'ush' <Predicate = (!icmp_ln42)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_40 : Operation 335 [2/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 335 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 39> <Delay = 1.16>
ST_41 : Operation 336 [1/1] (0.00ns)   --->   "%mantissa_V = bitconcatenate i25 @_ssdm_op_BitConcatenate.i25.i1.i23.i1, i1, i23 %p_Repl2_s, i1"   --->   Operation 336 'bitconcatenate' 'mantissa_V' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_41 : Operation 337 [1/1] (0.00ns)   --->   "%zext_ln15 = zext i25 %mantissa_V" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:15->/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117]   --->   Operation 337 'zext' 'zext_ln15' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_41 : Operation 338 [1/1] (0.00ns)   --->   "%sh_prom_i_i_i_cast_cast_cast = sext i9 %ush"   --->   Operation 338 'sext' 'sh_prom_i_i_i_cast_cast_cast' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_41 : Operation 339 [1/1] (0.00ns)   --->   "%sh_prom_i_i_i_cast_cast_cast_cast = zext i32 %sh_prom_i_i_i_cast_cast_cast"   --->   Operation 339 'zext' 'sh_prom_i_i_i_cast_cast_cast_cast' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_41 : Operation 340 [1/1] (0.00ns) (grouped into LUT with out node val_V)   --->   "%r_V = lshr i79 %zext_ln15, i79 %sh_prom_i_i_i_cast_cast_cast_cast"   --->   Operation 340 'lshr' 'r_V' <Predicate = (!icmp_ln42 & isNeg)> <Delay = 0.00> <CoreInst = "Shift">   --->   Core 13 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 341 [1/1] (0.00ns) (grouped into LUT with out node val_V)   --->   "%r_V_1 = shl i79 %zext_ln15, i79 %sh_prom_i_i_i_cast_cast_cast_cast"   --->   Operation 341 'shl' 'r_V_1' <Predicate = (!icmp_ln42 & !isNeg)> <Delay = 0.00> <CoreInst = "Shift">   --->   Core 13 'Shift' <Latency = 0> <II = 1> <Delay = 1.05> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 342 [1/1] (0.00ns) (grouped into LUT with out node val_V)   --->   "%tmp_8 = bitselect i1 @_ssdm_op_BitSelect.i1.i79.i32, i79 %r_V, i32"   --->   Operation 342 'bitselect' 'tmp_8' <Predicate = (!icmp_ln42 & isNeg)> <Delay = 0.00>
ST_41 : Operation 343 [1/1] (0.00ns) (grouped into LUT with out node val_V)   --->   "%zext_ln662 = zext i1 %tmp_8"   --->   Operation 343 'zext' 'zext_ln662' <Predicate = (!icmp_ln42 & isNeg)> <Delay = 0.00>
ST_41 : Operation 344 [1/1] (0.00ns) (grouped into LUT with out node val_V)   --->   "%tmp_s = partselect i32 @_ssdm_op_PartSelect.i32.i79.i32.i32, i79 %r_V_1, i32, i32"   --->   Operation 344 'partselect' 'tmp_s' <Predicate = (!icmp_ln42 & !isNeg)> <Delay = 0.00>
ST_41 : Operation 345 [1/1] (1.05ns) (out node of the LUT)   --->   "%val_V = select i1 %isNeg, i32 %zext_ln662, i32 %tmp_s"   --->   Operation 345 'select' 'val_V' <Predicate = (!icmp_ln42)> <Delay = 1.05> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_41 : Operation 346 [1/24] (1.16ns)   --->   "%t_int = sdiv i20 %sext_ln96, i20 %sext_ln96_1" [../src/sobel.cpp:96]   --->   Operation 346 'sdiv' 't_int' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 1.16> <CoreInst = "DivnS">   --->   Core 7 'DivnS' <Latency = 23> <II = 1> <Delay = 1.16> <FuncUnit> <Opcode : 'sdiv' 'srem' 'udiv' 'urem'> <InPorts = 2> <OutPorts = 1>
ST_41 : Operation 347 [1/1] (0.00ns)   --->   "%sext_ln96_2 = sext i20 %t_int" [../src/sobel.cpp:96]   --->   Operation 347 'sext' 'sext_ln96_2' <Predicate = (!icmp_ln42 & !icmp_ln95)> <Delay = 0.00>
ST_41 : Operation 348 [1/1] (0.61ns)   --->   "%br_ln107 = br i1 %and_ln107, void %.thread79, void %._crit_edge" [../src/sobel.cpp:107]   --->   Operation 348 'br' 'br_ln107' <Predicate = (!icmp_ln42 & !icmp_ln95 & !and_ln103)> <Delay = 0.61>

State 42 <SV = 40> <Delay = 1.10>
ST_42 : Operation 349 [1/1] (0.88ns)   --->   "%result_V_1 = sub i32, i32 %val_V"   --->   Operation 349 'sub' 'result_V_1' <Predicate = (!icmp_ln42 & p_Result_s)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 0.71> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 350 [1/1] (0.22ns)   --->   "%p_Val2_3 = select i1 %p_Result_s, i32 %result_V_1, i32 %val_V" [/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:59->/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117]   --->   Operation 350 'select' 'p_Val2_3' <Predicate = (!icmp_ln42)> <Delay = 0.22> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_42 : Operation 351 [1/1] (0.00ns)   --->   "%tmp_9 = partselect i24 @_ssdm_op_PartSelect.i24.i32.i32.i32, i32 %p_Val2_3, i32, i32" [../src/sobel.cpp:89]   --->   Operation 351 'partselect' 'tmp_9' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_42 : Operation 352 [1/1] (0.00ns)   --->   "%t_int_07883 = phi i32, void %.split11, i32 %sext_ln96_2, void" [../src/sobel.cpp:96]   --->   Operation 352 'phi' 't_int_07883' <Predicate = (!icmp_ln42 & !and_ln103 & !and_ln107) | (!icmp_ln42 & icmp_ln95)> <Delay = 0.00>
ST_42 : Operation 353 [1/1] (0.85ns)   --->   "%icmp_ln111 = icmp_sgt  i32 %t_int_07883, i32" [../src/sobel.cpp:111]   --->   Operation 353 'icmp' 'icmp_ln111' <Predicate = (!icmp_ln42 & !and_ln103 & !and_ln107) | (!icmp_ln42 & icmp_ln95)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 354 [1/1] (0.85ns)   --->   "%icmp_ln111_1 = icmp_slt  i32 %t_int_07883, i32" [../src/sobel.cpp:111]   --->   Operation 354 'icmp' 'icmp_ln111_1' <Predicate = (!icmp_ln42 & !and_ln103 & !and_ln107) | (!icmp_ln42 & icmp_ln95)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_42 : Operation 355 [1/1] (0.00ns)   --->   "%trunc_ln122 = trunc i32 %p_Val2_3" [../src/sobel.cpp:122]   --->   Operation 355 'trunc' 'trunc_ln122' <Predicate = (!or_ln120_2)> <Delay = 0.00>

State 43 <SV = 41> <Delay = 1.07>
ST_43 : Operation 356 [1/1] (0.00ns)   --->   "%specpipeline_ln42 = specpipeline void @_ssdm_op_SpecPipeline, i32, i32, i32, i32, void @empty_1" [../src/sobel.cpp:42]   --->   Operation 356 'specpipeline' 'specpipeline_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_43 : Operation 357 [1/1] (0.00ns)   --->   "%specloopname_ln42 = specloopname void @_ssdm_op_SpecLoopName, void @empty" [../src/sobel.cpp:42]   --->   Operation 357 'specloopname' 'specloopname_ln42' <Predicate = (!icmp_ln42)> <Delay = 0.00>
ST_43 : Operation 358 [1/1] (0.76ns)   --->   "%icmp_ln89 = icmp_sgt  i24 %tmp_9, i24" [../src/sobel.cpp:89]   --->   Operation 358 'icmp' 'icmp_ln89' <Predicate = (!icmp_ln42)> <Delay = 0.76> <CoreInst = "Cmp">   --->   Core 10 'Cmp' <Latency = 0> <II = 1> <Delay = 0.59> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 359 [1/1] (0.00ns) (grouped into LUT with out node select_ln111)   --->   "%and_ln111 = and i1 %icmp_ln111, i1 %icmp_ln111_1" [../src/sobel.cpp:111]   --->   Operation 359 'and' 'and_ln111' <Predicate = (!icmp_ln42 & !and_ln103 & !and_ln107) | (!icmp_ln42 & icmp_ln95)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 12 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.12> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_43 : Operation 360 [1/1] (0.30ns) (out node of the LUT)   --->   "%select_ln111 = select i1 %and_ln111, i8, i8" [../src/sobel.cpp:111]   --->   Operation 360 'select' 'select_ln111' <Predicate = (!icmp_ln42 & !and_ln103 & !and_ln107) | (!icmp_ln42 & icmp_ln95)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_43 : Operation 361 [1/1] (0.61ns)   --->   "%br_ln111 = br void %._crit_edge" [../src/sobel.cpp:111]   --->   Operation 361 'br' 'br_ln111' <Predicate = (!icmp_ln42 & !and_ln103 & !and_ln107) | (!icmp_ln42 & icmp_ln95)> <Delay = 0.61>
ST_43 : Operation 362 [1/1] (0.30ns)   --->   "%select_ln122 = select i1 %icmp_ln89, i8, i8 %trunc_ln122" [../src/sobel.cpp:122]   --->   Operation 362 'select' 'select_ln122' <Predicate = (!or_ln120_2)> <Delay = 0.30> <CoreInst = "Sel">   --->   Core 11 'Sel' <Latency = 0> <II = 1> <Delay = 0.30> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 44 <SV = 42> <Delay = 1.15>
ST_44 : Operation 363 [1/1] (0.00ns)   --->   "%grad_sobel = phi i8 %select_ln111, void %.thread79, i8, void, i8, void" [../src/sobel.cpp:111]   --->   Operation 363 'phi' 'grad_sobel' <Predicate = true> <Delay = 0.00>
ST_44 : Operation 364 [1/1] (0.00ns)   --->   "%add_ln1 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i8.i8, i8 %trunc_ln55, i8 %trunc_ln55_1" [../src/sobel.cpp:122]   --->   Operation 364 'bitconcatenate' 'add_ln1' <Predicate = (!or_ln120_2)> <Delay = 0.00>
ST_44 : Operation 365 [1/1] (0.00ns)   --->   "%zext_ln122 = zext i16 %add_ln1" [../src/sobel.cpp:122]   --->   Operation 365 'zext' 'zext_ln122' <Predicate = (!or_ln120_2)> <Delay = 0.00>
ST_44 : Operation 366 [1/1] (0.00ns)   --->   "%out_addr_1 = getelementptr i16 %out_r, i64, i64 %zext_ln122" [../src/sobel.cpp:122]   --->   Operation 366 'getelementptr' 'out_addr_1' <Predicate = (!or_ln120_2)> <Delay = 0.00>
ST_44 : Operation 367 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i8.i8, i8 %grad_sobel, i8 %select_ln122" [../src/sobel.cpp:123]   --->   Operation 367 'bitconcatenate' 'tmp' <Predicate = (!or_ln120_2)> <Delay = 0.00>
ST_44 : Operation 368 [1/1] (1.15ns)   --->   "%store_ln123 = store void @_ssdm_op_Write.bram.i16, i16 %out_addr_1, i16 %tmp, i2" [../src/sobel.cpp:123]   --->   Operation 368 'store' 'store_ln123' <Predicate = (!or_ln120_2)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 65536> <RAM>
ST_44 : Operation 369 [1/1] (0.00ns)   --->   "%br_ln124 = br void" [../src/sobel.cpp:124]   --->   Operation 369 'br' 'br_ln124' <Predicate = (!or_ln120_2)> <Delay = 0.00>
ST_44 : Operation 370 [1/1] (0.00ns)   --->   "%add_ln = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i8.i8, i8 %trunc_ln55, i8 %trunc_ln55_1" [../src/sobel.cpp:126]   --->   Operation 370 'bitconcatenate' 'add_ln' <Predicate = (or_ln120_2)> <Delay = 0.00>
ST_44 : Operation 371 [1/1] (0.00ns)   --->   "%zext_ln126 = zext i16 %add_ln" [../src/sobel.cpp:126]   --->   Operation 371 'zext' 'zext_ln126' <Predicate = (or_ln120_2)> <Delay = 0.00>
ST_44 : Operation 372 [1/1] (0.00ns)   --->   "%out_addr = getelementptr i16 %out_r, i64, i64 %zext_ln126" [../src/sobel.cpp:126]   --->   Operation 372 'getelementptr' 'out_addr' <Predicate = (or_ln120_2)> <Delay = 0.00>
ST_44 : Operation 373 [1/1] (0.00ns)   --->   "%shl_ln4 = bitconcatenate i16 @_ssdm_op_BitConcatenate.i16.i8.i8, i8 %grad_sobel, i8" [../src/sobel.cpp:127]   --->   Operation 373 'bitconcatenate' 'shl_ln4' <Predicate = (or_ln120_2)> <Delay = 0.00>
ST_44 : Operation 374 [1/1] (1.15ns)   --->   "%store_ln127 = store void @_ssdm_op_Write.bram.i16, i16 %out_addr, i16 %shl_ln4, i2" [../src/sobel.cpp:127]   --->   Operation 374 'store' 'store_ln127' <Predicate = (or_ln120_2)> <Delay = 1.15> <CoreInst = "RAM">   --->   Core 23 'RAM' <Latency = 1> <II = 1> <Delay = 1.15> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 16> <Depth = 65536> <RAM>
ST_44 : Operation 375 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 375 'br' 'br_ln0' <Predicate = (or_ln120_2)> <Delay = 0.00>

State 45 <SV = 10> <Delay = 0.00>
ST_45 : Operation 376 [1/1] (0.00ns)   --->   "%br_ln0 = br void %split"   --->   Operation 376 'br' 'br_ln0' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 2.5ns, clock uncertainty: 0.675ns.

 <State 1>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('empty') with incoming values : ('empty_28') [12]  (0.603 ns)

 <State 2>: 1.34ns
The critical path consists of the following:
	'phi' operation ('empty') with incoming values : ('empty_28') [12]  (0 ns)
	'icmp' operation ('empty_31') [25]  (0.637 ns)
	'select' operation ('empty_32') [26]  (0 ns)
	'sub' operation ('empty_34') [28]  (0.707 ns)

 <State 3>: 1.75ns
The critical path consists of the following:
	'select' operation ('empty_33') [27]  (0 ns)
	'shl' operation ('empty_38') [32]  (0 ns)
	'and' operation ('p_demorgan') [34]  (0 ns)
	'and' operation ('empty_40') [35]  (0.592 ns)
	'store' operation ('store_ln0') of constant <constant:_ssdm_op_Write.bram.i24> on array 'line_buf', ../src/sobel.cpp:22 [39]  (1.16 ns)

 <State 4>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('empty_42') with incoming values : ('empty_44') [50]  (0.603 ns)

 <State 5>: 1.71ns
The critical path consists of the following:
	'phi' operation ('phi_urem') with incoming values : ('idx_urem') [52]  (0 ns)
	'add' operation ('next_urem') [94]  (0.708 ns)
	'icmp' operation ('empty_46') [95]  (0.656 ns)
	'select' operation ('idx_urem') [96]  (0.351 ns)

 <State 6>: 0.603ns
The critical path consists of the following:
	'alloca' operation ('window_buf[2][1]') [104]  (0 ns)
	'store' operation ('store_ln41', ../src/sobel.cpp:41) of variable 'window_buf_2_2_0_load' on local variable 'window_buf[2][1]' [105]  (0.603 ns)

 <State 7>: 0.722ns
The critical path consists of the following:
	'phi' operation ('yi', ../src/sobel.cpp:41) with incoming values : ('add_ln41', ../src/sobel.cpp:41) [113]  (0 ns)
	'icmp' operation ('icmp', ../src/sobel.cpp:41) [123]  (0.6 ns)
	'or' operation ('or_ln120_1', ../src/sobel.cpp:120) [125]  (0.122 ns)

 <State 8>: 1.16ns
The critical path consists of the following:
	'phi' operation ('xi', ../src/sobel.cpp:42) with incoming values : ('add_ln42', ../src/sobel.cpp:42) [128]  (0 ns)
	'getelementptr' operation ('line_buf_addr_1', ../src/sobel.cpp:52) [144]  (0 ns)
	'load' operation ('line_buf_load', ../src/sobel.cpp:52) on array 'line_buf', ../src/sobel.cpp:22 [145]  (1.16 ns)

 <State 9>: 1.16ns
The critical path consists of the following:
	'load' operation ('line_buf_load', ../src/sobel.cpp:52) on array 'line_buf', ../src/sobel.cpp:22 [145]  (1.16 ns)

 <State 10>: 1.42ns
The critical path consists of the following:
	'load' operation ('window_buf_0_1_load', ../src/sobel.cpp:75) on local variable 'window_buf[0][1]' [139]  (0 ns)
	'sub' operation ('sub_ln75', ../src/sobel.cpp:75) [158]  (0.705 ns)
	'add' operation ('add_ln75', ../src/sobel.cpp:75) [162]  (0.715 ns)

 <State 11>: 1.51ns
The critical path consists of the following:
	'load' operation ('window_buf_2_1_load', ../src/sobel.cpp:75) on local variable 'window_buf[2][1]' [141]  (0 ns)
	'add' operation ('add_ln75_1', ../src/sobel.cpp:75) [167]  (0.777 ns)
	'sub' operation ('sub_ln96', ../src/sobel.cpp:96) [169]  (0.735 ns)

 <State 12>: 0.603ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('t_int_07883', ../src/sobel.cpp:96) with incoming values : ('sext_ln96_2', ../src/sobel.cpp:96) [257]  (0.603 ns)

 <State 13>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[185] ('mul_ln86', ../src/sobel.cpp:86) [183]  (0.996 ns)

 <State 14>: 0.996ns
The critical path consists of the following:
	'mul' operation of DSP[185] ('mul_ln86', ../src/sobel.cpp:86) [183]  (0.996 ns)

 <State 15>: 1.14ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln103', ../src/sobel.cpp:103) [225]  (0.745 ns)
	'select' operation ('select_ln103', ../src/sobel.cpp:103) [227]  (0 ns)
	'and' operation ('and_ln103', ../src/sobel.cpp:103) [237]  (0.278 ns)
	blocking operation 0.122 ns on control path)

 <State 16>: 0.645ns
The critical path consists of the following:
	'add' operation of DSP[185] ('add_ln86', ../src/sobel.cpp:86) [185]  (0.645 ns)

 <State 17>: 1.73ns
The critical path consists of the following:
	'sitofp' operation ('x', ../src/sobel.cpp:86) [187]  (1.73 ns)

 <State 18>: 1.73ns
The critical path consists of the following:
	'sitofp' operation ('x', ../src/sobel.cpp:86) [187]  (1.73 ns)

 <State 19>: 1.73ns
The critical path consists of the following:
	'sitofp' operation ('x', ../src/sobel.cpp:86) [187]  (1.73 ns)

 <State 20>: 1.73ns
The critical path consists of the following:
	'sitofp' operation ('x', ../src/sobel.cpp:86) [187]  (1.73 ns)

 <State 21>: 1.73ns
The critical path consists of the following:
	'sitofp' operation ('x', ../src/sobel.cpp:86) [187]  (1.73 ns)

 <State 22>: 1.73ns
The critical path consists of the following:
	'sitofp' operation ('x', ../src/sobel.cpp:86) [187]  (1.73 ns)

 <State 23>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 24>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 25>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 26>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 27>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 28>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 29>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 30>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 31>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 32>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 33>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 34>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 35>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 36>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 37>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 38>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 39>: 1.7ns
The critical path consists of the following:
	'fsqrt' operation ('x', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/src/c++/sqrtfloat.cpp:7) [188]  (1.7 ns)

 <State 40>: 1.17ns
The critical path consists of the following:
	'sdiv' operation ('t_int', ../src/sobel.cpp:96) [219]  (1.17 ns)

 <State 41>: 1.17ns
The critical path consists of the following:
	'sdiv' operation ('t_int', ../src/sobel.cpp:96) [219]  (1.17 ns)

 <State 42>: 1.11ns
The critical path consists of the following:
	'sub' operation ('result.V') [209]  (0.88 ns)
	'select' operation ('__Val2__', /wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:59->/wrk/2020.1/continuous/2020_05_27_2902540/src/shared/hls/clib/hlsmath/include/FloatingPoint/hls_case_IEEE754.h:117) [210]  (0.227 ns)

 <State 43>: 1.07ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln89', ../src/sobel.cpp:89) [212]  (0.768 ns)
	'select' operation ('select_ln122', ../src/sobel.cpp:122) [273]  (0.303 ns)

 <State 44>: 1.16ns
The critical path consists of the following:
	'phi' operation ('grad_sobel', ../src/sobel.cpp:111) with incoming values : ('select_ln111', ../src/sobel.cpp:111) [264]  (0 ns)
	'store' operation ('store_ln127', ../src/sobel.cpp:127) of constant <constant:_ssdm_op_Write.bram.i16> on array 'out_r' [285]  (1.16 ns)

 <State 45>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42
	State 43
	State 44
	State 45


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
