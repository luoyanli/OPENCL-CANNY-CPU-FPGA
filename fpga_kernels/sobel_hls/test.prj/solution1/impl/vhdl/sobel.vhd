-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    data_ce0 : OUT STD_LOGIC;
    data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    out_r_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    out_r_ce0 : OUT STD_LOGIC;
    out_r_we0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    out_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of sobel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sobel_sobel,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.750000,HLS_SYN_LAT=76046,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=2636,HLS_SYN_LUT=2212,HLS_VERSION=2020_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv10_300 : STD_LOGIC_VECTOR (9 downto 0) := "1100000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv24_FFFFFF : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_16 : STD_LOGIC_VECTOR (7 downto 0) := "00010110";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv9_100 : STD_LOGIC_VECTOR (8 downto 0) := "100000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv9_FC : STD_LOGIC_VECTOR (8 downto 0) := "011111100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_26A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001101010";
    constant ap_const_lv8_2D : STD_LOGIC_VECTOR (7 downto 0) := "00101101";
    constant ap_const_lv8_5A : STD_LOGIC_VECTOR (7 downto 0) := "01011010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv31_7FFFFD96 : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111110110010110";
    constant ap_const_lv28_FFFFF96 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111110010110";
    constant ap_const_lv28_6B : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000001101011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal empty_reg_296 : STD_LOGIC_VECTOR (9 downto 0);
    signal xi_reg_351 : STD_LOGIC_VECTOR (8 downto 0);
    signal exitcond6716_fu_396_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond6716_reg_1428 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal empty_28_fu_402_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal empty_29_fu_408_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_29_reg_1437 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_412_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_5_reg_1442 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_7_fu_422_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_7_reg_1447 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_30_fu_430_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_30_reg_1452 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_31_fu_436_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_31_reg_1457 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_34_fu_450_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_34_reg_1463 : STD_LOGIC_VECTOR (4 downto 0);
    signal window_buf_0_1_0_load_reg_1504 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal window_buf_0_2_0_load_reg_1509 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_1_0_load_reg_1514 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_2_0_load_reg_1519 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_1_0_load_reg_1524 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_2_0_load_reg_1529 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_44_fu_538_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal next_mul_fu_544_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond6615_fu_532_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_urem_fu_606_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln41_fu_638_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln41_fu_644_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln41_reg_1604 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln55_fu_650_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_reg_1609 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_654_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_reg_1615 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln120_1_fu_684_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_1_reg_1620 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_fu_699_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state8_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state12_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state13_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state14_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp2_stage0_iter7 : BOOLEAN;
    signal ap_block_state16_pp2_stage0_iter8 : BOOLEAN;
    signal ap_block_state17_pp2_stage0_iter9 : BOOLEAN;
    signal ap_block_state18_pp2_stage0_iter10 : BOOLEAN;
    signal ap_block_state19_pp2_stage0_iter11 : BOOLEAN;
    signal ap_block_state20_pp2_stage0_iter12 : BOOLEAN;
    signal ap_block_state21_pp2_stage0_iter13 : BOOLEAN;
    signal ap_block_state22_pp2_stage0_iter14 : BOOLEAN;
    signal ap_block_state23_pp2_stage0_iter15 : BOOLEAN;
    signal ap_block_state24_pp2_stage0_iter16 : BOOLEAN;
    signal ap_block_state25_pp2_stage0_iter17 : BOOLEAN;
    signal ap_block_state26_pp2_stage0_iter18 : BOOLEAN;
    signal ap_block_state27_pp2_stage0_iter19 : BOOLEAN;
    signal ap_block_state28_pp2_stage0_iter20 : BOOLEAN;
    signal ap_block_state29_pp2_stage0_iter21 : BOOLEAN;
    signal ap_block_state30_pp2_stage0_iter22 : BOOLEAN;
    signal ap_block_state31_pp2_stage0_iter23 : BOOLEAN;
    signal ap_block_state32_pp2_stage0_iter24 : BOOLEAN;
    signal ap_block_state33_pp2_stage0_iter25 : BOOLEAN;
    signal ap_block_state34_pp2_stage0_iter26 : BOOLEAN;
    signal ap_block_state35_pp2_stage0_iter27 : BOOLEAN;
    signal ap_block_state36_pp2_stage0_iter28 : BOOLEAN;
    signal ap_block_state37_pp2_stage0_iter29 : BOOLEAN;
    signal ap_block_state38_pp2_stage0_iter30 : BOOLEAN;
    signal ap_block_state39_pp2_stage0_iter31 : BOOLEAN;
    signal ap_block_state40_pp2_stage0_iter32 : BOOLEAN;
    signal ap_block_state41_pp2_stage0_iter33 : BOOLEAN;
    signal ap_block_state42_pp2_stage0_iter34 : BOOLEAN;
    signal ap_block_state43_pp2_stage0_iter35 : BOOLEAN;
    signal ap_block_state44_pp2_stage0_iter36 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln42_reg_1625_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln42_reg_1625_pp2_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln42_fu_705_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal line_buf_addr_1_reg_1634 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buf_addr_1_reg_1634_pp2_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buf_addr_1_reg_1634_pp2_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_fu_711_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter8_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter9_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter10_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter11_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter12_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter13_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter14_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter15_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter16_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter17_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter18_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter19_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter20_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter21_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter22_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter23_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter24_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter25_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter26_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter27_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter28_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter29_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter30_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter31_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter32_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter33_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter34_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln55_1_reg_1640_pp2_iter35_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln55_fu_715_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln55_reg_1646 : STD_LOGIC_VECTOR (15 downto 0);
    signal or_ln120_2_fu_748_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_2_reg_1651_pp2_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal window_buf_0_2_reg_1655 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_2_reg_1661 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_2_reg_1661_pp2_iter2_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_2_reg_1672 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_reg_1672_pp2_iter2_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal window_buf_2_2_reg_1677 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln75_fu_828_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln75_reg_1684 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln82_1_fu_856_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln82_1_reg_1689 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln96_fu_922_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln96_reg_1694 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln96_reg_1694_pp2_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln96_reg_1694_pp2_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln96_reg_1694_pp2_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln96_1_fu_955_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln96_1_reg_1704 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln96_1_reg_1704_pp2_iter4_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln96_1_reg_1704_pp2_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln96_1_reg_1704_pp2_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln95_fu_961_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1710_pp2_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln86_fu_976_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal sext_ln82_fu_985_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1382_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln3_fu_988_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln3_reg_1741 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln3_reg_1741_pp2_iter8_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln3_reg_1741_pp2_iter9_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln96_1_fu_995_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln96_1_reg_1748 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln96_1_reg_1748_pp2_iter8_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln96_1_reg_1748_pp2_iter9_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal and_ln103_fu_1070_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln103_reg_1755_pp2_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1404_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln86_reg_1769 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_enable_reg_pp2_iter8 : STD_LOGIC := '0';
    signal and_ln107_fu_1150_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln107_reg_1784_pp2_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_388_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_1788 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_391_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_reg_1793 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_1798 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1798_pp2_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_s_fu_1177_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Repl2_s_reg_1803 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_fu_1191_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_1808 : STD_LOGIC_VECTOR (0 downto 0);
    signal ush_fu_1209_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_reg_1813 : STD_LOGIC_VECTOR (8 downto 0);
    signal val_V_fu_1271_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_V_reg_1818 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln96_2_fu_1278_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_1829 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln111_fu_1303_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_reg_1834 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_1_fu_1309_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln111_1_reg_1839 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln122_fu_1315_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln122_reg_1844 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln111_fu_1328_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln122_fu_1336_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln122_reg_1854 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_condition_pp2_exit_iter3_state11 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter36 : STD_LOGIC := '0';
    signal line_buf_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buf_ce0 : STD_LOGIC;
    signal line_buf_we0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buf_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buf_address1 : STD_LOGIC_VECTOR (7 downto 0);
    signal line_buf_ce1 : STD_LOGIC;
    signal line_buf_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_42_reg_307 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal phi_mul_reg_318 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_urem_reg_329 : STD_LOGIC_VECTOR (3 downto 0);
    signal yi_reg_340 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_phi_reg_pp2_iter0_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter1_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter2_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter3_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter4_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter5_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter6_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter7_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter8_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter9_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter10_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter11_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter12_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter13_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter14_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter15_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter16_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter17_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter18_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter19_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter20_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter21_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter22_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter23_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter24_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter25_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter26_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter27_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter28_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter29_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter30_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter31_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter32_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter33_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter34_t_int_07883_reg_362 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter1_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter2_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter3_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter4_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter5_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter6_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter7_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter8_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter9_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter10_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter11_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter12_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter13_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter14_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter15_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter16_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter17_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter18_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter19_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter20_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter21_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter22_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter23_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter24_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter25_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter26_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter27_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter28_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter29_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter30_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter31_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter32_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter33_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter34_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter35_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter36_grad_sobel_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast7_fu_456_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln42_fu_690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal zext_ln55_fu_773_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln122_fu_1349_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln126_fu_1368_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal window_buf_0_1_fu_218 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_0_1_1_fu_222 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_1_fu_226 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_1_1_fu_230 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_1_fu_234 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_1_1_fu_238 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_40_fu_497_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mask_fu_507_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_6_fu_886_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_fu_1354_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln4_fu_1373_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_388_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_32_fu_442_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_33_fu_460_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_35_fu_465_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_36_fu_469_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_38_fu_479_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_39_fu_485_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_37_fu_472_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_demorgan_fu_491_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_41_fu_504_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal next_urem_fu_594_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_46_fu_600_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_662_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_fu_672_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp88_not_fu_678_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln42_1_fu_695_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_14_fu_720_p4 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln120_1_fu_736_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln120_fu_730_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln120_fu_742_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln75_fu_799_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln75_1_fu_803_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln75_fu_806_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1_fu_816_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln75_2_fu_824_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln75_fu_812_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln2_fu_834_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln82_fu_846_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln82_fu_842_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln82_1_fu_852_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln75_1_fu_893_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln75_3_fu_900_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln75_4_fu_909_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln75_1_fu_904_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln75_1_fu_913_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln75_5_fu_919_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln82_2_fu_928_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln82_1_fu_937_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln82_fu_931_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln82_3_fu_945_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln82_1_fu_949_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln103_1_fu_1006_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1388_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_10_fu_998_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_fu_1010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_1_fu_1015_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln103_3_fu_1036_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1396_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln103_2_fu_1040_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln103_3_fu_1051_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1028_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln103_fu_1045_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln103_1_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln103_fu_1020_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln103_1_fu_1062_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1089_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal grp_fu_1089_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln107_1_fu_1101_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1412_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_12_fu_1094_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_fu_1104_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_1_fu_1109_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln107_3_fu_1129_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1420_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_13_fu_1122_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_2_fu_1132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln107_3_fu_1137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln107_fu_1114_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln107_1_fu_1142_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_1156_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_1_fu_1167_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln340_fu_1181_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln340_fu_1185_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1311_fu_1199_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1311_fu_1205_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_V_fu_1217_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sh_prom_i_i_i_cast_cast_cast_fu_1230_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_1226_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal sh_prom_i_i_i_cast_cast_cast_cast_fu_1233_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_fu_1237_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_8_fu_1249_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_1243_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln662_fu_1257_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_1261_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1089_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal result_V_1_fu_1282_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_1287_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln111_fu_1324_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln89_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1_fu_1343_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln_fu_1362_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1382_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1382_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1388_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1396_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1404_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1404_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1412_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1420_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_condition_962 : BOOLEAN;
    signal ap_condition_910 : BOOLEAN;
    signal ap_condition_617 : BOOLEAN;
    signal ap_condition_959 : BOOLEAN;

    component sobel_sitofp_32s_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sobel_fsqrt_32ns_32ns_32_17_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component sobel_sdiv_20s_11s_20_24_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component sobel_mul_mul_11s_11s_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component sobel_mul_mul_11s_11s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component sobel_mul_mul_11s_8s_28_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component sobel_mac_muladd_11s_11s_22s_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component sobel_mul_mul_11s_8ns_28_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component sobel_line_buf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (2 downto 0);
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    line_buf_U : component sobel_line_buf
    generic map (
        DataWidth => 24,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buf_address0,
        ce0 => line_buf_ce0,
        we0 => line_buf_we0,
        d0 => line_buf_d0,
        address1 => line_buf_address1,
        ce1 => line_buf_ce1,
        q1 => line_buf_q1);

    sitofp_32s_32_6_no_dsp_1_U1 : component sobel_sitofp_32s_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_388_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_388_p1);

    fsqrt_32ns_32ns_32_17_no_dsp_1_U2 : component sobel_fsqrt_32ns_32ns_32_17_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 17,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => x_assign_reg_1788,
        ce => ap_const_logic_1,
        dout => grp_fu_391_p2);

    sdiv_20s_11s_20_24_1_U3 : component sobel_sdiv_20s_11s_20_24_1
    generic map (
        ID => 1,
        NUM_STAGE => 24,
        din0_WIDTH => 20,
        din1_WIDTH => 11,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1089_p0,
        din1 => grp_fu_1089_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1089_p2);

    mul_mul_11s_11s_22_4_1_U4 : component sobel_mul_mul_11s_11s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1382_p0,
        din1 => grp_fu_1382_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1382_p2);

    mul_mul_11s_11s_31_4_1_U5 : component sobel_mul_mul_11s_11s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln96_reg_1694,
        din1 => grp_fu_1388_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1388_p2);

    mul_mul_11s_8s_28_4_1_U6 : component sobel_mul_mul_11s_8s_28_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln96_reg_1694,
        din1 => grp_fu_1396_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1396_p2);

    mac_muladd_11s_11s_22s_22_4_1_U7 : component sobel_mac_muladd_11s_11s_22s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1404_p0,
        din1 => grp_fu_1404_p1,
        din2 => grp_fu_1382_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1404_p3);

    mul_mul_11s_8s_28_4_1_U8 : component sobel_mul_mul_11s_8s_28_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln96_reg_1694_pp2_iter6_reg,
        din1 => grp_fu_1412_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1412_p2);

    mul_mul_11s_8ns_28_4_1_U9 : component sobel_mul_mul_11s_8ns_28_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln96_reg_1694_pp2_iter6_reg,
        din1 => grp_fu_1420_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1420_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp2_flush_enable)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_fu_638_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter24 <= ap_enable_reg_pp2_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter25 <= ap_enable_reg_pp2_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter26 <= ap_enable_reg_pp2_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter27 <= ap_enable_reg_pp2_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter28 <= ap_enable_reg_pp2_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter29 <= ap_enable_reg_pp2_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter30 <= ap_enable_reg_pp2_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter31 <= ap_enable_reg_pp2_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter32 <= ap_enable_reg_pp2_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter33 <= ap_enable_reg_pp2_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter34 <= ap_enable_reg_pp2_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter35 <= ap_enable_reg_pp2_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter36 <= ap_enable_reg_pp2_iter35;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_fu_638_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp2_iter36 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter3_state11)) then 
                        ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter2;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp2_iter34_grad_sobel_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter33 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_962)) then 
                    ap_phi_reg_pp2_iter34_grad_sobel_reg_373 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter34_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter33_grad_sobel_reg_373;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter34_t_int_07883_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter33 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_910)) then 
                    ap_phi_reg_pp2_iter34_t_int_07883_reg_362 <= sext_ln96_2_fu_1278_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter34_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter33_t_int_07883_reg_362;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter36_grad_sobel_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter35 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_617)) then 
                    ap_phi_reg_pp2_iter36_grad_sobel_reg_373 <= select_ln111_fu_1328_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter36_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter35_grad_sobel_reg_373;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter5_t_int_07883_reg_362_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                if (((icmp_ln95_reg_1710 = ap_const_lv1_1) and (icmp_ln42_reg_1625_pp2_iter3_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter5_t_int_07883_reg_362 <= ap_const_lv32_7FFFFFFF;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter5_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter4_t_int_07883_reg_362;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter9_grad_sobel_reg_373_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter8 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_959)) then 
                    ap_phi_reg_pp2_iter9_grad_sobel_reg_373 <= ap_const_lv8_87;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter9_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter8_grad_sobel_reg_373;
                end if;
            end if; 
        end if;
    end process;

    empty_42_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                empty_42_reg_307 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond6615_fu_532_p2 = ap_const_lv1_0))) then 
                empty_42_reg_307 <= empty_44_fu_538_p2;
            end if; 
        end if;
    end process;

    empty_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6716_fu_396_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                empty_reg_296 <= empty_28_fu_402_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_reg_296 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    phi_mul_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_mul_reg_318 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond6615_fu_532_p2 = ap_const_lv1_0))) then 
                phi_mul_reg_318 <= next_mul_fu_544_p2;
            end if; 
        end if;
    end process;

    phi_urem_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_urem_reg_329 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond6615_fu_532_p2 = ap_const_lv1_0))) then 
                phi_urem_reg_329 <= idx_urem_fu_606_p3;
            end if; 
        end if;
    end process;

    window_buf_0_1_1_fu_222_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter1_reg = ap_const_lv1_0))) then 
                window_buf_0_1_1_fu_222 <= window_buf_0_2_reg_1655;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_0_1_1_fu_222 <= window_buf_0_2_0_load_reg_1509;
            end if; 
        end if;
    end process;

    window_buf_0_1_fu_218_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter1_reg = ap_const_lv1_0))) then 
                window_buf_0_1_fu_218 <= window_buf_0_1_1_fu_222;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_0_1_fu_218 <= window_buf_0_1_0_load_reg_1504;
            end if; 
        end if;
    end process;

    window_buf_1_1_1_fu_230_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter1_reg = ap_const_lv1_0))) then 
                window_buf_1_1_1_fu_230 <= window_buf_1_2_reg_1661;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_1_1_1_fu_230 <= window_buf_1_2_0_load_reg_1519;
            end if; 
        end if;
    end process;

    window_buf_1_1_fu_226_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter1_reg = ap_const_lv1_0))) then 
                window_buf_1_1_fu_226 <= window_buf_1_1_1_fu_230;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_1_1_fu_226 <= window_buf_1_1_0_load_reg_1514;
            end if; 
        end if;
    end process;

    window_buf_2_1_1_fu_238_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter2_reg = ap_const_lv1_0))) then 
                window_buf_2_1_1_fu_238 <= window_buf_2_2_reg_1677;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_2_1_1_fu_238 <= window_buf_2_2_0_load_reg_1529;
            end if; 
        end if;
    end process;

    window_buf_2_1_fu_234_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter2_reg = ap_const_lv1_0))) then 
                window_buf_2_1_fu_234 <= window_buf_2_1_1_fu_238;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_2_1_fu_234 <= window_buf_2_1_0_load_reg_1524;
            end if; 
        end if;
    end process;

    xi_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln42_fu_699_p2 = ap_const_lv1_0))) then 
                xi_reg_351 <= add_ln42_fu_705_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_fu_638_p2 = ap_const_lv1_0))) then 
                xi_reg_351 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    yi_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                yi_reg_340 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                yi_reg_340 <= add_ln41_reg_1604;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln41_reg_1604 <= add_ln41_fu_644_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln42_fu_699_p2 = ap_const_lv1_0))) then
                add_ln55_reg_1646 <= add_ln55_fu_715_p2;
                line_buf_addr_1_reg_1634 <= zext_ln42_fu_690_p1(8 - 1 downto 0);
                or_ln120_2_reg_1651 <= or_ln120_2_fu_748_p2;
                trunc_ln55_1_reg_1640 <= trunc_ln55_1_fu_711_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter1_reg = ap_const_lv1_0))) then
                add_ln75_reg_1684 <= add_ln75_fu_828_p2;
                add_ln82_1_reg_1689 <= add_ln82_1_fu_856_p2;
                window_buf_2_2_reg_1677 <= data_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter8 = ap_const_logic_1) and (icmp_ln42_reg_1625_pp2_iter7_reg = ap_const_lv1_0))) then
                add_ln86_reg_1769 <= grp_fu_1404_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln95_reg_1710_pp2_iter6_reg = ap_const_lv1_0) and (icmp_ln42_reg_1625_pp2_iter6_reg = ap_const_lv1_0))) then
                and_ln103_reg_1755 <= and_ln103_fu_1070_p2;
                sext_ln96_1_reg_1748 <= sext_ln96_1_fu_995_p1;
                    shl_ln3_reg_1741(18 downto 8) <= shl_ln3_fu_988_p3(18 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                and_ln103_reg_1755_pp2_iter10_reg <= and_ln103_reg_1755_pp2_iter9_reg;
                and_ln103_reg_1755_pp2_iter11_reg <= and_ln103_reg_1755_pp2_iter10_reg;
                and_ln103_reg_1755_pp2_iter12_reg <= and_ln103_reg_1755_pp2_iter11_reg;
                and_ln103_reg_1755_pp2_iter13_reg <= and_ln103_reg_1755_pp2_iter12_reg;
                and_ln103_reg_1755_pp2_iter14_reg <= and_ln103_reg_1755_pp2_iter13_reg;
                and_ln103_reg_1755_pp2_iter15_reg <= and_ln103_reg_1755_pp2_iter14_reg;
                and_ln103_reg_1755_pp2_iter16_reg <= and_ln103_reg_1755_pp2_iter15_reg;
                and_ln103_reg_1755_pp2_iter17_reg <= and_ln103_reg_1755_pp2_iter16_reg;
                and_ln103_reg_1755_pp2_iter18_reg <= and_ln103_reg_1755_pp2_iter17_reg;
                and_ln103_reg_1755_pp2_iter19_reg <= and_ln103_reg_1755_pp2_iter18_reg;
                and_ln103_reg_1755_pp2_iter20_reg <= and_ln103_reg_1755_pp2_iter19_reg;
                and_ln103_reg_1755_pp2_iter21_reg <= and_ln103_reg_1755_pp2_iter20_reg;
                and_ln103_reg_1755_pp2_iter22_reg <= and_ln103_reg_1755_pp2_iter21_reg;
                and_ln103_reg_1755_pp2_iter23_reg <= and_ln103_reg_1755_pp2_iter22_reg;
                and_ln103_reg_1755_pp2_iter24_reg <= and_ln103_reg_1755_pp2_iter23_reg;
                and_ln103_reg_1755_pp2_iter25_reg <= and_ln103_reg_1755_pp2_iter24_reg;
                and_ln103_reg_1755_pp2_iter26_reg <= and_ln103_reg_1755_pp2_iter25_reg;
                and_ln103_reg_1755_pp2_iter27_reg <= and_ln103_reg_1755_pp2_iter26_reg;
                and_ln103_reg_1755_pp2_iter28_reg <= and_ln103_reg_1755_pp2_iter27_reg;
                and_ln103_reg_1755_pp2_iter29_reg <= and_ln103_reg_1755_pp2_iter28_reg;
                and_ln103_reg_1755_pp2_iter30_reg <= and_ln103_reg_1755_pp2_iter29_reg;
                and_ln103_reg_1755_pp2_iter31_reg <= and_ln103_reg_1755_pp2_iter30_reg;
                and_ln103_reg_1755_pp2_iter32_reg <= and_ln103_reg_1755_pp2_iter31_reg;
                and_ln103_reg_1755_pp2_iter33_reg <= and_ln103_reg_1755_pp2_iter32_reg;
                and_ln103_reg_1755_pp2_iter34_reg <= and_ln103_reg_1755_pp2_iter33_reg;
                and_ln103_reg_1755_pp2_iter8_reg <= and_ln103_reg_1755;
                and_ln103_reg_1755_pp2_iter9_reg <= and_ln103_reg_1755_pp2_iter8_reg;
                and_ln107_reg_1784_pp2_iter11_reg <= and_ln107_reg_1784;
                and_ln107_reg_1784_pp2_iter12_reg <= and_ln107_reg_1784_pp2_iter11_reg;
                and_ln107_reg_1784_pp2_iter13_reg <= and_ln107_reg_1784_pp2_iter12_reg;
                and_ln107_reg_1784_pp2_iter14_reg <= and_ln107_reg_1784_pp2_iter13_reg;
                and_ln107_reg_1784_pp2_iter15_reg <= and_ln107_reg_1784_pp2_iter14_reg;
                and_ln107_reg_1784_pp2_iter16_reg <= and_ln107_reg_1784_pp2_iter15_reg;
                and_ln107_reg_1784_pp2_iter17_reg <= and_ln107_reg_1784_pp2_iter16_reg;
                and_ln107_reg_1784_pp2_iter18_reg <= and_ln107_reg_1784_pp2_iter17_reg;
                and_ln107_reg_1784_pp2_iter19_reg <= and_ln107_reg_1784_pp2_iter18_reg;
                and_ln107_reg_1784_pp2_iter20_reg <= and_ln107_reg_1784_pp2_iter19_reg;
                and_ln107_reg_1784_pp2_iter21_reg <= and_ln107_reg_1784_pp2_iter20_reg;
                and_ln107_reg_1784_pp2_iter22_reg <= and_ln107_reg_1784_pp2_iter21_reg;
                and_ln107_reg_1784_pp2_iter23_reg <= and_ln107_reg_1784_pp2_iter22_reg;
                and_ln107_reg_1784_pp2_iter24_reg <= and_ln107_reg_1784_pp2_iter23_reg;
                and_ln107_reg_1784_pp2_iter25_reg <= and_ln107_reg_1784_pp2_iter24_reg;
                and_ln107_reg_1784_pp2_iter26_reg <= and_ln107_reg_1784_pp2_iter25_reg;
                and_ln107_reg_1784_pp2_iter27_reg <= and_ln107_reg_1784_pp2_iter26_reg;
                and_ln107_reg_1784_pp2_iter28_reg <= and_ln107_reg_1784_pp2_iter27_reg;
                and_ln107_reg_1784_pp2_iter29_reg <= and_ln107_reg_1784_pp2_iter28_reg;
                and_ln107_reg_1784_pp2_iter30_reg <= and_ln107_reg_1784_pp2_iter29_reg;
                and_ln107_reg_1784_pp2_iter31_reg <= and_ln107_reg_1784_pp2_iter30_reg;
                and_ln107_reg_1784_pp2_iter32_reg <= and_ln107_reg_1784_pp2_iter31_reg;
                and_ln107_reg_1784_pp2_iter33_reg <= and_ln107_reg_1784_pp2_iter32_reg;
                and_ln107_reg_1784_pp2_iter34_reg <= and_ln107_reg_1784_pp2_iter33_reg;
                icmp_ln42_reg_1625_pp2_iter10_reg <= icmp_ln42_reg_1625_pp2_iter9_reg;
                icmp_ln42_reg_1625_pp2_iter11_reg <= icmp_ln42_reg_1625_pp2_iter10_reg;
                icmp_ln42_reg_1625_pp2_iter12_reg <= icmp_ln42_reg_1625_pp2_iter11_reg;
                icmp_ln42_reg_1625_pp2_iter13_reg <= icmp_ln42_reg_1625_pp2_iter12_reg;
                icmp_ln42_reg_1625_pp2_iter14_reg <= icmp_ln42_reg_1625_pp2_iter13_reg;
                icmp_ln42_reg_1625_pp2_iter15_reg <= icmp_ln42_reg_1625_pp2_iter14_reg;
                icmp_ln42_reg_1625_pp2_iter16_reg <= icmp_ln42_reg_1625_pp2_iter15_reg;
                icmp_ln42_reg_1625_pp2_iter17_reg <= icmp_ln42_reg_1625_pp2_iter16_reg;
                icmp_ln42_reg_1625_pp2_iter18_reg <= icmp_ln42_reg_1625_pp2_iter17_reg;
                icmp_ln42_reg_1625_pp2_iter19_reg <= icmp_ln42_reg_1625_pp2_iter18_reg;
                icmp_ln42_reg_1625_pp2_iter20_reg <= icmp_ln42_reg_1625_pp2_iter19_reg;
                icmp_ln42_reg_1625_pp2_iter21_reg <= icmp_ln42_reg_1625_pp2_iter20_reg;
                icmp_ln42_reg_1625_pp2_iter22_reg <= icmp_ln42_reg_1625_pp2_iter21_reg;
                icmp_ln42_reg_1625_pp2_iter23_reg <= icmp_ln42_reg_1625_pp2_iter22_reg;
                icmp_ln42_reg_1625_pp2_iter24_reg <= icmp_ln42_reg_1625_pp2_iter23_reg;
                icmp_ln42_reg_1625_pp2_iter25_reg <= icmp_ln42_reg_1625_pp2_iter24_reg;
                icmp_ln42_reg_1625_pp2_iter26_reg <= icmp_ln42_reg_1625_pp2_iter25_reg;
                icmp_ln42_reg_1625_pp2_iter27_reg <= icmp_ln42_reg_1625_pp2_iter26_reg;
                icmp_ln42_reg_1625_pp2_iter28_reg <= icmp_ln42_reg_1625_pp2_iter27_reg;
                icmp_ln42_reg_1625_pp2_iter29_reg <= icmp_ln42_reg_1625_pp2_iter28_reg;
                icmp_ln42_reg_1625_pp2_iter2_reg <= icmp_ln42_reg_1625_pp2_iter1_reg;
                icmp_ln42_reg_1625_pp2_iter30_reg <= icmp_ln42_reg_1625_pp2_iter29_reg;
                icmp_ln42_reg_1625_pp2_iter31_reg <= icmp_ln42_reg_1625_pp2_iter30_reg;
                icmp_ln42_reg_1625_pp2_iter32_reg <= icmp_ln42_reg_1625_pp2_iter31_reg;
                icmp_ln42_reg_1625_pp2_iter33_reg <= icmp_ln42_reg_1625_pp2_iter32_reg;
                icmp_ln42_reg_1625_pp2_iter34_reg <= icmp_ln42_reg_1625_pp2_iter33_reg;
                icmp_ln42_reg_1625_pp2_iter3_reg <= icmp_ln42_reg_1625_pp2_iter2_reg;
                icmp_ln42_reg_1625_pp2_iter4_reg <= icmp_ln42_reg_1625_pp2_iter3_reg;
                icmp_ln42_reg_1625_pp2_iter5_reg <= icmp_ln42_reg_1625_pp2_iter4_reg;
                icmp_ln42_reg_1625_pp2_iter6_reg <= icmp_ln42_reg_1625_pp2_iter5_reg;
                icmp_ln42_reg_1625_pp2_iter7_reg <= icmp_ln42_reg_1625_pp2_iter6_reg;
                icmp_ln42_reg_1625_pp2_iter8_reg <= icmp_ln42_reg_1625_pp2_iter7_reg;
                icmp_ln42_reg_1625_pp2_iter9_reg <= icmp_ln42_reg_1625_pp2_iter8_reg;
                icmp_ln95_reg_1710_pp2_iter10_reg <= icmp_ln95_reg_1710_pp2_iter9_reg;
                icmp_ln95_reg_1710_pp2_iter11_reg <= icmp_ln95_reg_1710_pp2_iter10_reg;
                icmp_ln95_reg_1710_pp2_iter12_reg <= icmp_ln95_reg_1710_pp2_iter11_reg;
                icmp_ln95_reg_1710_pp2_iter13_reg <= icmp_ln95_reg_1710_pp2_iter12_reg;
                icmp_ln95_reg_1710_pp2_iter14_reg <= icmp_ln95_reg_1710_pp2_iter13_reg;
                icmp_ln95_reg_1710_pp2_iter15_reg <= icmp_ln95_reg_1710_pp2_iter14_reg;
                icmp_ln95_reg_1710_pp2_iter16_reg <= icmp_ln95_reg_1710_pp2_iter15_reg;
                icmp_ln95_reg_1710_pp2_iter17_reg <= icmp_ln95_reg_1710_pp2_iter16_reg;
                icmp_ln95_reg_1710_pp2_iter18_reg <= icmp_ln95_reg_1710_pp2_iter17_reg;
                icmp_ln95_reg_1710_pp2_iter19_reg <= icmp_ln95_reg_1710_pp2_iter18_reg;
                icmp_ln95_reg_1710_pp2_iter20_reg <= icmp_ln95_reg_1710_pp2_iter19_reg;
                icmp_ln95_reg_1710_pp2_iter21_reg <= icmp_ln95_reg_1710_pp2_iter20_reg;
                icmp_ln95_reg_1710_pp2_iter22_reg <= icmp_ln95_reg_1710_pp2_iter21_reg;
                icmp_ln95_reg_1710_pp2_iter23_reg <= icmp_ln95_reg_1710_pp2_iter22_reg;
                icmp_ln95_reg_1710_pp2_iter24_reg <= icmp_ln95_reg_1710_pp2_iter23_reg;
                icmp_ln95_reg_1710_pp2_iter25_reg <= icmp_ln95_reg_1710_pp2_iter24_reg;
                icmp_ln95_reg_1710_pp2_iter26_reg <= icmp_ln95_reg_1710_pp2_iter25_reg;
                icmp_ln95_reg_1710_pp2_iter27_reg <= icmp_ln95_reg_1710_pp2_iter26_reg;
                icmp_ln95_reg_1710_pp2_iter28_reg <= icmp_ln95_reg_1710_pp2_iter27_reg;
                icmp_ln95_reg_1710_pp2_iter29_reg <= icmp_ln95_reg_1710_pp2_iter28_reg;
                icmp_ln95_reg_1710_pp2_iter30_reg <= icmp_ln95_reg_1710_pp2_iter29_reg;
                icmp_ln95_reg_1710_pp2_iter31_reg <= icmp_ln95_reg_1710_pp2_iter30_reg;
                icmp_ln95_reg_1710_pp2_iter32_reg <= icmp_ln95_reg_1710_pp2_iter31_reg;
                icmp_ln95_reg_1710_pp2_iter33_reg <= icmp_ln95_reg_1710_pp2_iter32_reg;
                icmp_ln95_reg_1710_pp2_iter34_reg <= icmp_ln95_reg_1710_pp2_iter33_reg;
                icmp_ln95_reg_1710_pp2_iter4_reg <= icmp_ln95_reg_1710;
                icmp_ln95_reg_1710_pp2_iter5_reg <= icmp_ln95_reg_1710_pp2_iter4_reg;
                icmp_ln95_reg_1710_pp2_iter6_reg <= icmp_ln95_reg_1710_pp2_iter5_reg;
                icmp_ln95_reg_1710_pp2_iter7_reg <= icmp_ln95_reg_1710_pp2_iter6_reg;
                icmp_ln95_reg_1710_pp2_iter8_reg <= icmp_ln95_reg_1710_pp2_iter7_reg;
                icmp_ln95_reg_1710_pp2_iter9_reg <= icmp_ln95_reg_1710_pp2_iter8_reg;
                line_buf_addr_1_reg_1634_pp2_iter2_reg <= line_buf_addr_1_reg_1634_pp2_iter1_reg;
                or_ln120_2_reg_1651_pp2_iter10_reg <= or_ln120_2_reg_1651_pp2_iter9_reg;
                or_ln120_2_reg_1651_pp2_iter11_reg <= or_ln120_2_reg_1651_pp2_iter10_reg;
                or_ln120_2_reg_1651_pp2_iter12_reg <= or_ln120_2_reg_1651_pp2_iter11_reg;
                or_ln120_2_reg_1651_pp2_iter13_reg <= or_ln120_2_reg_1651_pp2_iter12_reg;
                or_ln120_2_reg_1651_pp2_iter14_reg <= or_ln120_2_reg_1651_pp2_iter13_reg;
                or_ln120_2_reg_1651_pp2_iter15_reg <= or_ln120_2_reg_1651_pp2_iter14_reg;
                or_ln120_2_reg_1651_pp2_iter16_reg <= or_ln120_2_reg_1651_pp2_iter15_reg;
                or_ln120_2_reg_1651_pp2_iter17_reg <= or_ln120_2_reg_1651_pp2_iter16_reg;
                or_ln120_2_reg_1651_pp2_iter18_reg <= or_ln120_2_reg_1651_pp2_iter17_reg;
                or_ln120_2_reg_1651_pp2_iter19_reg <= or_ln120_2_reg_1651_pp2_iter18_reg;
                or_ln120_2_reg_1651_pp2_iter20_reg <= or_ln120_2_reg_1651_pp2_iter19_reg;
                or_ln120_2_reg_1651_pp2_iter21_reg <= or_ln120_2_reg_1651_pp2_iter20_reg;
                or_ln120_2_reg_1651_pp2_iter22_reg <= or_ln120_2_reg_1651_pp2_iter21_reg;
                or_ln120_2_reg_1651_pp2_iter23_reg <= or_ln120_2_reg_1651_pp2_iter22_reg;
                or_ln120_2_reg_1651_pp2_iter24_reg <= or_ln120_2_reg_1651_pp2_iter23_reg;
                or_ln120_2_reg_1651_pp2_iter25_reg <= or_ln120_2_reg_1651_pp2_iter24_reg;
                or_ln120_2_reg_1651_pp2_iter26_reg <= or_ln120_2_reg_1651_pp2_iter25_reg;
                or_ln120_2_reg_1651_pp2_iter27_reg <= or_ln120_2_reg_1651_pp2_iter26_reg;
                or_ln120_2_reg_1651_pp2_iter28_reg <= or_ln120_2_reg_1651_pp2_iter27_reg;
                or_ln120_2_reg_1651_pp2_iter29_reg <= or_ln120_2_reg_1651_pp2_iter28_reg;
                or_ln120_2_reg_1651_pp2_iter2_reg <= or_ln120_2_reg_1651_pp2_iter1_reg;
                or_ln120_2_reg_1651_pp2_iter30_reg <= or_ln120_2_reg_1651_pp2_iter29_reg;
                or_ln120_2_reg_1651_pp2_iter31_reg <= or_ln120_2_reg_1651_pp2_iter30_reg;
                or_ln120_2_reg_1651_pp2_iter32_reg <= or_ln120_2_reg_1651_pp2_iter31_reg;
                or_ln120_2_reg_1651_pp2_iter33_reg <= or_ln120_2_reg_1651_pp2_iter32_reg;
                or_ln120_2_reg_1651_pp2_iter34_reg <= or_ln120_2_reg_1651_pp2_iter33_reg;
                or_ln120_2_reg_1651_pp2_iter35_reg <= or_ln120_2_reg_1651_pp2_iter34_reg;
                or_ln120_2_reg_1651_pp2_iter3_reg <= or_ln120_2_reg_1651_pp2_iter2_reg;
                or_ln120_2_reg_1651_pp2_iter4_reg <= or_ln120_2_reg_1651_pp2_iter3_reg;
                or_ln120_2_reg_1651_pp2_iter5_reg <= or_ln120_2_reg_1651_pp2_iter4_reg;
                or_ln120_2_reg_1651_pp2_iter6_reg <= or_ln120_2_reg_1651_pp2_iter5_reg;
                or_ln120_2_reg_1651_pp2_iter7_reg <= or_ln120_2_reg_1651_pp2_iter6_reg;
                or_ln120_2_reg_1651_pp2_iter8_reg <= or_ln120_2_reg_1651_pp2_iter7_reg;
                or_ln120_2_reg_1651_pp2_iter9_reg <= or_ln120_2_reg_1651_pp2_iter8_reg;
                p_Result_s_reg_1798_pp2_iter33_reg <= p_Result_s_reg_1798;
                sext_ln96_1_reg_1748_pp2_iter8_reg <= sext_ln96_1_reg_1748;
                sext_ln96_1_reg_1748_pp2_iter9_reg <= sext_ln96_1_reg_1748_pp2_iter8_reg;
                    shl_ln3_reg_1741_pp2_iter8_reg(18 downto 8) <= shl_ln3_reg_1741(18 downto 8);
                    shl_ln3_reg_1741_pp2_iter9_reg(18 downto 8) <= shl_ln3_reg_1741_pp2_iter8_reg(18 downto 8);
                sub_ln96_1_reg_1704_pp2_iter4_reg <= sub_ln96_1_reg_1704;
                sub_ln96_1_reg_1704_pp2_iter5_reg <= sub_ln96_1_reg_1704_pp2_iter4_reg;
                sub_ln96_1_reg_1704_pp2_iter6_reg <= sub_ln96_1_reg_1704_pp2_iter5_reg;
                sub_ln96_reg_1694_pp2_iter4_reg <= sub_ln96_reg_1694;
                sub_ln96_reg_1694_pp2_iter5_reg <= sub_ln96_reg_1694_pp2_iter4_reg;
                sub_ln96_reg_1694_pp2_iter6_reg <= sub_ln96_reg_1694_pp2_iter5_reg;
                tmp_2_reg_1672_pp2_iter2_reg <= tmp_2_reg_1672;
                trunc_ln55_1_reg_1640_pp2_iter10_reg <= trunc_ln55_1_reg_1640_pp2_iter9_reg;
                trunc_ln55_1_reg_1640_pp2_iter11_reg <= trunc_ln55_1_reg_1640_pp2_iter10_reg;
                trunc_ln55_1_reg_1640_pp2_iter12_reg <= trunc_ln55_1_reg_1640_pp2_iter11_reg;
                trunc_ln55_1_reg_1640_pp2_iter13_reg <= trunc_ln55_1_reg_1640_pp2_iter12_reg;
                trunc_ln55_1_reg_1640_pp2_iter14_reg <= trunc_ln55_1_reg_1640_pp2_iter13_reg;
                trunc_ln55_1_reg_1640_pp2_iter15_reg <= trunc_ln55_1_reg_1640_pp2_iter14_reg;
                trunc_ln55_1_reg_1640_pp2_iter16_reg <= trunc_ln55_1_reg_1640_pp2_iter15_reg;
                trunc_ln55_1_reg_1640_pp2_iter17_reg <= trunc_ln55_1_reg_1640_pp2_iter16_reg;
                trunc_ln55_1_reg_1640_pp2_iter18_reg <= trunc_ln55_1_reg_1640_pp2_iter17_reg;
                trunc_ln55_1_reg_1640_pp2_iter19_reg <= trunc_ln55_1_reg_1640_pp2_iter18_reg;
                trunc_ln55_1_reg_1640_pp2_iter20_reg <= trunc_ln55_1_reg_1640_pp2_iter19_reg;
                trunc_ln55_1_reg_1640_pp2_iter21_reg <= trunc_ln55_1_reg_1640_pp2_iter20_reg;
                trunc_ln55_1_reg_1640_pp2_iter22_reg <= trunc_ln55_1_reg_1640_pp2_iter21_reg;
                trunc_ln55_1_reg_1640_pp2_iter23_reg <= trunc_ln55_1_reg_1640_pp2_iter22_reg;
                trunc_ln55_1_reg_1640_pp2_iter24_reg <= trunc_ln55_1_reg_1640_pp2_iter23_reg;
                trunc_ln55_1_reg_1640_pp2_iter25_reg <= trunc_ln55_1_reg_1640_pp2_iter24_reg;
                trunc_ln55_1_reg_1640_pp2_iter26_reg <= trunc_ln55_1_reg_1640_pp2_iter25_reg;
                trunc_ln55_1_reg_1640_pp2_iter27_reg <= trunc_ln55_1_reg_1640_pp2_iter26_reg;
                trunc_ln55_1_reg_1640_pp2_iter28_reg <= trunc_ln55_1_reg_1640_pp2_iter27_reg;
                trunc_ln55_1_reg_1640_pp2_iter29_reg <= trunc_ln55_1_reg_1640_pp2_iter28_reg;
                trunc_ln55_1_reg_1640_pp2_iter2_reg <= trunc_ln55_1_reg_1640_pp2_iter1_reg;
                trunc_ln55_1_reg_1640_pp2_iter30_reg <= trunc_ln55_1_reg_1640_pp2_iter29_reg;
                trunc_ln55_1_reg_1640_pp2_iter31_reg <= trunc_ln55_1_reg_1640_pp2_iter30_reg;
                trunc_ln55_1_reg_1640_pp2_iter32_reg <= trunc_ln55_1_reg_1640_pp2_iter31_reg;
                trunc_ln55_1_reg_1640_pp2_iter33_reg <= trunc_ln55_1_reg_1640_pp2_iter32_reg;
                trunc_ln55_1_reg_1640_pp2_iter34_reg <= trunc_ln55_1_reg_1640_pp2_iter33_reg;
                trunc_ln55_1_reg_1640_pp2_iter35_reg <= trunc_ln55_1_reg_1640_pp2_iter34_reg;
                trunc_ln55_1_reg_1640_pp2_iter3_reg <= trunc_ln55_1_reg_1640_pp2_iter2_reg;
                trunc_ln55_1_reg_1640_pp2_iter4_reg <= trunc_ln55_1_reg_1640_pp2_iter3_reg;
                trunc_ln55_1_reg_1640_pp2_iter5_reg <= trunc_ln55_1_reg_1640_pp2_iter4_reg;
                trunc_ln55_1_reg_1640_pp2_iter6_reg <= trunc_ln55_1_reg_1640_pp2_iter5_reg;
                trunc_ln55_1_reg_1640_pp2_iter7_reg <= trunc_ln55_1_reg_1640_pp2_iter6_reg;
                trunc_ln55_1_reg_1640_pp2_iter8_reg <= trunc_ln55_1_reg_1640_pp2_iter7_reg;
                trunc_ln55_1_reg_1640_pp2_iter9_reg <= trunc_ln55_1_reg_1640_pp2_iter8_reg;
                window_buf_1_2_reg_1661_pp2_iter2_reg <= window_buf_1_2_reg_1661;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln103_reg_1755_pp2_iter9_reg) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln95_reg_1710_pp2_iter9_reg = ap_const_lv1_0) and (icmp_ln42_reg_1625_pp2_iter9_reg = ap_const_lv1_0))) then
                and_ln107_reg_1784 <= and_ln107_fu_1150_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter9 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter10_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter9_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter10_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter9_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter10 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter11_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter10_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter11_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter10_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter11 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter12_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter11_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter12_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter11_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter12 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter13_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter12_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter13_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter12_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter13 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter14_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter13_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter14_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter13_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter14 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter15_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter14_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter15_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter14_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter15 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter16_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter15_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter16_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter15_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter16 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter17_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter16_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter17_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter16_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter17 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter18_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter17_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter18_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter17_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter18 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter19_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter18_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter19_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter18_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                ap_phi_reg_pp2_iter1_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter0_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter1_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter0_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter19 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter20_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter19_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter20_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter19_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter20 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter21_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter20_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter21_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter20_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter21 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter22_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter21_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter22_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter21_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter22 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter23_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter22_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter23_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter22_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter23 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter24_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter23_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter24_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter23_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter24 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter25_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter24_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter25_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter24_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter25 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter26_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter25_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter26_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter25_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter26 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter27_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter26_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter27_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter26_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter27 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter28_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter27_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter28_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter27_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter28 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter29_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter28_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter29_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter28_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                ap_phi_reg_pp2_iter2_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter1_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter2_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter1_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter29 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter30_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter29_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter30_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter29_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter30 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter31_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter30_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter31_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter30_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter31 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter32_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter31_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter32_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter31_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter32 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter33_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter32_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter33_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter32_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter34 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter35_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter34_grad_sobel_reg_373;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter3_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter2_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter3_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter2_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter4_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter3_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter4_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter3_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter4 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter5_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter4_grad_sobel_reg_373;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter6_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter5_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter6_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter5_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter6 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter7_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter6_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter7_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter6_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp2_iter7 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001))) then
                ap_phi_reg_pp2_iter8_grad_sobel_reg_373 <= ap_phi_reg_pp2_iter7_grad_sobel_reg_373;
                ap_phi_reg_pp2_iter8_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter7_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter8 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter9_t_int_07883_reg_362 <= ap_phi_reg_pp2_iter8_t_int_07883_reg_362;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6716_fu_396_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_29_reg_1437 <= empty_29_fu_408_p1;
                    empty_30_reg_1452(4 downto 3) <= empty_30_fu_430_p2(4 downto 3);
                empty_31_reg_1457 <= empty_31_fu_436_p2;
                empty_34_reg_1463 <= empty_34_fu_450_p2;
                tmp_5_reg_1442 <= empty_reg_296(9 downto 8);
                    tmp_7_reg_1447(4 downto 3) <= tmp_7_fu_422_p3(4 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond6716_reg_1428 <= exitcond6716_fu_396_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter30_reg = ap_const_lv1_0))) then
                f_reg_1793 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (((icmp_ln95_reg_1710_pp2_iter33_reg = ap_const_lv1_1) and (icmp_ln42_reg_1625_pp2_iter33_reg = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln107_reg_1784_pp2_iter33_reg) and (ap_const_lv1_0 = and_ln103_reg_1755_pp2_iter33_reg) and (icmp_ln42_reg_1625_pp2_iter33_reg = ap_const_lv1_0))))) then
                icmp_ln111_1_reg_1839 <= icmp_ln111_1_fu_1309_p2;
                icmp_ln111_reg_1834 <= icmp_ln111_fu_1303_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln42_reg_1625 <= icmp_ln42_fu_699_p2;
                icmp_ln42_reg_1625_pp2_iter1_reg <= icmp_ln42_reg_1625;
                line_buf_addr_1_reg_1634_pp2_iter1_reg <= line_buf_addr_1_reg_1634;
                or_ln120_2_reg_1651_pp2_iter1_reg <= or_ln120_2_reg_1651;
                trunc_ln55_1_reg_1640_pp2_iter1_reg <= trunc_ln55_1_reg_1640;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter2_reg = ap_const_lv1_0))) then
                icmp_ln95_reg_1710 <= icmp_ln95_fu_961_p2;
                sub_ln96_1_reg_1704 <= sub_ln96_1_fu_955_p2;
                sub_ln96_reg_1694 <= sub_ln96_fu_922_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter31_reg = ap_const_lv1_0))) then
                isNeg_reg_1808 <= add_ln340_fu_1185_p2(8 downto 8);
                p_Repl2_s_reg_1803 <= p_Repl2_s_fu_1177_p1;
                p_Result_s_reg_1798 <= p_Val2_s_fu_1156_p1(31 downto 31);
                ush_reg_1813 <= ush_fu_1209_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_fu_638_p2 = ap_const_lv1_0))) then
                or_ln120_1_reg_1620 <= or_ln120_1_fu_684_p2;
                    shl_ln_reg_1615(15 downto 8) <= shl_ln_fu_654_p3(15 downto 8);
                trunc_ln55_reg_1609 <= trunc_ln55_fu_650_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (or_ln120_2_reg_1651_pp2_iter34_reg = ap_const_lv1_0))) then
                select_ln122_reg_1854 <= select_ln122_fu_1336_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln42_reg_1625 = ap_const_lv1_0))) then
                tmp_2_reg_1672 <= line_buf_q1(23 downto 8);
                window_buf_0_2_reg_1655 <= line_buf_q1(15 downto 8);
                window_buf_1_2_reg_1661 <= line_buf_q1(23 downto 16);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter33_reg = ap_const_lv1_0))) then
                tmp_9_reg_1829 <= p_Val2_3_fu_1287_p3(31 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (or_ln120_2_reg_1651_pp2_iter33_reg = ap_const_lv1_0))) then
                trunc_ln122_reg_1844 <= trunc_ln122_fu_1315_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter32_reg = ap_const_lv1_0))) then
                val_V_reg_1818 <= val_V_fu_1271_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter13_reg = ap_const_lv1_0))) then
                x_assign_reg_1788 <= grp_fu_388_p1;
            end if;
        end if;
    end process;
    tmp_7_reg_1447(2 downto 0) <= "000";
    empty_30_reg_1452(2 downto 0) <= "111";
    shl_ln_reg_1615(7 downto 0) <= "00000000";
    shl_ln3_reg_1741(7 downto 0) <= "00000000";
    shl_ln3_reg_1741_pp2_iter8_reg(7 downto 0) <= "00000000";
    shl_ln3_reg_1741_pp2_iter9_reg(7 downto 0) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, exitcond6716_fu_396_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state5, exitcond6615_fu_532_p2, icmp_ln41_fu_638_p2, ap_CS_fsm_state7, ap_block_pp0_stage0_subdone, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter35, ap_enable_reg_pp2_iter36)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond6716_fu_396_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond6716_fu_396_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond6615_fu_532_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_fu_638_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))) and not(((ap_enable_reg_pp2_iter36 = ap_const_logic_1) and (ap_enable_reg_pp2_iter35 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_enable_reg_pp2_iter36 = ap_const_logic_1) and (ap_enable_reg_pp2_iter35 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) or ((ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp2_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln1_fu_1343_p3 <= (trunc_ln55_reg_1609 & trunc_ln55_1_reg_1640_pp2_iter35_reg);
    add_ln340_fu_1185_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(zext_ln340_fu_1181_p1));
    add_ln41_fu_644_p2 <= std_logic_vector(unsigned(yi_reg_340) + unsigned(ap_const_lv9_1));
    add_ln42_fu_705_p2 <= std_logic_vector(unsigned(xi_reg_351) + unsigned(ap_const_lv9_1));
    add_ln55_fu_715_p2 <= std_logic_vector(unsigned(zext_ln42_1_fu_695_p1) + unsigned(shl_ln_reg_1615));
    add_ln75_1_fu_913_p2 <= std_logic_vector(unsigned(zext_ln75_4_fu_909_p1) + unsigned(sub_ln75_1_fu_904_p2));
    add_ln75_fu_828_p2 <= std_logic_vector(unsigned(zext_ln75_2_fu_824_p1) + unsigned(sext_ln75_fu_812_p1));
    add_ln82_1_fu_856_p2 <= std_logic_vector(unsigned(zext_ln82_fu_842_p1) + unsigned(zext_ln82_1_fu_852_p1));
    add_ln82_fu_846_p2 <= std_logic_vector(unsigned(zext_ln75_1_fu_803_p1) + unsigned(zext_ln75_fu_799_p1));
    add_ln_fu_1362_p3 <= (trunc_ln55_reg_1609 & trunc_ln55_1_reg_1640_pp2_iter35_reg);
    and_ln103_fu_1070_p2 <= (select_ln103_fu_1020_p3 and select_ln103_1_fu_1062_p3);
    and_ln107_fu_1150_p2 <= (select_ln107_fu_1114_p3 and select_ln107_1_fu_1142_p3);
    and_ln111_fu_1324_p2 <= (icmp_ln111_reg_1834 and icmp_ln111_1_reg_1839);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state45 <= ap_CS_fsm(7);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp2_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp2_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp2_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp2_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp2_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp2_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp2_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp2_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp2_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp2_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp2_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp2_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp2_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp2_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp2_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp2_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp2_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp2_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp2_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp2_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp2_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp2_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp2_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp2_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_617_assign_proc : process(icmp_ln42_reg_1625_pp2_iter34_reg, icmp_ln95_reg_1710_pp2_iter34_reg, and_ln103_reg_1755_pp2_iter34_reg, and_ln107_reg_1784_pp2_iter34_reg)
    begin
                ap_condition_617 <= (((icmp_ln95_reg_1710_pp2_iter34_reg = ap_const_lv1_1) and (icmp_ln42_reg_1625_pp2_iter34_reg = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln107_reg_1784_pp2_iter34_reg) and (ap_const_lv1_0 = and_ln103_reg_1755_pp2_iter34_reg) and (icmp_ln42_reg_1625_pp2_iter34_reg = ap_const_lv1_0)));
    end process;


    ap_condition_910_assign_proc : process(icmp_ln42_reg_1625_pp2_iter32_reg, icmp_ln95_reg_1710_pp2_iter32_reg, and_ln103_reg_1755_pp2_iter32_reg, and_ln107_reg_1784_pp2_iter32_reg)
    begin
                ap_condition_910 <= ((ap_const_lv1_0 = and_ln107_reg_1784_pp2_iter32_reg) and (ap_const_lv1_0 = and_ln103_reg_1755_pp2_iter32_reg) and (icmp_ln95_reg_1710_pp2_iter32_reg = ap_const_lv1_0) and (icmp_ln42_reg_1625_pp2_iter32_reg = ap_const_lv1_0));
    end process;


    ap_condition_959_assign_proc : process(icmp_ln42_reg_1625_pp2_iter7_reg, icmp_ln95_reg_1710_pp2_iter7_reg, and_ln103_reg_1755)
    begin
                ap_condition_959 <= ((ap_const_lv1_1 = and_ln103_reg_1755) and (icmp_ln95_reg_1710_pp2_iter7_reg = ap_const_lv1_0) and (icmp_ln42_reg_1625_pp2_iter7_reg = ap_const_lv1_0));
    end process;


    ap_condition_962_assign_proc : process(icmp_ln42_reg_1625_pp2_iter32_reg, icmp_ln95_reg_1710_pp2_iter32_reg, and_ln103_reg_1755_pp2_iter32_reg, and_ln107_reg_1784_pp2_iter32_reg)
    begin
                ap_condition_962 <= ((ap_const_lv1_0 = and_ln103_reg_1755_pp2_iter32_reg) and (ap_const_lv1_1 = and_ln107_reg_1784_pp2_iter32_reg) and (icmp_ln95_reg_1710_pp2_iter32_reg = ap_const_lv1_0) and (icmp_ln42_reg_1625_pp2_iter32_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond6716_fu_396_p2)
    begin
        if ((exitcond6716_fu_396_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter3_state11_assign_proc : process(ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0))) then 
            ap_condition_pp2_exit_iter3_state11 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter3_state11 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_flush_enable_assign_proc : process(icmp_ln42_fu_699_p2, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln42_fu_699_p2 = ap_const_lv1_1))) then 
            ap_condition_pp2_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp2_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(icmp_ln41_fu_638_p2, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_fu_638_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter8, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter7, ap_enable_reg_pp2_iter9, ap_enable_reg_pp2_iter10, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_enable_reg_pp2_iter13, ap_enable_reg_pp2_iter14, ap_enable_reg_pp2_iter15, ap_enable_reg_pp2_iter16, ap_enable_reg_pp2_iter17, ap_enable_reg_pp2_iter18, ap_enable_reg_pp2_iter19, ap_enable_reg_pp2_iter20, ap_enable_reg_pp2_iter21, ap_enable_reg_pp2_iter22, ap_enable_reg_pp2_iter23, ap_enable_reg_pp2_iter24, ap_enable_reg_pp2_iter25, ap_enable_reg_pp2_iter26, ap_enable_reg_pp2_iter27, ap_enable_reg_pp2_iter28, ap_enable_reg_pp2_iter29, ap_enable_reg_pp2_iter30, ap_enable_reg_pp2_iter31, ap_enable_reg_pp2_iter32, ap_enable_reg_pp2_iter33, ap_enable_reg_pp2_iter34, ap_enable_reg_pp2_iter35, ap_enable_reg_pp2_iter36)
    begin
        if (((ap_enable_reg_pp2_iter36 = ap_const_logic_0) and (ap_enable_reg_pp2_iter35 = ap_const_logic_0) and (ap_enable_reg_pp2_iter34 = ap_const_logic_0) and (ap_enable_reg_pp2_iter33 = ap_const_logic_0) and (ap_enable_reg_pp2_iter32 = ap_const_logic_0) and (ap_enable_reg_pp2_iter31 = ap_const_logic_0) and (ap_enable_reg_pp2_iter30 = ap_const_logic_0) and (ap_enable_reg_pp2_iter29 = ap_const_logic_0) and (ap_enable_reg_pp2_iter28 = ap_const_logic_0) and (ap_enable_reg_pp2_iter27 = ap_const_logic_0) and (ap_enable_reg_pp2_iter26 = ap_const_logic_0) and (ap_enable_reg_pp2_iter25 = ap_const_logic_0) and (ap_enable_reg_pp2_iter24 = ap_const_logic_0) and (ap_enable_reg_pp2_iter23 = ap_const_logic_0) and (ap_enable_reg_pp2_iter22 = ap_const_logic_0) and (ap_enable_reg_pp2_iter21 = ap_const_logic_0) and (ap_enable_reg_pp2_iter20 = ap_const_logic_0) and (ap_enable_reg_pp2_iter19 = ap_const_logic_0) and (ap_enable_reg_pp2_iter18 = ap_const_logic_0) and (ap_enable_reg_pp2_iter17 = ap_const_logic_0) and (ap_enable_reg_pp2_iter16 = ap_const_logic_0) and (ap_enable_reg_pp2_iter15 = ap_const_logic_0) and (ap_enable_reg_pp2_iter14 = ap_const_logic_0) and (ap_enable_reg_pp2_iter13 = ap_const_logic_0) and (ap_enable_reg_pp2_iter12 = ap_const_logic_0) and (ap_enable_reg_pp2_iter11 = ap_const_logic_0) and (ap_enable_reg_pp2_iter10 = ap_const_logic_0) and (ap_enable_reg_pp2_iter9 = ap_const_logic_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter8 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp2_iter0_grad_sobel_reg_373 <= "XXXXXXXX";
    ap_phi_reg_pp2_iter0_t_int_07883_reg_362 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(icmp_ln41_fu_638_p2, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln41_fu_638_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp88_not_fu_678_p2 <= "1" when (unsigned(yi_reg_340) > unsigned(ap_const_lv9_FC)) else "0";
    data_address0 <= zext_ln55_fu_773_p1(16 - 1 downto 0);

    data_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            data_ce0 <= ap_const_logic_1;
        else 
            data_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_28_fu_402_p2 <= std_logic_vector(unsigned(empty_reg_296) + unsigned(ap_const_lv10_1));
    empty_29_fu_408_p1 <= empty_reg_296(8 - 1 downto 0);
    empty_30_fu_430_p2 <= (tmp_7_fu_422_p3 or ap_const_lv5_7);
    empty_31_fu_436_p2 <= "1" when (unsigned(tmp_7_fu_422_p3) > unsigned(empty_30_fu_430_p2)) else "0";
    empty_32_fu_442_p3 <= 
        tmp_7_fu_422_p3 when (empty_31_fu_436_p2(0) = '1') else 
        empty_30_fu_430_p2;
    empty_33_fu_460_p3 <= 
        empty_30_reg_1452 when (empty_31_reg_1457(0) = '1') else 
        tmp_7_reg_1447;
    empty_34_fu_450_p2 <= std_logic_vector(signed(ap_const_lv5_17) - signed(empty_32_fu_442_p3));
    empty_35_fu_465_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_33_fu_460_p3),24));
    empty_36_fu_469_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_34_reg_1463),24));
    empty_37_fu_472_p3 <= 
        ap_const_lv24_0 when (empty_31_reg_1457(0) = '1') else 
        ap_const_lv24_0;
    empty_38_fu_479_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv24_FFFFFF),to_integer(unsigned('0' & empty_35_fu_465_p1(24-1 downto 0)))));
    empty_39_fu_485_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv24_FFFFFF),to_integer(unsigned('0' & empty_36_fu_469_p1(24-1 downto 0)))));
    empty_40_fu_497_p2 <= (p_demorgan_fu_491_p2 and empty_37_fu_472_p3);
    empty_41_fu_504_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_reg_1442),3));
    empty_44_fu_538_p2 <= std_logic_vector(unsigned(empty_42_reg_307) + unsigned(ap_const_lv4_1));
    empty_46_fu_600_p2 <= "1" when (unsigned(next_urem_fu_594_p2) < unsigned(ap_const_lv4_3)) else "0";
    exitcond6615_fu_532_p2 <= "1" when (empty_42_reg_307 = ap_const_lv4_9) else "0";
    exitcond6716_fu_396_p2 <= "1" when (empty_reg_296 = ap_const_lv10_300) else "0";
        grp_fu_1089_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln3_reg_1741_pp2_iter9_reg),20));

    grp_fu_1089_p1 <= sext_ln96_1_reg_1748_pp2_iter9_reg(11 - 1 downto 0);
    grp_fu_1382_p0 <= sext_ln86_fu_976_p1(11 - 1 downto 0);
    grp_fu_1382_p1 <= sext_ln86_fu_976_p1(11 - 1 downto 0);
    grp_fu_1388_p1 <= ap_const_lv31_7FFFFD96(11 - 1 downto 0);
    grp_fu_1396_p1 <= ap_const_lv28_FFFFF96(8 - 1 downto 0);
    grp_fu_1404_p0 <= sext_ln82_fu_985_p1(11 - 1 downto 0);
    grp_fu_1404_p1 <= sext_ln82_fu_985_p1(11 - 1 downto 0);
    grp_fu_1412_p1 <= ap_const_lv28_FFFFF96(8 - 1 downto 0);
    grp_fu_1420_p1 <= ap_const_lv28_6B(8 - 1 downto 0);
        grp_fu_388_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln86_reg_1769),32));

    icmp_fu_672_p2 <= "1" when (tmp_1_fu_662_p4 = ap_const_lv7_0) else "0";
    icmp_ln103_1_fu_1015_p2 <= "1" when (signed(sext_ln103_1_fu_1006_p1) > signed(grp_fu_1388_p2)) else "0";
    icmp_ln103_2_fu_1040_p2 <= "1" when (signed(sext_ln103_3_fu_1036_p1) < signed(grp_fu_1396_p2)) else "0";
    icmp_ln103_3_fu_1051_p2 <= "1" when (signed(grp_fu_1396_p2) < signed(sext_ln103_3_fu_1036_p1)) else "0";
    icmp_ln103_fu_1010_p2 <= "1" when (signed(sext_ln103_1_fu_1006_p1) < signed(grp_fu_1388_p2)) else "0";
    icmp_ln107_1_fu_1109_p2 <= "1" when (signed(sext_ln107_1_fu_1101_p1) > signed(grp_fu_1412_p2)) else "0";
    icmp_ln107_2_fu_1132_p2 <= "1" when (signed(sext_ln107_3_fu_1129_p1) > signed(grp_fu_1420_p2)) else "0";
    icmp_ln107_3_fu_1137_p2 <= "1" when (signed(sext_ln107_3_fu_1129_p1) < signed(grp_fu_1420_p2)) else "0";
    icmp_ln107_fu_1104_p2 <= "1" when (signed(sext_ln107_1_fu_1101_p1) < signed(grp_fu_1412_p2)) else "0";
    icmp_ln111_1_fu_1309_p2 <= "1" when (signed(ap_phi_reg_pp2_iter34_t_int_07883_reg_362) < signed(ap_const_lv32_26A)) else "0";
    icmp_ln111_fu_1303_p2 <= "1" when (signed(ap_phi_reg_pp2_iter34_t_int_07883_reg_362) > signed(ap_const_lv32_6A)) else "0";
    icmp_ln120_1_fu_736_p2 <= "1" when (unsigned(xi_reg_351) > unsigned(ap_const_lv9_FC)) else "0";
    icmp_ln120_fu_730_p2 <= "1" when (tmp_14_fu_720_p4 = ap_const_lv7_0) else "0";
    icmp_ln41_fu_638_p2 <= "1" when (yi_reg_340 = ap_const_lv9_100) else "0";
    icmp_ln42_fu_699_p2 <= "1" when (xi_reg_351 = ap_const_lv9_100) else "0";
    icmp_ln89_fu_1319_p2 <= "1" when (signed(tmp_9_reg_1829) > signed(ap_const_lv24_0)) else "0";
    icmp_ln95_fu_961_p2 <= "1" when (add_ln75_1_fu_913_p2 = zext_ln75_5_fu_919_p1) else "0";
    idx_urem_fu_606_p3 <= 
        next_urem_fu_594_p2 when (empty_46_fu_600_p2(0) = '1') else 
        ap_const_lv4_0;
    isNeg_fu_1191_p3 <= add_ln340_fu_1185_p2(8 downto 8);

    line_buf_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, line_buf_addr_1_reg_1634_pp2_iter2_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter3, p_cast7_fu_456_p1, ap_block_pp0_stage0, ap_block_pp2_stage0)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            line_buf_address0 <= line_buf_addr_1_reg_1634_pp2_iter2_reg;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buf_address0 <= p_cast7_fu_456_p1(8 - 1 downto 0);
        else 
            line_buf_address0 <= "XXXXXXXX";
        end if; 
    end process;

    line_buf_address1 <= zext_ln42_fu_690_p1(8 - 1 downto 0);

    line_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter3)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001)))) then 
            line_buf_ce0 <= ap_const_logic_1;
        else 
            line_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            line_buf_ce1 <= ap_const_logic_1;
        else 
            line_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter3, ap_block_pp0_stage0, ap_block_pp2_stage0, empty_40_fu_497_p2, tmp_6_fu_886_p3)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then 
            line_buf_d0 <= tmp_6_fu_886_p3;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buf_d0 <= empty_40_fu_497_p2;
        else 
            line_buf_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buf_we0_assign_proc : process(exitcond6716_reg_1428, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001, icmp_ln42_reg_1625_pp2_iter2_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter3, mask_fu_507_p2)
    begin
        if (((ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln42_reg_1625_pp2_iter2_reg = ap_const_lv1_0))) then 
            line_buf_we0 <= ap_const_lv3_7;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond6716_reg_1428 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buf_we0 <= mask_fu_507_p2;
        else 
            line_buf_we0 <= ap_const_lv3_0;
        end if; 
    end process;

    mantissa_V_fu_1217_p4 <= ((ap_const_lv1_1 & p_Repl2_s_reg_1803) & ap_const_lv1_0);
    mask_fu_507_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv3_1),to_integer(unsigned('0' & empty_41_fu_504_p1(3-1 downto 0)))));
    next_mul_fu_544_p2 <= std_logic_vector(unsigned(ap_const_lv8_16) + unsigned(phi_mul_reg_318));
    next_urem_fu_594_p2 <= std_logic_vector(unsigned(phi_urem_reg_329) + unsigned(ap_const_lv4_1));
    or_ln120_1_fu_684_p2 <= (icmp_fu_672_p2 or cmp88_not_fu_678_p2);
    or_ln120_2_fu_748_p2 <= (or_ln120_fu_742_p2 or or_ln120_1_reg_1620);
    or_ln120_fu_742_p2 <= (icmp_ln120_fu_730_p2 or icmp_ln120_1_fu_736_p2);

    out_r_address0_assign_proc : process(or_ln120_2_reg_1651_pp2_iter35_reg, ap_enable_reg_pp2_iter36, ap_block_pp2_stage0, zext_ln122_fu_1349_p1, zext_ln126_fu_1368_p1)
    begin
        if (((ap_enable_reg_pp2_iter36 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then
            if ((or_ln120_2_reg_1651_pp2_iter35_reg = ap_const_lv1_1)) then 
                out_r_address0 <= zext_ln126_fu_1368_p1(16 - 1 downto 0);
            elsif ((or_ln120_2_reg_1651_pp2_iter35_reg = ap_const_lv1_0)) then 
                out_r_address0 <= zext_ln122_fu_1349_p1(16 - 1 downto 0);
            else 
                out_r_address0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            out_r_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_ce0_assign_proc : process(ap_block_pp2_stage0_11001, or_ln120_2_reg_1651_pp2_iter35_reg, ap_enable_reg_pp2_iter36)
    begin
        if ((((ap_enable_reg_pp2_iter36 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (or_ln120_2_reg_1651_pp2_iter35_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter36 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (or_ln120_2_reg_1651_pp2_iter35_reg = ap_const_lv1_0)))) then 
            out_r_ce0 <= ap_const_logic_1;
        else 
            out_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_r_d0_assign_proc : process(or_ln120_2_reg_1651_pp2_iter35_reg, ap_enable_reg_pp2_iter36, ap_block_pp2_stage0, tmp_fu_1354_p3, shl_ln4_fu_1373_p3)
    begin
        if (((ap_enable_reg_pp2_iter36 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0))) then
            if ((or_ln120_2_reg_1651_pp2_iter35_reg = ap_const_lv1_1)) then 
                out_r_d0 <= shl_ln4_fu_1373_p3;
            elsif ((or_ln120_2_reg_1651_pp2_iter35_reg = ap_const_lv1_0)) then 
                out_r_d0 <= tmp_fu_1354_p3;
            else 
                out_r_d0 <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            out_r_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    out_r_we0_assign_proc : process(ap_block_pp2_stage0_11001, or_ln120_2_reg_1651_pp2_iter35_reg, ap_enable_reg_pp2_iter36)
    begin
        if ((((ap_enable_reg_pp2_iter36 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (or_ln120_2_reg_1651_pp2_iter35_reg = ap_const_lv1_1)) or ((ap_enable_reg_pp2_iter36 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (or_ln120_2_reg_1651_pp2_iter35_reg = ap_const_lv1_0)))) then 
            out_r_we0 <= ap_const_lv2_3;
        else 
            out_r_we0 <= ap_const_lv2_0;
        end if; 
    end process;

    p_Repl2_1_fu_1167_p4 <= p_Val2_s_fu_1156_p1(30 downto 23);
    p_Repl2_s_fu_1177_p1 <= p_Val2_s_fu_1156_p1(23 - 1 downto 0);
    p_Val2_3_fu_1287_p3 <= 
        result_V_1_fu_1282_p2 when (p_Result_s_reg_1798_pp2_iter33_reg(0) = '1') else 
        val_V_reg_1818;
    p_Val2_s_fu_1156_p1 <= f_reg_1793;
    p_cast7_fu_456_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_29_reg_1437),64));
    p_demorgan_fu_491_p2 <= (empty_39_fu_485_p2 and empty_38_fu_479_p2);
    r_V_1_fu_1243_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_1226_p1),to_integer(unsigned('0' & sh_prom_i_i_i_cast_cast_cast_cast_fu_1233_p1(31-1 downto 0)))));
    r_V_fu_1237_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_1226_p1),to_integer(unsigned('0' & sh_prom_i_i_i_cast_cast_cast_cast_fu_1233_p1(31-1 downto 0)))));
    result_V_1_fu_1282_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_V_reg_1818));
    select_ln103_1_fu_1062_p3 <= 
        xor_ln103_fu_1045_p2 when (tmp_11_fu_1028_p3(0) = '1') else 
        xor_ln103_1_fu_1056_p2;
    select_ln103_fu_1020_p3 <= 
        icmp_ln103_fu_1010_p2 when (tmp_10_fu_998_p3(0) = '1') else 
        icmp_ln103_1_fu_1015_p2;
    select_ln107_1_fu_1142_p3 <= 
        icmp_ln107_2_fu_1132_p2 when (tmp_13_fu_1122_p3(0) = '1') else 
        icmp_ln107_3_fu_1137_p2;
    select_ln107_fu_1114_p3 <= 
        icmp_ln107_fu_1104_p2 when (tmp_12_fu_1094_p3(0) = '1') else 
        icmp_ln107_1_fu_1109_p2;
    select_ln111_fu_1328_p3 <= 
        ap_const_lv8_2D when (and_ln111_fu_1324_p2(0) = '1') else 
        ap_const_lv8_5A;
    select_ln122_fu_1336_p3 <= 
        ap_const_lv8_FF when (icmp_ln89_fu_1319_p2(0) = '1') else 
        trunc_ln122_reg_1844;
        sext_ln103_1_fu_1006_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln3_fu_988_p3),31));

        sext_ln103_3_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln3_fu_988_p3),28));

        sext_ln107_1_fu_1101_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln3_reg_1741_pp2_iter9_reg),28));

        sext_ln107_3_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln3_reg_1741_pp2_iter9_reg),28));

        sext_ln1311_fu_1205_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1311_fu_1199_p2),9));

        sext_ln75_fu_812_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln75_fu_806_p2),11));

        sext_ln82_fu_985_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln96_reg_1694_pp2_iter4_reg),22));

        sext_ln86_fu_976_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln96_1_reg_1704),22));

        sext_ln96_1_fu_995_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln96_reg_1694_pp2_iter6_reg),20));

        sext_ln96_2_fu_1278_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1089_p2),32));

    sh_prom_i_i_i_cast_cast_cast_cast_fu_1233_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i_i_cast_cast_cast_fu_1230_p1),79));
        sh_prom_i_i_i_cast_cast_cast_fu_1230_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_reg_1813),32));

    shl_ln1_fu_816_p3 <= (window_buf_1_1_fu_226 & ap_const_lv1_0);
    shl_ln2_fu_834_p3 <= (window_buf_0_1_1_fu_222 & ap_const_lv1_0);
    shl_ln3_fu_988_p3 <= (sub_ln96_1_reg_1704_pp2_iter6_reg & ap_const_lv8_0);
    shl_ln4_fu_1373_p3 <= (ap_phi_reg_pp2_iter36_grad_sobel_reg_373 & ap_const_lv8_0);
    shl_ln75_1_fu_893_p3 <= (window_buf_1_2_reg_1661_pp2_iter2_reg & ap_const_lv1_0);
    shl_ln82_1_fu_937_p3 <= (window_buf_2_1_1_fu_238 & ap_const_lv1_0);
    shl_ln_fu_654_p3 <= (trunc_ln55_fu_650_p1 & ap_const_lv8_0);
    sub_ln1311_fu_1199_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(p_Repl2_1_fu_1167_p4));
    sub_ln75_1_fu_904_p2 <= std_logic_vector(unsigned(add_ln75_reg_1684) - unsigned(zext_ln75_3_fu_900_p1));
    sub_ln75_fu_806_p2 <= std_logic_vector(unsigned(zext_ln75_fu_799_p1) - unsigned(zext_ln75_1_fu_803_p1));
    sub_ln82_1_fu_949_p2 <= std_logic_vector(unsigned(sub_ln82_fu_931_p2) - unsigned(zext_ln82_3_fu_945_p1));
    sub_ln82_fu_931_p2 <= std_logic_vector(unsigned(zext_ln82_2_fu_928_p1) - unsigned(zext_ln75_4_fu_909_p1));
    sub_ln96_1_fu_955_p2 <= std_logic_vector(unsigned(sub_ln82_1_fu_949_p2) - unsigned(zext_ln75_5_fu_919_p1));
    sub_ln96_fu_922_p2 <= std_logic_vector(unsigned(add_ln75_1_fu_913_p2) - unsigned(zext_ln75_5_fu_919_p1));
    tmp_10_fu_998_p3 <= sext_ln96_1_fu_995_p1(19 downto 19);
    tmp_11_fu_1028_p3 <= sext_ln96_1_fu_995_p1(19 downto 19);
    tmp_12_fu_1094_p3 <= sext_ln96_1_reg_1748_pp2_iter9_reg(19 downto 19);
    tmp_13_fu_1122_p3 <= sext_ln96_1_reg_1748_pp2_iter9_reg(19 downto 19);
    tmp_14_fu_720_p4 <= xi_reg_351(8 downto 2);
    tmp_1_fu_662_p4 <= yi_reg_340(8 downto 2);
    tmp_5_fu_412_p4 <= empty_reg_296(9 downto 8);
    tmp_6_fu_886_p3 <= (window_buf_2_2_reg_1677 & tmp_2_reg_1672_pp2_iter2_reg);
    tmp_7_fu_422_p3 <= (tmp_5_fu_412_p4 & ap_const_lv3_0);
    tmp_8_fu_1249_p3 <= r_V_fu_1237_p2(24 downto 24);
    tmp_fu_1354_p3 <= (ap_phi_reg_pp2_iter36_grad_sobel_reg_373 & select_ln122_reg_1854);
    tmp_s_fu_1261_p4 <= r_V_1_fu_1243_p2(55 downto 24);
    trunc_ln122_fu_1315_p1 <= p_Val2_3_fu_1287_p3(8 - 1 downto 0);
    trunc_ln55_1_fu_711_p1 <= xi_reg_351(8 - 1 downto 0);
    trunc_ln55_fu_650_p1 <= yi_reg_340(8 - 1 downto 0);
    ush_fu_1209_p3 <= 
        sext_ln1311_fu_1205_p1 when (isNeg_fu_1191_p3(0) = '1') else 
        add_ln340_fu_1185_p2;
    val_V_fu_1271_p3 <= 
        zext_ln662_fu_1257_p1 when (isNeg_reg_1808(0) = '1') else 
        tmp_s_fu_1261_p4;
    window_buf_0_1_0_load_reg_1504 <= ap_const_lv8_0;
    window_buf_0_2_0_load_reg_1509 <= ap_const_lv8_0;
    window_buf_1_1_0_load_reg_1514 <= ap_const_lv8_0;
    window_buf_1_2_0_load_reg_1519 <= ap_const_lv8_0;
    window_buf_2_1_0_load_reg_1524 <= ap_const_lv8_0;
    window_buf_2_2_0_load_reg_1529 <= ap_const_lv8_0;
    xor_ln103_1_fu_1056_p2 <= (icmp_ln103_3_fu_1051_p2 xor ap_const_lv1_1);
    xor_ln103_fu_1045_p2 <= (icmp_ln103_2_fu_1040_p2 xor ap_const_lv1_1);
    zext_ln122_fu_1349_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1_fu_1343_p3),64));
    zext_ln126_fu_1368_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln_fu_1362_p3),64));
    zext_ln15_fu_1226_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_V_fu_1217_p4),79));
    zext_ln340_fu_1181_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Repl2_1_fu_1167_p4),9));
    zext_ln42_1_fu_695_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xi_reg_351),16));
    zext_ln42_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xi_reg_351),64));
    zext_ln55_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln55_reg_1646),64));
    zext_ln662_fu_1257_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_8_fu_1249_p3),32));
    zext_ln75_1_fu_803_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_0_2_reg_1655),9));
    zext_ln75_2_fu_824_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_816_p3),11));
    zext_ln75_3_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln75_1_fu_893_p3),11));
    zext_ln75_4_fu_909_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_2_1_fu_234),11));
    zext_ln75_5_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_2_2_reg_1677),11));
    zext_ln75_fu_799_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_0_1_fu_218),9));
    zext_ln82_1_fu_852_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln82_fu_846_p2),10));
    zext_ln82_2_fu_928_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln82_1_reg_1689),11));
    zext_ln82_3_fu_945_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln82_1_fu_937_p3),11));
    zext_ln82_fu_842_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_834_p3),10));
end behav;
