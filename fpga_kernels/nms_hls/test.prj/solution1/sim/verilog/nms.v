// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nms_nms,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.414000,HLS_SYN_LAT=134158,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=672,HLS_SYN_LUT=1264,HLS_VERSION=2020_1}" *)

module nms (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        data_address0,
        data_ce0,
        data_q0,
        out_r_address0,
        out_r_ce0,
        out_r_we0,
        out_r_d0
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_pp0_stage0 = 9'd2;
parameter    ap_ST_fsm_state4 = 9'd4;
parameter    ap_ST_fsm_state5 = 9'd8;
parameter    ap_ST_fsm_state6 = 9'd16;
parameter    ap_ST_fsm_state7 = 9'd32;
parameter    ap_ST_fsm_pp2_stage0 = 9'd64;
parameter    ap_ST_fsm_pp2_stage1 = 9'd128;
parameter    ap_ST_fsm_state17 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] data_address0;
output   data_ce0;
input  [15:0] data_q0;
output  [15:0] out_r_address0;
output   out_r_ce0;
output   out_r_we0;
output  [7:0] out_r_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_ce0;
reg out_r_ce0;
reg out_r_we0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [9:0] empty_reg_256;
reg   [8:0] xi_reg_300;
wire   [0:0] exitcond8810_fu_331_p2;
reg   [0:0] exitcond8810_reg_965;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [9:0] empty_21_fu_337_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [7:0] empty_22_fu_343_p1;
reg   [7:0] empty_22_reg_974;
wire   [1:0] tmp_1_fu_347_p4;
reg   [1:0] tmp_1_reg_979;
wire   [5:0] tmp_4_fu_357_p3;
reg   [5:0] tmp_4_reg_984;
wire   [5:0] empty_23_fu_365_p2;
reg   [5:0] empty_23_reg_989;
wire   [0:0] empty_24_fu_371_p2;
reg   [0:0] empty_24_reg_994;
wire   [5:0] empty_27_fu_385_p2;
reg   [5:0] empty_27_reg_1000;
wire   [15:0] window_buf_0_1_0_load_reg_1041;
wire    ap_CS_fsm_state5;
wire   [15:0] window_buf_0_2_0_load_reg_1046;
wire   [15:0] window_buf_1_1_0_load_reg_1051;
wire   [15:0] window_buf_1_2_0_load_reg_1056;
wire   [15:0] window_buf_2_1_0_load_reg_1061;
wire   [15:0] window_buf_2_2_0_load_reg_1066;
wire   [3:0] empty_37_fu_481_p2;
wire   [3:0] idx_urem_fu_561_p3;
wire   [0:0] exitcond879_fu_475_p2;
wire   [0:0] icmp_ln31_fu_593_p2;
wire    ap_CS_fsm_state7;
wire   [8:0] add_ln31_fu_599_p2;
reg   [8:0] add_ln31_reg_1136;
wire   [7:0] trunc_ln45_fu_605_p1;
reg   [7:0] trunc_ln45_reg_1141;
wire   [15:0] shl_ln_fu_609_p3;
reg   [15:0] shl_ln_reg_1146;
wire   [0:0] or_ln90_1_fu_639_p2;
reg   [0:0] or_ln90_1_reg_1151;
wire   [7:0] trunc_ln32_fu_650_p1;
reg   [7:0] trunc_ln32_reg_1156;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state8_pp2_stage0_iter0;
wire    ap_block_state10_pp2_stage0_iter1;
wire    ap_block_state12_pp2_stage0_iter2;
wire    ap_block_state14_pp2_stage0_iter3;
wire    ap_block_state16_pp2_stage0_iter4;
wire    ap_block_pp2_stage0_11001;
reg   [7:0] trunc_ln32_reg_1156_pp2_iter1_reg;
wire   [0:0] icmp_ln32_fu_654_p2;
reg   [0:0] icmp_ln32_reg_1161;
reg   [0:0] icmp_ln32_reg_1161_pp2_iter1_reg;
reg   [0:0] icmp_ln32_reg_1161_pp2_iter2_reg;
reg   [0:0] icmp_ln32_reg_1161_pp2_iter3_reg;
reg   [7:0] line_buf_addr_1_reg_1165;
reg   [7:0] line_buf_addr_1_reg_1165_pp2_iter1_reg;
reg   [7:0] line_buf_addr_1_reg_1165_pp2_iter2_reg;
wire   [8:0] add_ln32_fu_676_p2;
reg   [8:0] add_ln32_reg_1176;
wire    ap_CS_fsm_pp2_stage1;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state9_pp2_stage1_iter0;
wire    ap_block_state11_pp2_stage1_iter1;
wire    ap_block_state13_pp2_stage1_iter2;
wire    ap_block_state15_pp2_stage1_iter3;
wire    ap_block_pp2_stage1_11001;
reg   [31:0] tmp_3_reg_1181;
wire   [15:0] add_ln45_fu_692_p2;
reg   [15:0] add_ln45_reg_1186;
reg   [15:0] add_ln45_reg_1186_pp2_iter1_reg;
reg   [15:0] add_ln45_reg_1186_pp2_iter2_reg;
reg   [15:0] add_ln45_reg_1186_pp2_iter3_reg;
reg   [15:0] data_load_reg_1191;
wire   [0:0] icmp_ln90_fu_707_p2;
reg   [0:0] icmp_ln90_reg_1196;
reg   [0:0] icmp_ln90_reg_1196_pp2_iter1_reg;
reg   [0:0] icmp_ln90_reg_1196_pp2_iter2_reg;
reg   [0:0] icmp_ln90_reg_1196_pp2_iter3_reg;
wire   [0:0] icmp_ln90_1_fu_713_p2;
reg   [0:0] icmp_ln90_1_reg_1201;
reg   [0:0] icmp_ln90_1_reg_1201_pp2_iter1_reg;
reg   [0:0] icmp_ln90_1_reg_1201_pp2_iter2_reg;
reg   [0:0] icmp_ln90_1_reg_1201_pp2_iter3_reg;
wire   [7:0] value_nms_fu_761_p1;
reg   [7:0] value_nms_reg_1206;
wire   [7:0] grad_nms_fu_766_p4;
reg   [7:0] grad_nms_reg_1215;
wire   [0:0] icmp_ln83_fu_833_p2;
reg   [0:0] icmp_ln83_reg_1219;
wire   [0:0] grp_fu_327_p2;
reg   [0:0] icmp_ln84_reg_1224;
reg    ap_enable_reg_pp2_iter3;
reg   [0:0] icmp_ln76_reg_1229;
wire   [0:0] icmp_ln77_fu_839_p2;
reg   [0:0] icmp_ln77_reg_1234;
wire   [0:0] icmp_ln69_fu_845_p2;
reg   [0:0] icmp_ln69_reg_1239;
wire   [0:0] icmp_ln70_fu_851_p2;
reg   [0:0] icmp_ln70_reg_1244;
wire   [0:0] icmp_ln62_fu_857_p2;
reg   [0:0] icmp_ln62_reg_1249;
wire   [0:0] icmp_ln63_fu_863_p2;
reg   [0:0] icmp_ln63_reg_1254;
wire   [7:0] select_ln83_fu_903_p3;
wire   [7:0] select_ln76_fu_914_p3;
wire   [7:0] select_ln69_fu_925_p3;
wire   [7:0] select_ln62_fu_936_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp2_stage1_subdone;
reg    ap_condition_pp2_flush_enable;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0_subdone;
reg    ap_enable_reg_pp2_iter2;
reg    ap_condition_pp2_exit_iter3_state14;
reg    ap_enable_reg_pp2_iter4;
reg   [7:0] line_buf_address0;
reg    line_buf_ce0;
reg   [5:0] line_buf_we0;
reg   [47:0] line_buf_d0;
wire   [47:0] line_buf_q0;
reg   [7:0] line_buf_address1;
reg    line_buf_ce1;
reg   [5:0] line_buf_we1;
wire   [47:0] line_buf_d1;
wire   [47:0] line_buf_q1;
reg   [3:0] empty_35_reg_267;
wire    ap_CS_fsm_state4;
reg   [3:0] phi_urem_reg_278;
reg   [8:0] yi_reg_289;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state6;
reg   [8:0] ap_phi_mux_xi_phi_fu_304_p4;
wire    ap_block_pp2_stage0;
wire   [7:0] ap_phi_reg_pp2_iter0_value_nms_1_reg_312;
reg   [7:0] ap_phi_reg_pp2_iter1_value_nms_1_reg_312;
reg   [7:0] ap_phi_reg_pp2_iter2_value_nms_1_reg_312;
reg   [7:0] ap_phi_reg_pp2_iter3_value_nms_1_reg_312;
reg   [7:0] ap_phi_reg_pp2_iter4_value_nms_1_reg_312;
wire   [63:0] p_cast10_fu_391_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln32_fu_645_p1;
wire   [63:0] zext_ln45_fu_667_p1;
wire   [63:0] zext_ln45_2_fu_723_p1;
wire    ap_block_pp2_stage1;
wire   [63:0] zext_ln45_1_fu_943_p1;
reg   [15:0] window_buf_0_1_fu_178;
reg   [15:0] window_buf_0_1_1_fu_182;
wire   [15:0] window_buf_0_2_fu_789_p1;
reg   [15:0] window_buf_1_1_fu_186;
reg   [15:0] window_buf_1_1_1_fu_190;
reg   [15:0] window_buf_2_1_fu_194;
reg   [15:0] window_buf_2_1_1_fu_198;
wire   [47:0] empty_33_fu_432_p2;
wire   [5:0] mask_fu_450_p2;
wire   [47:0] zext_ln42_fu_719_p1;
wire   [7:0] trunc_ln55_fu_784_p1;
wire   [5:0] empty_25_fu_377_p3;
wire   [5:0] empty_26_fu_395_p3;
wire   [47:0] empty_28_fu_400_p1;
wire   [47:0] empty_29_fu_404_p1;
wire   [47:0] empty_31_fu_414_p2;
wire   [47:0] empty_32_fu_420_p2;
wire   [47:0] empty_30_fu_407_p3;
wire   [47:0] p_demorgan_fu_426_p2;
wire   [2:0] tmp_fu_439_p3;
wire   [5:0] empty_34_fu_446_p1;
wire   [10:0] mul_fu_499_p2;
wire   [3:0] next_urem_fu_549_p2;
wire   [0:0] empty_39_fu_555_p2;
wire   [6:0] tmp_2_fu_617_p4;
wire   [0:0] icmp_fu_627_p2;
wire   [0:0] cmp100_not_fu_633_p2;
wire   [15:0] add_ln45_1_fu_660_p3;
wire   [15:0] zext_ln32_1_fu_672_p1;
wire   [6:0] tmp_7_fu_697_p4;
wire   [7:0] trunc_ln50_3_fu_776_p1;
wire   [7:0] trunc_ln50_4_fu_780_p1;
wire   [7:0] trunc_ln50_fu_753_p1;
wire   [7:0] trunc_ln55_2_fu_813_p4;
wire   [7:0] trunc_ln50_1_fu_757_p1;
wire   [7:0] trunc_ln55_3_fu_793_p4;
wire   [0:0] or_ln83_fu_899_p2;
wire   [0:0] or_ln76_fu_910_p2;
wire   [0:0] or_ln69_fu_921_p2;
wire   [0:0] or_ln62_fu_932_p2;
wire   [0:0] or_ln90_fu_947_p2;
wire   [0:0] or_ln90_2_fu_951_p2;
reg   [8:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_condition_372;
wire   [6:0] mul_fu_499_p0;
wire   [4:0] mul_fu_499_p1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
end

nms_line_buf #(
    .DataWidth( 48 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
line_buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buf_address0),
    .ce0(line_buf_ce0),
    .we0(line_buf_we0),
    .d0(line_buf_d0),
    .q0(line_buf_q0),
    .address1(line_buf_address1),
    .ce1(line_buf_ce1),
    .we1(line_buf_we1),
    .d1(line_buf_d1),
    .q1(line_buf_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln31_fu_593_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b0) & (1'b1 == ap_condition_pp2_exit_iter3_state14) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b1 == ap_CS_fsm_state7) & (icmp_ln31_fu_593_p2 == 1'd0)))) begin
            ap_enable_reg_pp2_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter3_state14) & (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))))) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter2;
        end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln31_fu_593_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~(grad_nms_fu_766_p4 == 8'd0) & ~(grad_nms_fu_766_p4 == 8'd45) & ~(grad_nms_fu_766_p4 == 8'd90) & ~(grad_nms_fu_766_p4 == 8'd135) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        ap_phi_reg_pp2_iter3_value_nms_1_reg_312 <= value_nms_fu_761_p1;
    end else if (((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        ap_phi_reg_pp2_iter3_value_nms_1_reg_312 <= ap_phi_reg_pp2_iter2_value_nms_1_reg_312;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_372)) begin
        if (((grad_nms_reg_1215 == 8'd135) & (icmp_ln32_reg_1161_pp2_iter3_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter4_value_nms_1_reg_312 <= select_ln83_fu_903_p3;
        end else if (((grad_nms_reg_1215 == 8'd90) & (icmp_ln32_reg_1161_pp2_iter3_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter4_value_nms_1_reg_312 <= select_ln76_fu_914_p3;
        end else if (((grad_nms_reg_1215 == 8'd45) & (icmp_ln32_reg_1161_pp2_iter3_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter4_value_nms_1_reg_312 <= select_ln69_fu_925_p3;
        end else if (((grad_nms_reg_1215 == 8'd0) & (icmp_ln32_reg_1161_pp2_iter3_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter4_value_nms_1_reg_312 <= select_ln62_fu_936_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter4_value_nms_1_reg_312 <= ap_phi_reg_pp2_iter3_value_nms_1_reg_312;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_35_reg_267 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond879_fu_475_p2 == 1'd0))) begin
        empty_35_reg_267 <= empty_37_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond8810_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_256 <= empty_21_fu_337_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        empty_reg_256 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_urem_reg_278 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond879_fu_475_p2 == 1'd0))) begin
        phi_urem_reg_278 <= idx_urem_fu_561_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        window_buf_0_1_1_fu_182 <= window_buf_0_2_fu_789_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_0_1_1_fu_182 <= window_buf_0_2_0_load_reg_1046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        window_buf_0_1_fu_178 <= window_buf_0_1_1_fu_182;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_0_1_fu_178 <= window_buf_0_1_0_load_reg_1041;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        window_buf_1_1_1_fu_190 <= {{line_buf_q0[31:16]}};
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_1_1_1_fu_190 <= window_buf_1_2_0_load_reg_1056;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        window_buf_1_1_fu_186 <= window_buf_1_1_1_fu_190;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_1_1_fu_186 <= window_buf_1_1_0_load_reg_1051;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        window_buf_2_1_1_fu_198 <= {{line_buf_q0[47:32]}};
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_2_1_1_fu_198 <= window_buf_2_2_0_load_reg_1066;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        window_buf_2_1_fu_194 <= window_buf_2_1_1_fu_198;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_2_1_fu_194 <= window_buf_2_1_0_load_reg_1061;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161 == 1'd0))) begin
        xi_reg_300 <= add_ln32_reg_1176;
    end else if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln31_fu_593_p2 == 1'd0))) begin
        xi_reg_300 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        yi_reg_289 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        yi_reg_289 <= add_ln31_reg_1136;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln31_reg_1136 <= add_ln31_fu_599_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        add_ln32_reg_1176 <= add_ln32_fu_676_p2;
        ap_phi_reg_pp2_iter1_value_nms_1_reg_312 <= ap_phi_reg_pp2_iter0_value_nms_1_reg_312;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln32_reg_1161 == 1'd0))) begin
        add_ln45_reg_1186 <= add_ln45_fu_692_p2;
        data_load_reg_1191 <= data_q0;
        icmp_ln90_1_reg_1201 <= icmp_ln90_1_fu_713_p2;
        icmp_ln90_reg_1196 <= icmp_ln90_fu_707_p2;
        tmp_3_reg_1181 <= {{line_buf_q1[47:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        add_ln45_reg_1186_pp2_iter1_reg <= add_ln45_reg_1186;
        add_ln45_reg_1186_pp2_iter2_reg <= add_ln45_reg_1186_pp2_iter1_reg;
        add_ln45_reg_1186_pp2_iter3_reg <= add_ln45_reg_1186_pp2_iter2_reg;
        icmp_ln90_1_reg_1201_pp2_iter1_reg <= icmp_ln90_1_reg_1201;
        icmp_ln90_1_reg_1201_pp2_iter2_reg <= icmp_ln90_1_reg_1201_pp2_iter1_reg;
        icmp_ln90_1_reg_1201_pp2_iter3_reg <= icmp_ln90_1_reg_1201_pp2_iter2_reg;
        icmp_ln90_reg_1196_pp2_iter1_reg <= icmp_ln90_reg_1196;
        icmp_ln90_reg_1196_pp2_iter2_reg <= icmp_ln90_reg_1196_pp2_iter1_reg;
        icmp_ln90_reg_1196_pp2_iter3_reg <= icmp_ln90_reg_1196_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        ap_phi_reg_pp2_iter2_value_nms_1_reg_312 <= ap_phi_reg_pp2_iter1_value_nms_1_reg_312;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond8810_fu_331_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_22_reg_974 <= empty_22_fu_343_p1;
        empty_23_reg_989[5 : 4] <= empty_23_fu_365_p2[5 : 4];
        empty_24_reg_994 <= empty_24_fu_371_p2;
        empty_27_reg_1000 <= empty_27_fu_385_p2;
        tmp_1_reg_979 <= {{empty_reg_256[9:8]}};
        tmp_4_reg_984[5 : 4] <= tmp_4_fu_357_p3[5 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond8810_reg_965 <= exitcond8810_fu_331_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        grad_nms_reg_1215 <= {{window_buf_1_1_1_fu_190[15:8]}};
        value_nms_reg_1206 <= value_nms_fu_761_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln32_reg_1161 <= icmp_ln32_fu_654_p2;
        icmp_ln32_reg_1161_pp2_iter1_reg <= icmp_ln32_reg_1161;
        icmp_ln32_reg_1161_pp2_iter2_reg <= icmp_ln32_reg_1161_pp2_iter1_reg;
        icmp_ln32_reg_1161_pp2_iter3_reg <= icmp_ln32_reg_1161_pp2_iter2_reg;
        line_buf_addr_1_reg_1165_pp2_iter1_reg <= line_buf_addr_1_reg_1165;
        line_buf_addr_1_reg_1165_pp2_iter2_reg <= line_buf_addr_1_reg_1165_pp2_iter1_reg;
        trunc_ln32_reg_1156 <= trunc_ln32_fu_650_p1;
        trunc_ln32_reg_1156_pp2_iter1_reg <= trunc_ln32_reg_1156;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (grad_nms_fu_766_p4 == 8'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        icmp_ln62_reg_1249 <= icmp_ln62_fu_857_p2;
        icmp_ln63_reg_1254 <= icmp_ln63_fu_863_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (grad_nms_fu_766_p4 == 8'd45) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        icmp_ln69_reg_1239 <= icmp_ln69_fu_845_p2;
        icmp_ln70_reg_1244 <= icmp_ln70_fu_851_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (grad_nms_fu_766_p4 == 8'd90) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        icmp_ln76_reg_1229 <= grp_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (grad_nms_fu_766_p4 == 8'd90) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        icmp_ln77_reg_1234 <= icmp_ln77_fu_839_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (grad_nms_fu_766_p4 == 8'd135) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        icmp_ln83_reg_1219 <= icmp_ln83_fu_833_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (grad_nms_fu_766_p4 == 8'd135) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter2_reg == 1'd0))) begin
        icmp_ln84_reg_1224 <= grp_fu_327_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_fu_654_p2 == 1'd0))) begin
        line_buf_addr_1_reg_1165 <= zext_ln32_fu_645_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln31_fu_593_p2 == 1'd0))) begin
        or_ln90_1_reg_1151 <= or_ln90_1_fu_639_p2;
        shl_ln_reg_1146[15 : 8] <= shl_ln_fu_609_p3[15 : 8];
        trunc_ln45_reg_1141 <= trunc_ln45_fu_605_p1;
    end
end

always @ (*) begin
    if ((exitcond8810_fu_331_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        ap_condition_pp2_exit_iter3_state14 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter3_state14 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln32_reg_1161 == 1'd1))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln31_fu_593_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161 == 1'd0))) begin
        ap_phi_mux_xi_phi_fu_304_p4 = add_ln32_reg_1176;
    end else begin
        ap_phi_mux_xi_phi_fu_304_p4 = xi_reg_300;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln31_fu_593_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        line_buf_address0 = line_buf_addr_1_reg_1165_pp2_iter2_reg;
    end else if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        line_buf_address0 = line_buf_addr_1_reg_1165;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buf_address0 = p_cast10_fu_391_p1;
    end else begin
        line_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        line_buf_address1 = zext_ln45_2_fu_723_p1;
    end else if (((1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        line_buf_address1 = zext_ln32_fu_645_p1;
    end else begin
        line_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        line_buf_ce0 = 1'b1;
    end else begin
        line_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1)))) begin
        line_buf_ce1 = 1'b1;
    end else begin
        line_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        line_buf_d0 = zext_ln42_fu_719_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buf_d0 = empty_33_fu_432_p2;
    end else begin
        line_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161 == 1'd0))) begin
        line_buf_we0 = 6'd15;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond8810_reg_965 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buf_we0 = mask_fu_450_p2;
    end else begin
        line_buf_we0 = 6'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (icmp_ln32_reg_1161_pp2_iter1_reg == 1'd0))) begin
        line_buf_we1 = 6'd48;
    end else begin
        line_buf_we1 = 6'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        out_r_ce0 = 1'b1;
    end else begin
        out_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln32_reg_1161_pp2_iter3_reg == 1'd0))) begin
        out_r_we0 = 1'b1;
    end else begin
        out_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond8810_fu_331_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond8810_fu_331_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond879_fu_475_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (icmp_ln31_fu_593_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((1'b0 == ap_block_pp2_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln31_fu_599_p2 = (yi_reg_289 + 9'd1);

assign add_ln32_fu_676_p2 = (9'd1 + xi_reg_300);

assign add_ln45_1_fu_660_p3 = {{trunc_ln45_reg_1141}, {trunc_ln32_fu_650_p1}};

assign add_ln45_fu_692_p2 = (shl_ln_reg_1146 + zext_ln32_1_fu_672_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_372 = ((1'b0 == ap_block_pp2_stage1_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_phi_reg_pp2_iter0_value_nms_1_reg_312 = 'bx;

assign cmp100_not_fu_633_p2 = ((yi_reg_289 > 9'd252) ? 1'b1 : 1'b0);

assign data_address0 = zext_ln45_fu_667_p1;

assign empty_21_fu_337_p2 = (empty_reg_256 + 10'd1);

assign empty_22_fu_343_p1 = empty_reg_256[7:0];

assign empty_23_fu_365_p2 = (tmp_4_fu_357_p3 | 6'd15);

assign empty_24_fu_371_p2 = ((tmp_4_fu_357_p3 > empty_23_fu_365_p2) ? 1'b1 : 1'b0);

assign empty_25_fu_377_p3 = ((empty_24_fu_371_p2[0:0] === 1'b1) ? tmp_4_fu_357_p3 : empty_23_fu_365_p2);

assign empty_26_fu_395_p3 = ((empty_24_reg_994[0:0] === 1'b1) ? empty_23_reg_989 : tmp_4_reg_984);

assign empty_27_fu_385_p2 = ($signed(6'd47) - $signed(empty_25_fu_377_p3));

assign empty_28_fu_400_p1 = empty_26_fu_395_p3;

assign empty_29_fu_404_p1 = empty_27_reg_1000;

assign empty_30_fu_407_p3 = ((empty_24_reg_994[0:0] === 1'b1) ? 48'd0 : 48'd0);

assign empty_31_fu_414_p2 = 48'd281474976710655 << empty_28_fu_400_p1;

assign empty_32_fu_420_p2 = 48'd281474976710655 >> empty_29_fu_404_p1;

assign empty_33_fu_432_p2 = (p_demorgan_fu_426_p2 & empty_30_fu_407_p3);

assign empty_34_fu_446_p1 = tmp_fu_439_p3;

assign empty_37_fu_481_p2 = (empty_35_reg_267 + 4'd1);

assign empty_39_fu_555_p2 = ((next_urem_fu_549_p2 < 4'd3) ? 1'b1 : 1'b0);

assign exitcond879_fu_475_p2 = ((empty_35_reg_267 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond8810_fu_331_p2 = ((empty_reg_256 == 10'd768) ? 1'b1 : 1'b0);

assign grad_nms_fu_766_p4 = {{window_buf_1_1_1_fu_190[15:8]}};

assign grp_fu_327_p2 = ((value_nms_fu_761_p1 < trunc_ln55_fu_784_p1) ? 1'b1 : 1'b0);

assign icmp_fu_627_p2 = ((tmp_2_fu_617_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_593_p2 = ((yi_reg_289 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_654_p2 = ((ap_phi_mux_xi_phi_fu_304_p4 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln62_fu_857_p2 = ((value_nms_fu_761_p1 < trunc_ln50_1_fu_757_p1) ? 1'b1 : 1'b0);

assign icmp_ln63_fu_863_p2 = ((value_nms_fu_761_p1 < trunc_ln55_3_fu_793_p4) ? 1'b1 : 1'b0);

assign icmp_ln69_fu_845_p2 = ((value_nms_fu_761_p1 < trunc_ln50_fu_753_p1) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_851_p2 = ((value_nms_fu_761_p1 < trunc_ln55_2_fu_813_p4) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_839_p2 = ((value_nms_fu_761_p1 < trunc_ln50_4_fu_780_p1) ? 1'b1 : 1'b0);

assign icmp_ln83_fu_833_p2 = ((value_nms_fu_761_p1 < trunc_ln50_3_fu_776_p1) ? 1'b1 : 1'b0);

assign icmp_ln90_1_fu_713_p2 = ((xi_reg_300 > 9'd252) ? 1'b1 : 1'b0);

assign icmp_ln90_fu_707_p2 = ((tmp_7_fu_697_p4 == 7'd0) ? 1'b1 : 1'b0);

assign idx_urem_fu_561_p3 = ((empty_39_fu_555_p2[0:0] === 1'b1) ? next_urem_fu_549_p2 : 4'd0);

assign line_buf_d1 = {{data_load_reg_1191}, {32'd0}};

assign mask_fu_450_p2 = 6'd3 << empty_34_fu_446_p1;

assign next_urem_fu_549_p2 = (phi_urem_reg_278 + 4'd1);

assign or_ln62_fu_932_p2 = (icmp_ln63_reg_1254 | icmp_ln62_reg_1249);

assign or_ln69_fu_921_p2 = (icmp_ln70_reg_1244 | icmp_ln69_reg_1239);

assign or_ln76_fu_910_p2 = (icmp_ln77_reg_1234 | icmp_ln76_reg_1229);

assign or_ln83_fu_899_p2 = (icmp_ln84_reg_1224 | icmp_ln83_reg_1219);

assign or_ln90_1_fu_639_p2 = (icmp_fu_627_p2 | cmp100_not_fu_633_p2);

assign or_ln90_2_fu_951_p2 = (or_ln90_fu_947_p2 | or_ln90_1_reg_1151);

assign or_ln90_fu_947_p2 = (icmp_ln90_reg_1196_pp2_iter3_reg | icmp_ln90_1_reg_1201_pp2_iter3_reg);

assign out_r_address0 = zext_ln45_1_fu_943_p1;

assign out_r_d0 = ((or_ln90_2_fu_951_p2[0:0] === 1'b1) ? 8'd0 : ap_phi_reg_pp2_iter4_value_nms_1_reg_312);

assign p_cast10_fu_391_p1 = empty_22_reg_974;

assign p_demorgan_fu_426_p2 = (empty_32_fu_420_p2 & empty_31_fu_414_p2);

assign select_ln62_fu_936_p3 = ((or_ln62_fu_932_p2[0:0] === 1'b1) ? 8'd0 : value_nms_reg_1206);

assign select_ln69_fu_925_p3 = ((or_ln69_fu_921_p2[0:0] === 1'b1) ? 8'd0 : value_nms_reg_1206);

assign select_ln76_fu_914_p3 = ((or_ln76_fu_910_p2[0:0] === 1'b1) ? 8'd0 : value_nms_reg_1206);

assign select_ln83_fu_903_p3 = ((or_ln83_fu_899_p2[0:0] === 1'b1) ? 8'd0 : value_nms_reg_1206);

assign shl_ln_fu_609_p3 = {{trunc_ln45_fu_605_p1}, {8'd0}};

assign tmp_1_fu_347_p4 = {{empty_reg_256[9:8]}};

assign tmp_2_fu_617_p4 = {{yi_reg_289[8:2]}};

assign tmp_4_fu_357_p3 = {{tmp_1_fu_347_p4}, {4'd0}};

assign tmp_7_fu_697_p4 = {{xi_reg_300[8:2]}};

assign tmp_fu_439_p3 = {{tmp_1_reg_979}, {1'd0}};

assign trunc_ln32_fu_650_p1 = ap_phi_mux_xi_phi_fu_304_p4[7:0];

assign trunc_ln45_fu_605_p1 = yi_reg_289[7:0];

assign trunc_ln50_1_fu_757_p1 = window_buf_1_1_fu_186[7:0];

assign trunc_ln50_3_fu_776_p1 = window_buf_2_1_fu_194[7:0];

assign trunc_ln50_4_fu_780_p1 = window_buf_2_1_1_fu_198[7:0];

assign trunc_ln50_fu_753_p1 = window_buf_0_1_fu_178[7:0];

assign trunc_ln55_2_fu_813_p4 = {{line_buf_q0[39:32]}};

assign trunc_ln55_3_fu_793_p4 = {{line_buf_q0[23:16]}};

assign trunc_ln55_fu_784_p1 = line_buf_q0[7:0];

assign value_nms_fu_761_p1 = window_buf_1_1_1_fu_190[7:0];

assign window_buf_0_1_0_load_reg_1041 = 16'd0;

assign window_buf_0_2_0_load_reg_1046 = 16'd0;

assign window_buf_0_2_fu_789_p1 = line_buf_q0[15:0];

assign window_buf_1_1_0_load_reg_1051 = 16'd0;

assign window_buf_1_2_0_load_reg_1056 = 16'd0;

assign window_buf_2_1_0_load_reg_1061 = 16'd0;

assign window_buf_2_2_0_load_reg_1066 = 16'd0;

assign zext_ln32_1_fu_672_p1 = xi_reg_300;

assign zext_ln32_fu_645_p1 = ap_phi_mux_xi_phi_fu_304_p4;

assign zext_ln42_fu_719_p1 = tmp_3_reg_1181;

assign zext_ln45_1_fu_943_p1 = add_ln45_reg_1186_pp2_iter3_reg;

assign zext_ln45_2_fu_723_p1 = trunc_ln32_reg_1156_pp2_iter1_reg;

assign zext_ln45_fu_667_p1 = add_ln45_1_fu_660_p3;

always @ (posedge ap_clk) begin
    tmp_4_reg_984[3:0] <= 4'b0000;
    empty_23_reg_989[3:0] <= 4'b1111;
    shl_ln_reg_1146[7:0] <= 8'b00000000;
end

endmodule //nms
