// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.1 (64-bit)
// Version: 2020.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module sobel_sobel_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RFIFONUM,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RFIFONUM,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        sext_ln45,
        out_r,
        line_buf_address0,
        line_buf_ce0,
        line_buf_we0,
        line_buf_d0,
        line_buf_address1,
        line_buf_ce1,
        line_buf_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [63:0] m_axi_gmem0_AWADDR;
output  [0:0] m_axi_gmem0_AWID;
output  [31:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [0:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [511:0] m_axi_gmem0_WDATA;
output  [63:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [0:0] m_axi_gmem0_WID;
output  [0:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [63:0] m_axi_gmem0_ARADDR;
output  [0:0] m_axi_gmem0_ARID;
output  [31:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [0:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [511:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [0:0] m_axi_gmem0_RID;
input  [8:0] m_axi_gmem0_RFIFONUM;
input  [0:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [0:0] m_axi_gmem0_BID;
input  [0:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [63:0] m_axi_gmem1_AWADDR;
output  [0:0] m_axi_gmem1_AWID;
output  [31:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [0:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [15:0] m_axi_gmem1_WDATA;
output  [1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [0:0] m_axi_gmem1_WID;
output  [0:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [63:0] m_axi_gmem1_ARADDR;
output  [0:0] m_axi_gmem1_ARID;
output  [31:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [0:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [15:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [0:0] m_axi_gmem1_RID;
input  [9:0] m_axi_gmem1_RFIFONUM;
input  [0:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [0:0] m_axi_gmem1_BID;
input  [0:0] m_axi_gmem1_BUSER;
input  [57:0] sext_ln45;
input  [63:0] out_r;
output  [8:0] line_buf_address0;
output   line_buf_ce0;
output  [2:0] line_buf_we0;
output  [23:0] line_buf_d0;
output  [8:0] line_buf_address1;
output   line_buf_ce1;
input  [23:0] line_buf_q1;

reg ap_idle;
reg m_axi_gmem0_RREADY;
reg m_axi_gmem1_AWVALID;
reg m_axi_gmem1_WVALID;
reg m_axi_gmem1_BREADY;
reg line_buf_ce0;
reg[2:0] line_buf_we0;
reg line_buf_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg    ap_enable_reg_pp0_iter74;
reg    ap_enable_reg_pp0_iter75;
reg    ap_enable_reg_pp0_iter76;
reg    ap_enable_reg_pp0_iter77;
reg    ap_enable_reg_pp0_iter78;
reg    ap_enable_reg_pp0_iter79;
reg    ap_enable_reg_pp0_iter80;
reg    ap_enable_reg_pp0_iter81;
reg    ap_enable_reg_pp0_iter82;
reg    ap_enable_reg_pp0_iter83;
reg    ap_enable_reg_pp0_iter84;
reg    ap_enable_reg_pp0_iter85;
reg    ap_enable_reg_pp0_iter86;
reg    ap_enable_reg_pp0_iter87;
reg    ap_enable_reg_pp0_iter88;
reg    ap_enable_reg_pp0_iter89;
reg    ap_enable_reg_pp0_iter90;
reg    ap_enable_reg_pp0_iter91;
reg    ap_enable_reg_pp0_iter92;
reg    ap_enable_reg_pp0_iter93;
reg    ap_enable_reg_pp0_iter94;
reg    ap_enable_reg_pp0_iter95;
reg    ap_enable_reg_pp0_iter96;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln45_reg_1311;
reg   [0:0] icmp_ln59_reg_1329;
reg    ap_predicate_op158_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_state12_pp0_stage0_iter11;
wire    ap_block_state13_pp0_stage0_iter12;
wire    ap_block_state14_pp0_stage0_iter13;
wire    ap_block_state15_pp0_stage0_iter14;
wire    ap_block_state16_pp0_stage0_iter15;
wire    ap_block_state17_pp0_stage0_iter16;
wire    ap_block_state18_pp0_stage0_iter17;
wire    ap_block_state19_pp0_stage0_iter18;
wire    ap_block_state20_pp0_stage0_iter19;
wire    ap_block_state21_pp0_stage0_iter20;
wire    ap_block_state22_pp0_stage0_iter21;
wire    ap_block_state23_pp0_stage0_iter22;
wire    ap_block_state24_pp0_stage0_iter23;
wire    ap_block_state25_pp0_stage0_iter24;
wire    ap_block_state26_pp0_stage0_iter25;
wire    ap_block_state27_pp0_stage0_iter26;
wire    ap_block_state28_pp0_stage0_iter27;
reg   [0:0] empty_39_reg_1338;
reg   [0:0] empty_39_reg_1338_pp0_iter26_reg;
reg    ap_block_state28_io;
wire    ap_block_state29_pp0_stage0_iter28;
wire    ap_block_state30_pp0_stage0_iter29;
wire    ap_block_state31_pp0_stage0_iter30;
wire    ap_block_state32_pp0_stage0_iter31;
wire    ap_block_state33_pp0_stage0_iter32;
wire    ap_block_state34_pp0_stage0_iter33;
wire    ap_block_state35_pp0_stage0_iter34;
wire    ap_block_state36_pp0_stage0_iter35;
wire    ap_block_state37_pp0_stage0_iter36;
wire    ap_block_state38_pp0_stage0_iter37;
wire    ap_block_state39_pp0_stage0_iter38;
wire    ap_block_state40_pp0_stage0_iter39;
wire    ap_block_state41_pp0_stage0_iter40;
wire    ap_block_state42_pp0_stage0_iter41;
wire    ap_block_state43_pp0_stage0_iter42;
wire    ap_block_state44_pp0_stage0_iter43;
wire    ap_block_state45_pp0_stage0_iter44;
wire    ap_block_state46_pp0_stage0_iter45;
wire    ap_block_state47_pp0_stage0_iter46;
wire    ap_block_state48_pp0_stage0_iter47;
wire    ap_block_state49_pp0_stage0_iter48;
wire    ap_block_state50_pp0_stage0_iter49;
wire    ap_block_state51_pp0_stage0_iter50;
wire    ap_block_state52_pp0_stage0_iter51;
wire    ap_block_state53_pp0_stage0_iter52;
wire    ap_block_state54_pp0_stage0_iter53;
wire    ap_block_state55_pp0_stage0_iter54;
wire    ap_block_state56_pp0_stage0_iter55;
wire    ap_block_state57_pp0_stage0_iter56;
wire    ap_block_state58_pp0_stage0_iter57;
wire    ap_block_state59_pp0_stage0_iter58;
wire    ap_block_state60_pp0_stage0_iter59;
wire    ap_block_state61_pp0_stage0_iter60;
wire    ap_block_state62_pp0_stage0_iter61;
wire    ap_block_state63_pp0_stage0_iter62;
wire    ap_block_state64_pp0_stage0_iter63;
wire    ap_block_state65_pp0_stage0_iter64;
wire    ap_block_state66_pp0_stage0_iter65;
wire    ap_block_state67_pp0_stage0_iter66;
wire    ap_block_state68_pp0_stage0_iter67;
wire    ap_block_state69_pp0_stage0_iter68;
wire    ap_block_state70_pp0_stage0_iter69;
wire    ap_block_state71_pp0_stage0_iter70;
wire    ap_block_state72_pp0_stage0_iter71;
wire    ap_block_state73_pp0_stage0_iter72;
wire    ap_block_state74_pp0_stage0_iter73;
wire    ap_block_state75_pp0_stage0_iter74;
wire    ap_block_state76_pp0_stage0_iter75;
wire    ap_block_state77_pp0_stage0_iter76;
wire    ap_block_state78_pp0_stage0_iter77;
wire    ap_block_state79_pp0_stage0_iter78;
wire    ap_block_state80_pp0_stage0_iter79;
wire    ap_block_state81_pp0_stage0_iter80;
wire    ap_block_state82_pp0_stage0_iter81;
wire    ap_block_state83_pp0_stage0_iter82;
wire    ap_block_state84_pp0_stage0_iter83;
wire    ap_block_state85_pp0_stage0_iter84;
wire    ap_block_state86_pp0_stage0_iter85;
wire    ap_block_state87_pp0_stage0_iter86;
wire    ap_block_state88_pp0_stage0_iter87;
wire    ap_block_state89_pp0_stage0_iter88;
wire    ap_block_state90_pp0_stage0_iter89;
wire    ap_block_state91_pp0_stage0_iter90;
wire    ap_block_state92_pp0_stage0_iter91;
wire    ap_block_state93_pp0_stage0_iter92;
wire    ap_block_state94_pp0_stage0_iter93;
wire    ap_block_state95_pp0_stage0_iter94;
wire    ap_block_state96_pp0_stage0_iter95;
reg   [0:0] empty_41_reg_1342;
reg   [0:0] empty_41_reg_1342_pp0_iter95_reg;
reg    ap_block_state97_pp0_stage0_iter96;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln45_fu_365_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem1_blk_n_AW;
wire    ap_block_pp0_stage0;
reg    gmem1_blk_n_W;
reg    gmem1_blk_n_B;
reg    gmem0_blk_n_R;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter1_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter2_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter3_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter4_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter5_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter6_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter7_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter8_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter9_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter10_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter11_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter12_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter13_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter14_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter15_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter16_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter17_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter18_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter19_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter20_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter21_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter22_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter23_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter24_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter25_reg;
reg   [0:0] icmp_ln45_reg_1311_pp0_iter26_reg;
wire   [0:0] icmp_ln46_fu_380_p2;
reg   [0:0] icmp_ln46_reg_1315;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter1_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter2_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter3_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter4_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter5_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter6_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter7_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter8_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter9_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter10_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter11_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter12_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter13_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter14_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter15_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter16_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter17_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter18_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter19_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter20_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter21_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter22_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter23_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter24_reg;
reg   [0:0] icmp_ln46_reg_1315_pp0_iter25_reg;
reg   [8:0] line_buf_addr_reg_1323;
reg   [8:0] line_buf_addr_reg_1323_pp0_iter1_reg;
wire   [0:0] icmp_ln59_fu_407_p2;
reg   [0:0] icmp_ln59_reg_1329_pp0_iter1_reg;
wire   [0:0] icmp_ln124_fu_423_p2;
reg   [0:0] icmp_ln124_reg_1333;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter1_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter2_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter3_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter4_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter5_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter6_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter7_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter8_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter9_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter10_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter11_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter12_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter13_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter14_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter15_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter16_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter17_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter18_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter19_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter20_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter21_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter22_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter23_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter24_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter25_reg;
reg   [0:0] icmp_ln124_reg_1333_pp0_iter26_reg;
wire   [0:0] empty_39_fu_441_p2;
reg   [0:0] empty_39_reg_1338_pp0_iter1_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter2_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter3_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter4_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter5_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter6_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter7_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter8_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter9_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter10_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter11_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter12_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter13_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter14_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter15_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter16_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter17_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter18_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter19_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter20_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter21_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter22_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter23_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter24_reg;
reg   [0:0] empty_39_reg_1338_pp0_iter25_reg;
wire   [0:0] empty_41_fu_465_p2;
reg   [0:0] empty_41_reg_1342_pp0_iter1_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter2_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter3_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter4_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter5_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter6_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter7_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter8_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter9_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter10_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter11_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter12_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter13_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter14_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter15_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter16_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter17_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter18_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter19_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter20_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter21_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter22_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter23_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter24_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter25_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter26_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter27_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter28_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter29_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter30_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter31_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter32_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter33_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter34_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter35_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter36_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter37_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter38_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter39_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter40_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter41_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter42_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter43_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter44_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter45_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter46_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter47_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter48_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter49_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter50_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter51_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter52_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter53_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter54_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter55_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter56_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter57_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter58_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter59_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter60_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter61_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter62_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter63_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter64_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter65_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter66_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter67_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter68_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter69_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter70_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter71_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter72_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter73_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter74_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter75_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter76_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter77_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter78_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter79_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter80_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter81_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter82_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter83_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter84_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter85_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter86_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter87_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter88_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter89_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter90_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter91_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter92_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter93_reg;
reg   [0:0] empty_41_reg_1342_pp0_iter94_reg;
reg   [7:0] tmp_4_reg_1346;
reg   [7:0] tmp_7_reg_1353;
reg   [511:0] gmem0_addr_read_reg_1359;
reg   [15:0] tmp_3_reg_1364;
wire   [10:0] pix_h_sobel_fu_631_p2;
reg   [10:0] pix_h_sobel_reg_1369;
wire   [10:0] zext_ln79_2_fu_637_p1;
reg   [10:0] zext_ln79_2_reg_1375;
wire  signed [10:0] pix_v_sobel_fu_689_p2;
reg  signed [10:0] pix_v_sobel_reg_1381;
reg  signed [10:0] pix_v_sobel_reg_1381_pp0_iter3_reg;
wire  signed [10:0] pix_h_sobel_2_fu_728_p2;
reg  signed [10:0] pix_h_sobel_2_reg_1387;
reg  signed [10:0] pix_h_sobel_2_reg_1387_pp0_iter4_reg;
wire   [0:0] icmp_ln99_fu_732_p2;
reg   [0:0] icmp_ln99_reg_1392;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter4_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter5_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter6_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter7_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter8_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter9_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter10_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter11_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter12_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter13_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter14_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter15_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter16_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter17_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter18_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter19_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter20_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter21_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter22_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter23_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter24_reg;
reg   [0:0] icmp_ln99_reg_1392_pp0_iter25_reg;
wire  signed [21:0] sext_ln74_fu_757_p1;
wire  signed [21:0] sext_ln73_1_fu_760_p1;
wire  signed [21:0] grp_fu_1217_p2;
wire  signed [21:0] grp_fu_1223_p3;
reg  signed [21:0] add_ln90_reg_1423;
wire   [31:0] grp_fu_300_p1;
reg   [31:0] x_assign_reg_1433;
wire   [31:0] grp_fu_303_p2;
reg   [31:0] dc_reg_1438;
wire   [0:0] select_ln45_3_fu_894_p3;
reg   [0:0] select_ln45_3_reg_1443;
reg   [0:0] p_Result_s_reg_1448;
wire   [31:0] val_fu_1025_p3;
reg   [31:0] val_reg_1453;
wire  signed [31:0] sext_ln100_fu_1033_p1;
reg   [63:0] gmem1_addr_reg_1464;
wire   [15:0] select_ln124_fu_1209_p3;
reg   [15:0] select_ln124_reg_1470;
reg    ap_condition_exit_pp0_iter26_stage0;
reg   [511:0] ap_phi_mux_empty_42_phi_fu_283_p4;
wire   [511:0] ap_phi_reg_pp0_iter2_empty_42_reg_280;
wire   [511:0] zext_ln46_fu_536_p1;
wire   [31:0] ap_phi_reg_pp0_iter0_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter1_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter2_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter3_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter4_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter5_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter6_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter7_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter8_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter9_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter10_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter11_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter12_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter13_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter14_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter15_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter16_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter17_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter18_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter19_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter20_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter21_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter22_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter23_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter24_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter25_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter26_t_int_1_reg_289;
reg   [31:0] ap_phi_reg_pp0_iter27_t_int_1_reg_289;
wire   [63:0] zext_ln46_1_fu_394_p1;
wire  signed [63:0] sext_ln45_1_fu_884_p1;
reg    ap_block_pp0_stage0_01001;
reg   [503:0] shiftreg_fu_190;
wire    ap_loop_init;
reg   [7:0] pix_v_sobel_1_fu_194;
reg   [7:0] empty_fu_198;
reg   [7:0] empty_33_fu_202;
reg   [9:0] xi_fu_206;
wire   [9:0] add_ln46_fu_447_p2;
reg   [9:0] ap_sig_allocacmp_xi_load;
reg   [9:0] yi_fu_210;
wire   [9:0] select_ln45_4_fu_901_p3;
reg   [18:0] indvar_flatten_fu_214;
wire   [18:0] add_ln45_fu_371_p2;
reg   [18:0] ap_sig_allocacmp_indvar_flatten_load;
reg   [7:0] empty_34_fu_218;
reg   [7:0] empty_35_fu_222;
reg   [7:0] empty_36_fu_226;
wire   [7:0] trunc_ln59_1_fu_550_p1;
wire  signed [31:0] grp_fu_300_p0;
wire   [9:0] select_ln45_fu_386_p3;
wire   [5:0] trunc_ln46_fu_399_p1;
wire   [8:0] trunc_ln59_fu_403_p1;
wire   [9:0] zext_ln124_fu_413_p1;
wire   [9:0] add_ln124_fu_417_p2;
wire   [8:0] empty_38_fu_429_p1;
wire   [18:0] tmp_17_fu_433_p3;
wire   [8:0] empty_40_fu_453_p1;
wire   [18:0] tmp_18_fu_457_p3;
wire   [503:0] select_ln45_1_fu_529_p3;
wire   [8:0] zext_ln73_1_fu_582_p1;
wire   [8:0] tmp_4_cast_fu_586_p1;
wire   [8:0] tmp_fu_589_p2;
wire   [9:0] tmp_9_fu_595_p3;
wire   [8:0] zext_ln73_fu_572_p1;
wire   [8:0] zext_ln79_fu_607_p1;
wire   [8:0] pix_h_sobel_3_fu_611_p2;
wire   [9:0] zext_ln79_1_fu_617_p1;
wire   [9:0] tmp_2_cast_fu_579_p1;
wire   [9:0] pix_h_sobel_4_fu_621_p2;
wire  signed [10:0] sext_ln79_fu_627_p1;
wire  signed [10:0] sext_ln73_fu_603_p1;
wire   [8:0] zext_ln74_fu_641_p1;
wire   [8:0] zext_ln74_1_fu_645_p1;
wire   [8:0] tmp16_fu_649_p2;
wire   [9:0] tmp_8_fu_655_p3;
wire   [8:0] pix_v_sobel_4_fu_667_p2;
wire  signed [10:0] sext_ln86_fu_663_p1;
wire   [10:0] tmp_2_cast1_fu_576_p1;
wire   [10:0] add_ln86_fu_677_p2;
wire  signed [10:0] sext_ln86_1_fu_673_p1;
wire   [10:0] pix_v_sobel_5_fu_683_p2;
wire   [18:0] tmp_16_fu_736_p3;
wire  signed [19:0] grp_fu_751_p0;
wire   [7:0] tmp_1_fu_774_p4;
wire   [8:0] empty_37_fu_770_p1;
wire   [0:0] icmp_fu_784_p2;
wire   [0:0] cmp145_not_fu_790_p2;
wire   [9:0] add_ln45_2_fu_810_p2;
wire   [7:0] tmp_2_fu_820_p4;
wire   [8:0] empty_44_fu_816_p1;
wire   [17:0] tmp_6_mid1_fu_842_p3;
wire   [17:0] tmp_6_fu_796_p3;
wire   [17:0] select_ln45_2_fu_850_p3;
wire   [18:0] sext_ln127_1_mid2_v_v_v_v_v_fu_857_p3;
wire   [63:0] zext_ln45_fu_865_p1;
wire   [63:0] add_ln45_1_fu_869_p2;
wire   [62:0] sext_ln127_1_mid2_v_fu_874_p4;
wire   [0:0] icmp34_fu_830_p2;
wire   [0:0] cmp145_not_mid1_fu_836_p2;
wire   [0:0] or_ln124_2_fu_888_p2;
wire   [0:0] or_ln124_fu_804_p2;
wire   [31:0] data_V_fu_908_p1;
wire   [22:0] p_Result_1_fu_929_p1;
wire   [24:0] mantissa_fu_933_p4;
wire   [7:0] xs_exp_V_fu_919_p4;
wire   [8:0] zext_ln346_fu_947_p1;
wire   [8:0] add_ln346_fu_951_p2;
wire   [7:0] sub_ln1512_fu_965_p2;
wire   [0:0] isNeg_fu_957_p3;
wire  signed [8:0] sext_ln1512_fu_971_p1;
wire   [8:0] ush_fu_975_p3;
wire  signed [31:0] sext_ln1488_fu_983_p1;
wire   [78:0] zext_ln15_fu_943_p1;
wire   [78:0] zext_ln1488_fu_987_p1;
wire   [78:0] r_V_fu_991_p2;
wire   [0:0] tmp_14_fu_1003_p3;
wire   [78:0] r_V_1_fu_997_p2;
wire   [31:0] zext_ln818_fu_1011_p1;
wire   [31:0] tmp_10_fu_1015_p4;
wire   [19:0] grp_fu_751_p2;
wire   [31:0] result_V_2_fu_1048_p2;
wire   [31:0] result_V_fu_1053_p3;
wire   [23:0] tmp_15_fu_1059_p4;
wire   [0:0] icmp_ln107_fu_1075_p2;
wire   [0:0] icmp_ln107_1_fu_1081_p2;
wire   [0:0] icmp_ln115_fu_1105_p2;
wire   [0:0] icmp_ln115_1_fu_1111_p2;
wire   [0:0] and_ln115_fu_1117_p2;
wire   [0:0] and_ln107_1_fu_1131_p2;
wire   [0:0] icmp_ln111_1_fu_1099_p2;
wire   [0:0] xor_ln107_fu_1137_p2;
wire   [0:0] and_ln111_fu_1143_p2;
wire   [0:0] icmp_ln111_fu_1093_p2;
wire   [0:0] and_ln111_1_fu_1149_p2;
wire   [0:0] and_ln107_fu_1087_p2;
wire   [0:0] or_ln111_fu_1163_p2;
wire   [7:0] select_ln111_fu_1155_p3;
wire   [7:0] select_ln107_fu_1123_p3;
wire   [7:0] grad_sobel_fu_1169_p3;
wire   [0:0] icmp_ln93_fu_1069_p2;
wire   [7:0] trunc_ln126_fu_1189_p1;
wire   [7:0] select_ln126_fu_1193_p3;
wire   [0:0] or_ln124_1_fu_1177_p2;
wire   [15:0] shl_ln2_fu_1181_p3;
wire   [15:0] tmp_s_fu_1201_p3;
wire  signed [10:0] grp_fu_1217_p0;
wire  signed [10:0] grp_fu_1217_p1;
wire  signed [10:0] grp_fu_1223_p0;
wire  signed [10:0] grp_fu_1223_p1;
reg    grp_fu_300_ce;
reg    grp_fu_303_ce;
reg    grp_fu_751_ce;
reg    grp_fu_1217_ce;
reg    grp_fu_1223_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg    ap_loop_exit_ready_pp0_iter49_reg;
reg    ap_loop_exit_ready_pp0_iter50_reg;
reg    ap_loop_exit_ready_pp0_iter51_reg;
reg    ap_loop_exit_ready_pp0_iter52_reg;
reg    ap_loop_exit_ready_pp0_iter53_reg;
reg    ap_loop_exit_ready_pp0_iter54_reg;
reg    ap_loop_exit_ready_pp0_iter55_reg;
reg    ap_loop_exit_ready_pp0_iter56_reg;
reg    ap_loop_exit_ready_pp0_iter57_reg;
reg    ap_loop_exit_ready_pp0_iter58_reg;
reg    ap_loop_exit_ready_pp0_iter59_reg;
reg    ap_loop_exit_ready_pp0_iter60_reg;
reg    ap_loop_exit_ready_pp0_iter61_reg;
reg    ap_loop_exit_ready_pp0_iter62_reg;
reg    ap_loop_exit_ready_pp0_iter63_reg;
reg    ap_loop_exit_ready_pp0_iter64_reg;
reg    ap_loop_exit_ready_pp0_iter65_reg;
reg    ap_loop_exit_ready_pp0_iter66_reg;
reg    ap_loop_exit_ready_pp0_iter67_reg;
reg    ap_loop_exit_ready_pp0_iter68_reg;
reg    ap_loop_exit_ready_pp0_iter69_reg;
reg    ap_loop_exit_ready_pp0_iter70_reg;
reg    ap_loop_exit_ready_pp0_iter71_reg;
reg    ap_loop_exit_ready_pp0_iter72_reg;
reg    ap_loop_exit_ready_pp0_iter73_reg;
reg    ap_loop_exit_ready_pp0_iter74_reg;
reg    ap_loop_exit_ready_pp0_iter75_reg;
reg    ap_loop_exit_ready_pp0_iter76_reg;
reg    ap_loop_exit_ready_pp0_iter77_reg;
reg    ap_loop_exit_ready_pp0_iter78_reg;
reg    ap_loop_exit_ready_pp0_iter79_reg;
reg    ap_loop_exit_ready_pp0_iter80_reg;
reg    ap_loop_exit_ready_pp0_iter81_reg;
reg    ap_loop_exit_ready_pp0_iter82_reg;
reg    ap_loop_exit_ready_pp0_iter83_reg;
reg    ap_loop_exit_ready_pp0_iter84_reg;
reg    ap_loop_exit_ready_pp0_iter85_reg;
reg    ap_loop_exit_ready_pp0_iter86_reg;
reg    ap_loop_exit_ready_pp0_iter87_reg;
reg    ap_loop_exit_ready_pp0_iter88_reg;
reg    ap_loop_exit_ready_pp0_iter89_reg;
reg    ap_loop_exit_ready_pp0_iter90_reg;
reg    ap_loop_exit_ready_pp0_iter91_reg;
reg    ap_loop_exit_ready_pp0_iter92_reg;
reg    ap_loop_exit_ready_pp0_iter93_reg;
reg    ap_loop_exit_ready_pp0_iter94_reg;
reg    ap_loop_exit_ready_pp0_iter95_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter75 = 1'b0;
#0 ap_enable_reg_pp0_iter76 = 1'b0;
#0 ap_enable_reg_pp0_iter77 = 1'b0;
#0 ap_enable_reg_pp0_iter78 = 1'b0;
#0 ap_enable_reg_pp0_iter79 = 1'b0;
#0 ap_enable_reg_pp0_iter80 = 1'b0;
#0 ap_enable_reg_pp0_iter81 = 1'b0;
#0 ap_enable_reg_pp0_iter82 = 1'b0;
#0 ap_enable_reg_pp0_iter83 = 1'b0;
#0 ap_enable_reg_pp0_iter84 = 1'b0;
#0 ap_enable_reg_pp0_iter85 = 1'b0;
#0 ap_enable_reg_pp0_iter86 = 1'b0;
#0 ap_enable_reg_pp0_iter87 = 1'b0;
#0 ap_enable_reg_pp0_iter88 = 1'b0;
#0 ap_enable_reg_pp0_iter89 = 1'b0;
#0 ap_enable_reg_pp0_iter90 = 1'b0;
#0 ap_enable_reg_pp0_iter91 = 1'b0;
#0 ap_enable_reg_pp0_iter92 = 1'b0;
#0 ap_enable_reg_pp0_iter93 = 1'b0;
#0 ap_enable_reg_pp0_iter94 = 1'b0;
#0 ap_enable_reg_pp0_iter95 = 1'b0;
#0 ap_enable_reg_pp0_iter96 = 1'b0;
#0 ap_done_reg = 1'b0;
end

sobel_sitofp_32s_32_5_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_5_no_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_300_p0),
    .ce(grp_fu_300_ce),
    .dout(grp_fu_300_p1)
);

sobel_fsqrt_32ns_32ns_32_12_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 12 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsqrt_32ns_32ns_32_12_no_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(x_assign_reg_1433),
    .ce(grp_fu_303_ce),
    .dout(grp_fu_303_p2)
);

sobel_sdiv_20s_11s_20_24_1 #(
    .ID( 1 ),
    .NUM_STAGE( 24 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
sdiv_20s_11s_20_24_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_751_p0),
    .din1(pix_h_sobel_2_fu_728_p2),
    .ce(grp_fu_751_ce),
    .dout(grp_fu_751_p2)
);

sobel_mul_mul_11s_11s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 22 ))
mul_mul_11s_11s_22_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1217_p0),
    .din1(grp_fu_1217_p1),
    .ce(grp_fu_1217_ce),
    .dout(grp_fu_1217_p2)
);

sobel_mac_muladd_11s_11s_22s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
mac_muladd_11s_11s_22s_22_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1223_p0),
    .din1(grp_fu_1223_p1),
    .din2(grp_fu_1217_p2),
    .ce(grp_fu_1223_ce),
    .dout(grp_fu_1223_p3)
);

sobel_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter95_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter26_stage0)) begin
            ap_enable_reg_pp0_iter27 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter75 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter75 <= ap_enable_reg_pp0_iter74;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter76 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter76 <= ap_enable_reg_pp0_iter75;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter77 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter77 <= ap_enable_reg_pp0_iter76;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter78 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter78 <= ap_enable_reg_pp0_iter77;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter79 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter79 <= ap_enable_reg_pp0_iter78;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter80 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter80 <= ap_enable_reg_pp0_iter79;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter81 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter81 <= ap_enable_reg_pp0_iter80;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter82 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter82 <= ap_enable_reg_pp0_iter81;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter83 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter83 <= ap_enable_reg_pp0_iter82;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter84 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter84 <= ap_enable_reg_pp0_iter83;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter85 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter85 <= ap_enable_reg_pp0_iter84;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter86 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter86 <= ap_enable_reg_pp0_iter85;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter87 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter87 <= ap_enable_reg_pp0_iter86;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter88 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter88 <= ap_enable_reg_pp0_iter87;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter89 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter89 <= ap_enable_reg_pp0_iter88;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter90 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter90 <= ap_enable_reg_pp0_iter89;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter91 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter91 <= ap_enable_reg_pp0_iter90;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter92 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter92 <= ap_enable_reg_pp0_iter91;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter93 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter93 <= ap_enable_reg_pp0_iter92;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter94 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter94 <= ap_enable_reg_pp0_iter93;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter95 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter95 <= ap_enable_reg_pp0_iter94;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter96 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter96 <= ap_enable_reg_pp0_iter95;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln45_reg_1311_pp0_iter25_reg == 1'd0) & (icmp_ln99_reg_1392_pp0_iter25_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter27_t_int_1_reg_289 <= sext_ln100_fu_1033_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter27_t_int_1_reg_289 <= ap_phi_reg_pp0_iter26_t_int_1_reg_289;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        if (((icmp_ln45_reg_1311_pp0_iter2_reg == 1'd0) & (icmp_ln99_fu_732_p2 == 1'd1))) begin
            ap_phi_reg_pp0_iter4_t_int_1_reg_289 <= 32'd2147483647;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter4_t_int_1_reg_289 <= ap_phi_reg_pp0_iter3_t_int_1_reg_289;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_33_fu_202 <= 8'd0;
        end else if (((icmp_ln45_reg_1311_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            empty_33_fu_202 <= empty_36_fu_226;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_34_fu_218 <= 8'd0;
        end else if (((icmp_ln45_reg_1311_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            empty_34_fu_218 <= tmp_4_reg_1346;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_35_fu_222 <= 8'd0;
        end else if (((icmp_ln45_reg_1311_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            empty_35_fu_222 <= tmp_7_reg_1353;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_36_fu_226 <= 8'd0;
        end else if (((icmp_ln45_reg_1311_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            empty_36_fu_226 <= trunc_ln59_1_fu_550_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            empty_fu_198 <= 8'd0;
        end else if (((icmp_ln45_reg_1311_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            empty_fu_198 <= empty_35_fu_222;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln45_fu_365_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_214 <= add_ln45_fu_371_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_214 <= 19'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            pix_v_sobel_1_fu_194 <= 8'd0;
        end else if (((icmp_ln45_reg_1311_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pix_v_sobel_1_fu_194 <= empty_34_fu_218;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            shiftreg_fu_190 <= 504'd0;
        end else if (((icmp_ln45_reg_1311_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            shiftreg_fu_190 <= {{ap_phi_mux_empty_42_phi_fu_283_p4[511:8]}};
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln45_fu_365_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            xi_fu_206 <= add_ln46_fu_447_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            xi_fu_206 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
            yi_fu_210 <= 10'd0;
        end else if (((ap_enable_reg_pp0_iter26 == 1'b1) & (icmp_ln45_reg_1311_pp0_iter25_reg == 1'd0))) begin
            yi_fu_210 <= select_ln45_4_fu_901_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_1311_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        add_ln90_reg_1423 <= grp_fu_1223_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter49_reg <= ap_loop_exit_ready_pp0_iter48_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter50_reg <= ap_loop_exit_ready_pp0_iter49_reg;
        ap_loop_exit_ready_pp0_iter51_reg <= ap_loop_exit_ready_pp0_iter50_reg;
        ap_loop_exit_ready_pp0_iter52_reg <= ap_loop_exit_ready_pp0_iter51_reg;
        ap_loop_exit_ready_pp0_iter53_reg <= ap_loop_exit_ready_pp0_iter52_reg;
        ap_loop_exit_ready_pp0_iter54_reg <= ap_loop_exit_ready_pp0_iter53_reg;
        ap_loop_exit_ready_pp0_iter55_reg <= ap_loop_exit_ready_pp0_iter54_reg;
        ap_loop_exit_ready_pp0_iter56_reg <= ap_loop_exit_ready_pp0_iter55_reg;
        ap_loop_exit_ready_pp0_iter57_reg <= ap_loop_exit_ready_pp0_iter56_reg;
        ap_loop_exit_ready_pp0_iter58_reg <= ap_loop_exit_ready_pp0_iter57_reg;
        ap_loop_exit_ready_pp0_iter59_reg <= ap_loop_exit_ready_pp0_iter58_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter60_reg <= ap_loop_exit_ready_pp0_iter59_reg;
        ap_loop_exit_ready_pp0_iter61_reg <= ap_loop_exit_ready_pp0_iter60_reg;
        ap_loop_exit_ready_pp0_iter62_reg <= ap_loop_exit_ready_pp0_iter61_reg;
        ap_loop_exit_ready_pp0_iter63_reg <= ap_loop_exit_ready_pp0_iter62_reg;
        ap_loop_exit_ready_pp0_iter64_reg <= ap_loop_exit_ready_pp0_iter63_reg;
        ap_loop_exit_ready_pp0_iter65_reg <= ap_loop_exit_ready_pp0_iter64_reg;
        ap_loop_exit_ready_pp0_iter66_reg <= ap_loop_exit_ready_pp0_iter65_reg;
        ap_loop_exit_ready_pp0_iter67_reg <= ap_loop_exit_ready_pp0_iter66_reg;
        ap_loop_exit_ready_pp0_iter68_reg <= ap_loop_exit_ready_pp0_iter67_reg;
        ap_loop_exit_ready_pp0_iter69_reg <= ap_loop_exit_ready_pp0_iter68_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter70_reg <= ap_loop_exit_ready_pp0_iter69_reg;
        ap_loop_exit_ready_pp0_iter71_reg <= ap_loop_exit_ready_pp0_iter70_reg;
        ap_loop_exit_ready_pp0_iter72_reg <= ap_loop_exit_ready_pp0_iter71_reg;
        ap_loop_exit_ready_pp0_iter73_reg <= ap_loop_exit_ready_pp0_iter72_reg;
        ap_loop_exit_ready_pp0_iter74_reg <= ap_loop_exit_ready_pp0_iter73_reg;
        ap_loop_exit_ready_pp0_iter75_reg <= ap_loop_exit_ready_pp0_iter74_reg;
        ap_loop_exit_ready_pp0_iter76_reg <= ap_loop_exit_ready_pp0_iter75_reg;
        ap_loop_exit_ready_pp0_iter77_reg <= ap_loop_exit_ready_pp0_iter76_reg;
        ap_loop_exit_ready_pp0_iter78_reg <= ap_loop_exit_ready_pp0_iter77_reg;
        ap_loop_exit_ready_pp0_iter79_reg <= ap_loop_exit_ready_pp0_iter78_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter80_reg <= ap_loop_exit_ready_pp0_iter79_reg;
        ap_loop_exit_ready_pp0_iter81_reg <= ap_loop_exit_ready_pp0_iter80_reg;
        ap_loop_exit_ready_pp0_iter82_reg <= ap_loop_exit_ready_pp0_iter81_reg;
        ap_loop_exit_ready_pp0_iter83_reg <= ap_loop_exit_ready_pp0_iter82_reg;
        ap_loop_exit_ready_pp0_iter84_reg <= ap_loop_exit_ready_pp0_iter83_reg;
        ap_loop_exit_ready_pp0_iter85_reg <= ap_loop_exit_ready_pp0_iter84_reg;
        ap_loop_exit_ready_pp0_iter86_reg <= ap_loop_exit_ready_pp0_iter85_reg;
        ap_loop_exit_ready_pp0_iter87_reg <= ap_loop_exit_ready_pp0_iter86_reg;
        ap_loop_exit_ready_pp0_iter88_reg <= ap_loop_exit_ready_pp0_iter87_reg;
        ap_loop_exit_ready_pp0_iter89_reg <= ap_loop_exit_ready_pp0_iter88_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter90_reg <= ap_loop_exit_ready_pp0_iter89_reg;
        ap_loop_exit_ready_pp0_iter91_reg <= ap_loop_exit_ready_pp0_iter90_reg;
        ap_loop_exit_ready_pp0_iter92_reg <= ap_loop_exit_ready_pp0_iter91_reg;
        ap_loop_exit_ready_pp0_iter93_reg <= ap_loop_exit_ready_pp0_iter92_reg;
        ap_loop_exit_ready_pp0_iter94_reg <= ap_loop_exit_ready_pp0_iter93_reg;
        ap_loop_exit_ready_pp0_iter95_reg <= ap_loop_exit_ready_pp0_iter94_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        empty_39_reg_1338_pp0_iter10_reg <= empty_39_reg_1338_pp0_iter9_reg;
        empty_39_reg_1338_pp0_iter11_reg <= empty_39_reg_1338_pp0_iter10_reg;
        empty_39_reg_1338_pp0_iter12_reg <= empty_39_reg_1338_pp0_iter11_reg;
        empty_39_reg_1338_pp0_iter13_reg <= empty_39_reg_1338_pp0_iter12_reg;
        empty_39_reg_1338_pp0_iter14_reg <= empty_39_reg_1338_pp0_iter13_reg;
        empty_39_reg_1338_pp0_iter15_reg <= empty_39_reg_1338_pp0_iter14_reg;
        empty_39_reg_1338_pp0_iter16_reg <= empty_39_reg_1338_pp0_iter15_reg;
        empty_39_reg_1338_pp0_iter17_reg <= empty_39_reg_1338_pp0_iter16_reg;
        empty_39_reg_1338_pp0_iter18_reg <= empty_39_reg_1338_pp0_iter17_reg;
        empty_39_reg_1338_pp0_iter19_reg <= empty_39_reg_1338_pp0_iter18_reg;
        empty_39_reg_1338_pp0_iter20_reg <= empty_39_reg_1338_pp0_iter19_reg;
        empty_39_reg_1338_pp0_iter21_reg <= empty_39_reg_1338_pp0_iter20_reg;
        empty_39_reg_1338_pp0_iter22_reg <= empty_39_reg_1338_pp0_iter21_reg;
        empty_39_reg_1338_pp0_iter23_reg <= empty_39_reg_1338_pp0_iter22_reg;
        empty_39_reg_1338_pp0_iter24_reg <= empty_39_reg_1338_pp0_iter23_reg;
        empty_39_reg_1338_pp0_iter25_reg <= empty_39_reg_1338_pp0_iter24_reg;
        empty_39_reg_1338_pp0_iter26_reg <= empty_39_reg_1338_pp0_iter25_reg;
        empty_39_reg_1338_pp0_iter2_reg <= empty_39_reg_1338_pp0_iter1_reg;
        empty_39_reg_1338_pp0_iter3_reg <= empty_39_reg_1338_pp0_iter2_reg;
        empty_39_reg_1338_pp0_iter4_reg <= empty_39_reg_1338_pp0_iter3_reg;
        empty_39_reg_1338_pp0_iter5_reg <= empty_39_reg_1338_pp0_iter4_reg;
        empty_39_reg_1338_pp0_iter6_reg <= empty_39_reg_1338_pp0_iter5_reg;
        empty_39_reg_1338_pp0_iter7_reg <= empty_39_reg_1338_pp0_iter6_reg;
        empty_39_reg_1338_pp0_iter8_reg <= empty_39_reg_1338_pp0_iter7_reg;
        empty_39_reg_1338_pp0_iter9_reg <= empty_39_reg_1338_pp0_iter8_reg;
        empty_41_reg_1342_pp0_iter10_reg <= empty_41_reg_1342_pp0_iter9_reg;
        empty_41_reg_1342_pp0_iter11_reg <= empty_41_reg_1342_pp0_iter10_reg;
        empty_41_reg_1342_pp0_iter12_reg <= empty_41_reg_1342_pp0_iter11_reg;
        empty_41_reg_1342_pp0_iter13_reg <= empty_41_reg_1342_pp0_iter12_reg;
        empty_41_reg_1342_pp0_iter14_reg <= empty_41_reg_1342_pp0_iter13_reg;
        empty_41_reg_1342_pp0_iter15_reg <= empty_41_reg_1342_pp0_iter14_reg;
        empty_41_reg_1342_pp0_iter16_reg <= empty_41_reg_1342_pp0_iter15_reg;
        empty_41_reg_1342_pp0_iter17_reg <= empty_41_reg_1342_pp0_iter16_reg;
        empty_41_reg_1342_pp0_iter18_reg <= empty_41_reg_1342_pp0_iter17_reg;
        empty_41_reg_1342_pp0_iter19_reg <= empty_41_reg_1342_pp0_iter18_reg;
        empty_41_reg_1342_pp0_iter20_reg <= empty_41_reg_1342_pp0_iter19_reg;
        empty_41_reg_1342_pp0_iter21_reg <= empty_41_reg_1342_pp0_iter20_reg;
        empty_41_reg_1342_pp0_iter22_reg <= empty_41_reg_1342_pp0_iter21_reg;
        empty_41_reg_1342_pp0_iter23_reg <= empty_41_reg_1342_pp0_iter22_reg;
        empty_41_reg_1342_pp0_iter24_reg <= empty_41_reg_1342_pp0_iter23_reg;
        empty_41_reg_1342_pp0_iter25_reg <= empty_41_reg_1342_pp0_iter24_reg;
        empty_41_reg_1342_pp0_iter26_reg <= empty_41_reg_1342_pp0_iter25_reg;
        empty_41_reg_1342_pp0_iter27_reg <= empty_41_reg_1342_pp0_iter26_reg;
        empty_41_reg_1342_pp0_iter28_reg <= empty_41_reg_1342_pp0_iter27_reg;
        empty_41_reg_1342_pp0_iter29_reg <= empty_41_reg_1342_pp0_iter28_reg;
        empty_41_reg_1342_pp0_iter2_reg <= empty_41_reg_1342_pp0_iter1_reg;
        empty_41_reg_1342_pp0_iter30_reg <= empty_41_reg_1342_pp0_iter29_reg;
        empty_41_reg_1342_pp0_iter31_reg <= empty_41_reg_1342_pp0_iter30_reg;
        empty_41_reg_1342_pp0_iter32_reg <= empty_41_reg_1342_pp0_iter31_reg;
        empty_41_reg_1342_pp0_iter33_reg <= empty_41_reg_1342_pp0_iter32_reg;
        empty_41_reg_1342_pp0_iter34_reg <= empty_41_reg_1342_pp0_iter33_reg;
        empty_41_reg_1342_pp0_iter35_reg <= empty_41_reg_1342_pp0_iter34_reg;
        empty_41_reg_1342_pp0_iter36_reg <= empty_41_reg_1342_pp0_iter35_reg;
        empty_41_reg_1342_pp0_iter37_reg <= empty_41_reg_1342_pp0_iter36_reg;
        empty_41_reg_1342_pp0_iter38_reg <= empty_41_reg_1342_pp0_iter37_reg;
        empty_41_reg_1342_pp0_iter39_reg <= empty_41_reg_1342_pp0_iter38_reg;
        empty_41_reg_1342_pp0_iter3_reg <= empty_41_reg_1342_pp0_iter2_reg;
        empty_41_reg_1342_pp0_iter40_reg <= empty_41_reg_1342_pp0_iter39_reg;
        empty_41_reg_1342_pp0_iter41_reg <= empty_41_reg_1342_pp0_iter40_reg;
        empty_41_reg_1342_pp0_iter42_reg <= empty_41_reg_1342_pp0_iter41_reg;
        empty_41_reg_1342_pp0_iter43_reg <= empty_41_reg_1342_pp0_iter42_reg;
        empty_41_reg_1342_pp0_iter44_reg <= empty_41_reg_1342_pp0_iter43_reg;
        empty_41_reg_1342_pp0_iter45_reg <= empty_41_reg_1342_pp0_iter44_reg;
        empty_41_reg_1342_pp0_iter46_reg <= empty_41_reg_1342_pp0_iter45_reg;
        empty_41_reg_1342_pp0_iter47_reg <= empty_41_reg_1342_pp0_iter46_reg;
        empty_41_reg_1342_pp0_iter48_reg <= empty_41_reg_1342_pp0_iter47_reg;
        empty_41_reg_1342_pp0_iter49_reg <= empty_41_reg_1342_pp0_iter48_reg;
        empty_41_reg_1342_pp0_iter4_reg <= empty_41_reg_1342_pp0_iter3_reg;
        empty_41_reg_1342_pp0_iter50_reg <= empty_41_reg_1342_pp0_iter49_reg;
        empty_41_reg_1342_pp0_iter51_reg <= empty_41_reg_1342_pp0_iter50_reg;
        empty_41_reg_1342_pp0_iter52_reg <= empty_41_reg_1342_pp0_iter51_reg;
        empty_41_reg_1342_pp0_iter53_reg <= empty_41_reg_1342_pp0_iter52_reg;
        empty_41_reg_1342_pp0_iter54_reg <= empty_41_reg_1342_pp0_iter53_reg;
        empty_41_reg_1342_pp0_iter55_reg <= empty_41_reg_1342_pp0_iter54_reg;
        empty_41_reg_1342_pp0_iter56_reg <= empty_41_reg_1342_pp0_iter55_reg;
        empty_41_reg_1342_pp0_iter57_reg <= empty_41_reg_1342_pp0_iter56_reg;
        empty_41_reg_1342_pp0_iter58_reg <= empty_41_reg_1342_pp0_iter57_reg;
        empty_41_reg_1342_pp0_iter59_reg <= empty_41_reg_1342_pp0_iter58_reg;
        empty_41_reg_1342_pp0_iter5_reg <= empty_41_reg_1342_pp0_iter4_reg;
        empty_41_reg_1342_pp0_iter60_reg <= empty_41_reg_1342_pp0_iter59_reg;
        empty_41_reg_1342_pp0_iter61_reg <= empty_41_reg_1342_pp0_iter60_reg;
        empty_41_reg_1342_pp0_iter62_reg <= empty_41_reg_1342_pp0_iter61_reg;
        empty_41_reg_1342_pp0_iter63_reg <= empty_41_reg_1342_pp0_iter62_reg;
        empty_41_reg_1342_pp0_iter64_reg <= empty_41_reg_1342_pp0_iter63_reg;
        empty_41_reg_1342_pp0_iter65_reg <= empty_41_reg_1342_pp0_iter64_reg;
        empty_41_reg_1342_pp0_iter66_reg <= empty_41_reg_1342_pp0_iter65_reg;
        empty_41_reg_1342_pp0_iter67_reg <= empty_41_reg_1342_pp0_iter66_reg;
        empty_41_reg_1342_pp0_iter68_reg <= empty_41_reg_1342_pp0_iter67_reg;
        empty_41_reg_1342_pp0_iter69_reg <= empty_41_reg_1342_pp0_iter68_reg;
        empty_41_reg_1342_pp0_iter6_reg <= empty_41_reg_1342_pp0_iter5_reg;
        empty_41_reg_1342_pp0_iter70_reg <= empty_41_reg_1342_pp0_iter69_reg;
        empty_41_reg_1342_pp0_iter71_reg <= empty_41_reg_1342_pp0_iter70_reg;
        empty_41_reg_1342_pp0_iter72_reg <= empty_41_reg_1342_pp0_iter71_reg;
        empty_41_reg_1342_pp0_iter73_reg <= empty_41_reg_1342_pp0_iter72_reg;
        empty_41_reg_1342_pp0_iter74_reg <= empty_41_reg_1342_pp0_iter73_reg;
        empty_41_reg_1342_pp0_iter75_reg <= empty_41_reg_1342_pp0_iter74_reg;
        empty_41_reg_1342_pp0_iter76_reg <= empty_41_reg_1342_pp0_iter75_reg;
        empty_41_reg_1342_pp0_iter77_reg <= empty_41_reg_1342_pp0_iter76_reg;
        empty_41_reg_1342_pp0_iter78_reg <= empty_41_reg_1342_pp0_iter77_reg;
        empty_41_reg_1342_pp0_iter79_reg <= empty_41_reg_1342_pp0_iter78_reg;
        empty_41_reg_1342_pp0_iter7_reg <= empty_41_reg_1342_pp0_iter6_reg;
        empty_41_reg_1342_pp0_iter80_reg <= empty_41_reg_1342_pp0_iter79_reg;
        empty_41_reg_1342_pp0_iter81_reg <= empty_41_reg_1342_pp0_iter80_reg;
        empty_41_reg_1342_pp0_iter82_reg <= empty_41_reg_1342_pp0_iter81_reg;
        empty_41_reg_1342_pp0_iter83_reg <= empty_41_reg_1342_pp0_iter82_reg;
        empty_41_reg_1342_pp0_iter84_reg <= empty_41_reg_1342_pp0_iter83_reg;
        empty_41_reg_1342_pp0_iter85_reg <= empty_41_reg_1342_pp0_iter84_reg;
        empty_41_reg_1342_pp0_iter86_reg <= empty_41_reg_1342_pp0_iter85_reg;
        empty_41_reg_1342_pp0_iter87_reg <= empty_41_reg_1342_pp0_iter86_reg;
        empty_41_reg_1342_pp0_iter88_reg <= empty_41_reg_1342_pp0_iter87_reg;
        empty_41_reg_1342_pp0_iter89_reg <= empty_41_reg_1342_pp0_iter88_reg;
        empty_41_reg_1342_pp0_iter8_reg <= empty_41_reg_1342_pp0_iter7_reg;
        empty_41_reg_1342_pp0_iter90_reg <= empty_41_reg_1342_pp0_iter89_reg;
        empty_41_reg_1342_pp0_iter91_reg <= empty_41_reg_1342_pp0_iter90_reg;
        empty_41_reg_1342_pp0_iter92_reg <= empty_41_reg_1342_pp0_iter91_reg;
        empty_41_reg_1342_pp0_iter93_reg <= empty_41_reg_1342_pp0_iter92_reg;
        empty_41_reg_1342_pp0_iter94_reg <= empty_41_reg_1342_pp0_iter93_reg;
        empty_41_reg_1342_pp0_iter95_reg <= empty_41_reg_1342_pp0_iter94_reg;
        empty_41_reg_1342_pp0_iter9_reg <= empty_41_reg_1342_pp0_iter8_reg;
        icmp_ln124_reg_1333_pp0_iter10_reg <= icmp_ln124_reg_1333_pp0_iter9_reg;
        icmp_ln124_reg_1333_pp0_iter11_reg <= icmp_ln124_reg_1333_pp0_iter10_reg;
        icmp_ln124_reg_1333_pp0_iter12_reg <= icmp_ln124_reg_1333_pp0_iter11_reg;
        icmp_ln124_reg_1333_pp0_iter13_reg <= icmp_ln124_reg_1333_pp0_iter12_reg;
        icmp_ln124_reg_1333_pp0_iter14_reg <= icmp_ln124_reg_1333_pp0_iter13_reg;
        icmp_ln124_reg_1333_pp0_iter15_reg <= icmp_ln124_reg_1333_pp0_iter14_reg;
        icmp_ln124_reg_1333_pp0_iter16_reg <= icmp_ln124_reg_1333_pp0_iter15_reg;
        icmp_ln124_reg_1333_pp0_iter17_reg <= icmp_ln124_reg_1333_pp0_iter16_reg;
        icmp_ln124_reg_1333_pp0_iter18_reg <= icmp_ln124_reg_1333_pp0_iter17_reg;
        icmp_ln124_reg_1333_pp0_iter19_reg <= icmp_ln124_reg_1333_pp0_iter18_reg;
        icmp_ln124_reg_1333_pp0_iter20_reg <= icmp_ln124_reg_1333_pp0_iter19_reg;
        icmp_ln124_reg_1333_pp0_iter21_reg <= icmp_ln124_reg_1333_pp0_iter20_reg;
        icmp_ln124_reg_1333_pp0_iter22_reg <= icmp_ln124_reg_1333_pp0_iter21_reg;
        icmp_ln124_reg_1333_pp0_iter23_reg <= icmp_ln124_reg_1333_pp0_iter22_reg;
        icmp_ln124_reg_1333_pp0_iter24_reg <= icmp_ln124_reg_1333_pp0_iter23_reg;
        icmp_ln124_reg_1333_pp0_iter25_reg <= icmp_ln124_reg_1333_pp0_iter24_reg;
        icmp_ln124_reg_1333_pp0_iter26_reg <= icmp_ln124_reg_1333_pp0_iter25_reg;
        icmp_ln124_reg_1333_pp0_iter2_reg <= icmp_ln124_reg_1333_pp0_iter1_reg;
        icmp_ln124_reg_1333_pp0_iter3_reg <= icmp_ln124_reg_1333_pp0_iter2_reg;
        icmp_ln124_reg_1333_pp0_iter4_reg <= icmp_ln124_reg_1333_pp0_iter3_reg;
        icmp_ln124_reg_1333_pp0_iter5_reg <= icmp_ln124_reg_1333_pp0_iter4_reg;
        icmp_ln124_reg_1333_pp0_iter6_reg <= icmp_ln124_reg_1333_pp0_iter5_reg;
        icmp_ln124_reg_1333_pp0_iter7_reg <= icmp_ln124_reg_1333_pp0_iter6_reg;
        icmp_ln124_reg_1333_pp0_iter8_reg <= icmp_ln124_reg_1333_pp0_iter7_reg;
        icmp_ln124_reg_1333_pp0_iter9_reg <= icmp_ln124_reg_1333_pp0_iter8_reg;
        icmp_ln45_reg_1311_pp0_iter10_reg <= icmp_ln45_reg_1311_pp0_iter9_reg;
        icmp_ln45_reg_1311_pp0_iter11_reg <= icmp_ln45_reg_1311_pp0_iter10_reg;
        icmp_ln45_reg_1311_pp0_iter12_reg <= icmp_ln45_reg_1311_pp0_iter11_reg;
        icmp_ln45_reg_1311_pp0_iter13_reg <= icmp_ln45_reg_1311_pp0_iter12_reg;
        icmp_ln45_reg_1311_pp0_iter14_reg <= icmp_ln45_reg_1311_pp0_iter13_reg;
        icmp_ln45_reg_1311_pp0_iter15_reg <= icmp_ln45_reg_1311_pp0_iter14_reg;
        icmp_ln45_reg_1311_pp0_iter16_reg <= icmp_ln45_reg_1311_pp0_iter15_reg;
        icmp_ln45_reg_1311_pp0_iter17_reg <= icmp_ln45_reg_1311_pp0_iter16_reg;
        icmp_ln45_reg_1311_pp0_iter18_reg <= icmp_ln45_reg_1311_pp0_iter17_reg;
        icmp_ln45_reg_1311_pp0_iter19_reg <= icmp_ln45_reg_1311_pp0_iter18_reg;
        icmp_ln45_reg_1311_pp0_iter20_reg <= icmp_ln45_reg_1311_pp0_iter19_reg;
        icmp_ln45_reg_1311_pp0_iter21_reg <= icmp_ln45_reg_1311_pp0_iter20_reg;
        icmp_ln45_reg_1311_pp0_iter22_reg <= icmp_ln45_reg_1311_pp0_iter21_reg;
        icmp_ln45_reg_1311_pp0_iter23_reg <= icmp_ln45_reg_1311_pp0_iter22_reg;
        icmp_ln45_reg_1311_pp0_iter24_reg <= icmp_ln45_reg_1311_pp0_iter23_reg;
        icmp_ln45_reg_1311_pp0_iter25_reg <= icmp_ln45_reg_1311_pp0_iter24_reg;
        icmp_ln45_reg_1311_pp0_iter26_reg <= icmp_ln45_reg_1311_pp0_iter25_reg;
        icmp_ln45_reg_1311_pp0_iter2_reg <= icmp_ln45_reg_1311_pp0_iter1_reg;
        icmp_ln45_reg_1311_pp0_iter3_reg <= icmp_ln45_reg_1311_pp0_iter2_reg;
        icmp_ln45_reg_1311_pp0_iter4_reg <= icmp_ln45_reg_1311_pp0_iter3_reg;
        icmp_ln45_reg_1311_pp0_iter5_reg <= icmp_ln45_reg_1311_pp0_iter4_reg;
        icmp_ln45_reg_1311_pp0_iter6_reg <= icmp_ln45_reg_1311_pp0_iter5_reg;
        icmp_ln45_reg_1311_pp0_iter7_reg <= icmp_ln45_reg_1311_pp0_iter6_reg;
        icmp_ln45_reg_1311_pp0_iter8_reg <= icmp_ln45_reg_1311_pp0_iter7_reg;
        icmp_ln45_reg_1311_pp0_iter9_reg <= icmp_ln45_reg_1311_pp0_iter8_reg;
        icmp_ln46_reg_1315_pp0_iter10_reg <= icmp_ln46_reg_1315_pp0_iter9_reg;
        icmp_ln46_reg_1315_pp0_iter11_reg <= icmp_ln46_reg_1315_pp0_iter10_reg;
        icmp_ln46_reg_1315_pp0_iter12_reg <= icmp_ln46_reg_1315_pp0_iter11_reg;
        icmp_ln46_reg_1315_pp0_iter13_reg <= icmp_ln46_reg_1315_pp0_iter12_reg;
        icmp_ln46_reg_1315_pp0_iter14_reg <= icmp_ln46_reg_1315_pp0_iter13_reg;
        icmp_ln46_reg_1315_pp0_iter15_reg <= icmp_ln46_reg_1315_pp0_iter14_reg;
        icmp_ln46_reg_1315_pp0_iter16_reg <= icmp_ln46_reg_1315_pp0_iter15_reg;
        icmp_ln46_reg_1315_pp0_iter17_reg <= icmp_ln46_reg_1315_pp0_iter16_reg;
        icmp_ln46_reg_1315_pp0_iter18_reg <= icmp_ln46_reg_1315_pp0_iter17_reg;
        icmp_ln46_reg_1315_pp0_iter19_reg <= icmp_ln46_reg_1315_pp0_iter18_reg;
        icmp_ln46_reg_1315_pp0_iter20_reg <= icmp_ln46_reg_1315_pp0_iter19_reg;
        icmp_ln46_reg_1315_pp0_iter21_reg <= icmp_ln46_reg_1315_pp0_iter20_reg;
        icmp_ln46_reg_1315_pp0_iter22_reg <= icmp_ln46_reg_1315_pp0_iter21_reg;
        icmp_ln46_reg_1315_pp0_iter23_reg <= icmp_ln46_reg_1315_pp0_iter22_reg;
        icmp_ln46_reg_1315_pp0_iter24_reg <= icmp_ln46_reg_1315_pp0_iter23_reg;
        icmp_ln46_reg_1315_pp0_iter25_reg <= icmp_ln46_reg_1315_pp0_iter24_reg;
        icmp_ln46_reg_1315_pp0_iter2_reg <= icmp_ln46_reg_1315_pp0_iter1_reg;
        icmp_ln46_reg_1315_pp0_iter3_reg <= icmp_ln46_reg_1315_pp0_iter2_reg;
        icmp_ln46_reg_1315_pp0_iter4_reg <= icmp_ln46_reg_1315_pp0_iter3_reg;
        icmp_ln46_reg_1315_pp0_iter5_reg <= icmp_ln46_reg_1315_pp0_iter4_reg;
        icmp_ln46_reg_1315_pp0_iter6_reg <= icmp_ln46_reg_1315_pp0_iter5_reg;
        icmp_ln46_reg_1315_pp0_iter7_reg <= icmp_ln46_reg_1315_pp0_iter6_reg;
        icmp_ln46_reg_1315_pp0_iter8_reg <= icmp_ln46_reg_1315_pp0_iter7_reg;
        icmp_ln46_reg_1315_pp0_iter9_reg <= icmp_ln46_reg_1315_pp0_iter8_reg;
        icmp_ln99_reg_1392_pp0_iter10_reg <= icmp_ln99_reg_1392_pp0_iter9_reg;
        icmp_ln99_reg_1392_pp0_iter11_reg <= icmp_ln99_reg_1392_pp0_iter10_reg;
        icmp_ln99_reg_1392_pp0_iter12_reg <= icmp_ln99_reg_1392_pp0_iter11_reg;
        icmp_ln99_reg_1392_pp0_iter13_reg <= icmp_ln99_reg_1392_pp0_iter12_reg;
        icmp_ln99_reg_1392_pp0_iter14_reg <= icmp_ln99_reg_1392_pp0_iter13_reg;
        icmp_ln99_reg_1392_pp0_iter15_reg <= icmp_ln99_reg_1392_pp0_iter14_reg;
        icmp_ln99_reg_1392_pp0_iter16_reg <= icmp_ln99_reg_1392_pp0_iter15_reg;
        icmp_ln99_reg_1392_pp0_iter17_reg <= icmp_ln99_reg_1392_pp0_iter16_reg;
        icmp_ln99_reg_1392_pp0_iter18_reg <= icmp_ln99_reg_1392_pp0_iter17_reg;
        icmp_ln99_reg_1392_pp0_iter19_reg <= icmp_ln99_reg_1392_pp0_iter18_reg;
        icmp_ln99_reg_1392_pp0_iter20_reg <= icmp_ln99_reg_1392_pp0_iter19_reg;
        icmp_ln99_reg_1392_pp0_iter21_reg <= icmp_ln99_reg_1392_pp0_iter20_reg;
        icmp_ln99_reg_1392_pp0_iter22_reg <= icmp_ln99_reg_1392_pp0_iter21_reg;
        icmp_ln99_reg_1392_pp0_iter23_reg <= icmp_ln99_reg_1392_pp0_iter22_reg;
        icmp_ln99_reg_1392_pp0_iter24_reg <= icmp_ln99_reg_1392_pp0_iter23_reg;
        icmp_ln99_reg_1392_pp0_iter25_reg <= icmp_ln99_reg_1392_pp0_iter24_reg;
        icmp_ln99_reg_1392_pp0_iter4_reg <= icmp_ln99_reg_1392;
        icmp_ln99_reg_1392_pp0_iter5_reg <= icmp_ln99_reg_1392_pp0_iter4_reg;
        icmp_ln99_reg_1392_pp0_iter6_reg <= icmp_ln99_reg_1392_pp0_iter5_reg;
        icmp_ln99_reg_1392_pp0_iter7_reg <= icmp_ln99_reg_1392_pp0_iter6_reg;
        icmp_ln99_reg_1392_pp0_iter8_reg <= icmp_ln99_reg_1392_pp0_iter7_reg;
        icmp_ln99_reg_1392_pp0_iter9_reg <= icmp_ln99_reg_1392_pp0_iter8_reg;
        pix_h_sobel_2_reg_1387_pp0_iter4_reg <= pix_h_sobel_2_reg_1387;
        pix_v_sobel_reg_1381_pp0_iter3_reg <= pix_v_sobel_reg_1381;
        select_ln124_reg_1470 <= select_ln124_fu_1209_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        empty_39_reg_1338_pp0_iter1_reg <= empty_39_reg_1338;
        empty_41_reg_1342_pp0_iter1_reg <= empty_41_reg_1342;
        icmp_ln124_reg_1333_pp0_iter1_reg <= icmp_ln124_reg_1333;
        icmp_ln45_reg_1311 <= icmp_ln45_fu_365_p2;
        icmp_ln45_reg_1311_pp0_iter1_reg <= icmp_ln45_reg_1311;
        icmp_ln46_reg_1315_pp0_iter1_reg <= icmp_ln46_reg_1315;
        icmp_ln59_reg_1329_pp0_iter1_reg <= icmp_ln59_reg_1329;
        line_buf_addr_reg_1323_pp0_iter1_reg <= line_buf_addr_reg_1323;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1))) begin
        ap_phi_reg_pp0_iter10_t_int_1_reg_289 <= ap_phi_reg_pp0_iter9_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        ap_phi_reg_pp0_iter11_t_int_1_reg_289 <= ap_phi_reg_pp0_iter10_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter11 == 1'b1))) begin
        ap_phi_reg_pp0_iter12_t_int_1_reg_289 <= ap_phi_reg_pp0_iter11_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter12 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter13_t_int_1_reg_289 <= ap_phi_reg_pp0_iter12_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter13 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter14_t_int_1_reg_289 <= ap_phi_reg_pp0_iter13_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter14 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter15_t_int_1_reg_289 <= ap_phi_reg_pp0_iter14_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter15 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter16_t_int_1_reg_289 <= ap_phi_reg_pp0_iter15_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter16 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter17_t_int_1_reg_289 <= ap_phi_reg_pp0_iter16_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter17 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter18_t_int_1_reg_289 <= ap_phi_reg_pp0_iter17_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter18 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter19_t_int_1_reg_289 <= ap_phi_reg_pp0_iter18_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_t_int_1_reg_289 <= ap_phi_reg_pp0_iter0_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter19 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter20_t_int_1_reg_289 <= ap_phi_reg_pp0_iter19_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter20 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter21_t_int_1_reg_289 <= ap_phi_reg_pp0_iter20_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter22_t_int_1_reg_289 <= ap_phi_reg_pp0_iter21_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter23_t_int_1_reg_289 <= ap_phi_reg_pp0_iter22_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter23 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter24_t_int_1_reg_289 <= ap_phi_reg_pp0_iter23_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter24 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter25_t_int_1_reg_289 <= ap_phi_reg_pp0_iter24_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter25 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_phi_reg_pp0_iter26_t_int_1_reg_289 <= ap_phi_reg_pp0_iter25_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_t_int_1_reg_289 <= ap_phi_reg_pp0_iter1_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_t_int_1_reg_289 <= ap_phi_reg_pp0_iter2_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        ap_phi_reg_pp0_iter5_t_int_1_reg_289 <= ap_phi_reg_pp0_iter4_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        ap_phi_reg_pp0_iter6_t_int_1_reg_289 <= ap_phi_reg_pp0_iter5_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1))) begin
        ap_phi_reg_pp0_iter7_t_int_1_reg_289 <= ap_phi_reg_pp0_iter6_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
        ap_phi_reg_pp0_iter8_t_int_1_reg_289 <= ap_phi_reg_pp0_iter7_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        ap_phi_reg_pp0_iter9_t_int_1_reg_289 <= ap_phi_reg_pp0_iter8_t_int_1_reg_289;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_1311_pp0_iter24_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        dc_reg_1438 <= grp_fu_303_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_fu_365_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_39_reg_1338 <= empty_39_fu_441_p2;
        empty_41_reg_1342 <= empty_41_fu_465_p2;
        icmp_ln124_reg_1333 <= icmp_ln124_fu_423_p2;
        icmp_ln46_reg_1315 <= icmp_ln46_fu_380_p2;
        icmp_ln59_reg_1329 <= icmp_ln59_fu_407_p2;
        line_buf_addr_reg_1323 <= zext_ln46_1_fu_394_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem0_addr_read_reg_1359 <= m_axi_gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_1311_pp0_iter25_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem1_addr_reg_1464 <= sext_ln45_1_fu_884_p1;
        p_Result_s_reg_1448 <= data_V_fu_908_p1[32'd31];
        select_ln45_3_reg_1443 <= select_ln45_3_fu_894_p3;
        val_reg_1453 <= val_fu_1025_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_1311_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln99_reg_1392 <= icmp_ln99_fu_732_p2;
        pix_h_sobel_2_reg_1387 <= pix_h_sobel_2_fu_728_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_1311_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pix_h_sobel_reg_1369 <= pix_h_sobel_fu_631_p2;
        pix_v_sobel_reg_1381 <= pix_v_sobel_fu_689_p2;
        zext_ln79_2_reg_1375[7 : 0] <= zext_ln79_2_fu_637_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln45_reg_1311 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_3_reg_1364 <= {{line_buf_q1[23:8]}};
        tmp_4_reg_1346 <= {{line_buf_q1[15:8]}};
        tmp_7_reg_1353 <= {{line_buf_q1[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_reg_1311_pp0_iter12_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        x_assign_reg_1433 <= grp_fu_300_p1;
    end
end

always @ (*) begin
    if (((icmp_ln45_fu_365_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b1) & (icmp_ln45_reg_1311_pp0_iter25_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter26_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter26_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter95_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter96 == 1'b0) & (ap_enable_reg_pp0_iter95 == 1'b0) & (ap_enable_reg_pp0_iter94 == 1'b0) & (ap_enable_reg_pp0_iter93 == 1'b0) & (ap_enable_reg_pp0_iter92 == 1'b0) & (ap_enable_reg_pp0_iter91 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter90 == 1'b0) & (ap_enable_reg_pp0_iter89 == 1'b0) & (ap_enable_reg_pp0_iter88 == 1'b0) & (ap_enable_reg_pp0_iter87 == 1'b0) & (ap_enable_reg_pp0_iter86 == 1'b0) & (ap_enable_reg_pp0_iter85 == 1'b0) & (ap_enable_reg_pp0_iter84 == 1'b0) & (ap_enable_reg_pp0_iter83 == 1'b0) & (ap_enable_reg_pp0_iter82 == 1'b0) & (ap_enable_reg_pp0_iter81 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter80 == 1'b0) & (ap_enable_reg_pp0_iter79 == 1'b0) & (ap_enable_reg_pp0_iter78 == 1'b0) & (ap_enable_reg_pp0_iter77 == 1'b0) & (ap_enable_reg_pp0_iter76 == 1'b0) & (ap_enable_reg_pp0_iter75 == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln45_reg_1311_pp0_iter1_reg == 1'd0)) begin
        if ((icmp_ln59_reg_1329_pp0_iter1_reg == 1'd0)) begin
            ap_phi_mux_empty_42_phi_fu_283_p4 = zext_ln46_fu_536_p1;
        end else if ((icmp_ln59_reg_1329_pp0_iter1_reg == 1'd1)) begin
            ap_phi_mux_empty_42_phi_fu_283_p4 = gmem0_addr_read_reg_1359;
        end else begin
            ap_phi_mux_empty_42_phi_fu_283_p4 = ap_phi_reg_pp0_iter2_empty_42_reg_280;
        end
    end else begin
        ap_phi_mux_empty_42_phi_fu_283_p4 = ap_phi_reg_pp0_iter2_empty_42_reg_280;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 19'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_214;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_xi_load = 10'd0;
    end else begin
        ap_sig_allocacmp_xi_load = xi_fu_206;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op158_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (empty_39_reg_1338_pp0_iter26_reg == 1'd1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        gmem1_blk_n_AW = m_axi_gmem1_AWREADY;
    end else begin
        gmem1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (empty_41_reg_1342_pp0_iter95_reg == 1'd1) & (ap_enable_reg_pp0_iter96 == 1'b1))) begin
        gmem1_blk_n_B = m_axi_gmem1_BVALID;
    end else begin
        gmem1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        gmem1_blk_n_W = m_axi_gmem1_WREADY;
    end else begin
        gmem1_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1217_ce = 1'b1;
    end else begin
        grp_fu_1217_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1223_ce = 1'b1;
    end else begin
        grp_fu_1223_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_300_ce = 1'b1;
    end else begin
        grp_fu_300_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_303_ce = 1'b1;
    end else begin
        grp_fu_303_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_751_ce = 1'b1;
    end else begin
        grp_fu_751_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buf_ce0 = 1'b1;
    end else begin
        line_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buf_ce1 = 1'b1;
    end else begin
        line_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln45_reg_1311_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        line_buf_we0 = 3'd7;
    end else begin
        line_buf_we0 = 3'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op158_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem0_RREADY = 1'b1;
    end else begin
        m_axi_gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_39_reg_1338_pp0_iter26_reg == 1'd1) & (ap_enable_reg_pp0_iter27 == 1'b1))) begin
        m_axi_gmem1_AWVALID = 1'b1;
    end else begin
        m_axi_gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (empty_41_reg_1342_pp0_iter95_reg == 1'd1) & (ap_enable_reg_pp0_iter96 == 1'b1))) begin
        m_axi_gmem1_BREADY = 1'b1;
    end else begin
        m_axi_gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter28 == 1'b1))) begin
        m_axi_gmem1_WVALID = 1'b1;
    end else begin
        m_axi_gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln124_fu_417_p2 = ($signed(zext_ln124_fu_413_p1) + $signed(10'd1020));

assign add_ln346_fu_951_p2 = ($signed(zext_ln346_fu_947_p1) + $signed(9'd385));

assign add_ln45_1_fu_869_p2 = (zext_ln45_fu_865_p1 + out_r);

assign add_ln45_2_fu_810_p2 = (yi_fu_210 + 10'd1);

assign add_ln45_fu_371_p2 = (ap_sig_allocacmp_indvar_flatten_load + 19'd1);

assign add_ln46_fu_447_p2 = (select_ln45_fu_386_p3 + 10'd1);

assign add_ln86_fu_677_p2 = ($signed(sext_ln86_fu_663_p1) + $signed(tmp_2_cast1_fu_576_p1));

assign and_ln107_1_fu_1131_p2 = (icmp_ln107_fu_1075_p2 & icmp_ln107_1_fu_1081_p2);

assign and_ln107_fu_1087_p2 = (icmp_ln107_fu_1075_p2 & icmp_ln107_1_fu_1081_p2);

assign and_ln111_1_fu_1149_p2 = (icmp_ln111_fu_1093_p2 & and_ln111_fu_1143_p2);

assign and_ln111_fu_1143_p2 = (xor_ln107_fu_1137_p2 & icmp_ln111_1_fu_1099_p2);

assign and_ln115_fu_1117_p2 = (icmp_ln115_fu_1105_p2 & icmp_ln115_1_fu_1111_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((empty_41_reg_1342_pp0_iter95_reg == 1'd1) & (m_axi_gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter96 == 1'b1)) | ((ap_predicate_op158_read_state2 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((empty_41_reg_1342_pp0_iter95_reg == 1'd1) & (m_axi_gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter96 == 1'b1)) | ((m_axi_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b1)) | ((1'b1 == ap_block_state28_io) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_predicate_op158_read_state2 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((empty_41_reg_1342_pp0_iter95_reg == 1'd1) & (m_axi_gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter96 == 1'b1)) | ((m_axi_gmem1_WREADY == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b1)) | ((1'b1 == ap_block_state28_io) & (ap_enable_reg_pp0_iter27 == 1'b1)) | ((ap_predicate_op158_read_state2 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state28_io = ((empty_39_reg_1338_pp0_iter26_reg == 1'd1) & (m_axi_gmem1_AWREADY == 1'b0));
end

assign ap_block_state28_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op158_read_state2 == 1'b1) & (m_axi_gmem0_RVALID == 1'b0));
end

assign ap_block_state30_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage0_iter70 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter71 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter72 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter73 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage0_iter74 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter75 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter76 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage0_iter77 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage0_iter78 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage0_iter79 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter80 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage0_iter81 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage0_iter82 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage0_iter83 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage0_iter84 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage0_iter85 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage0_iter86 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage0_iter87 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage0_iter88 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage0_iter89 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage0_iter90 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage0_iter91 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage0_iter92 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage0_iter93 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage0_iter94 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage0_iter95 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state97_pp0_stage0_iter96 = ((empty_41_reg_1342_pp0_iter95_reg == 1'd1) & (m_axi_gmem1_BVALID == 1'b0));
end

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_t_int_1_reg_289 = 'bx;

assign ap_phi_reg_pp0_iter2_empty_42_reg_280 = 'bx;

always @ (*) begin
    ap_predicate_op158_read_state2 = ((icmp_ln59_reg_1329 == 1'd1) & (icmp_ln45_reg_1311 == 1'd0));
end

assign cmp145_not_fu_790_p2 = ((yi_fu_210 > 10'd508) ? 1'b1 : 1'b0);

assign cmp145_not_mid1_fu_836_p2 = ((add_ln45_2_fu_810_p2 > 10'd508) ? 1'b1 : 1'b0);

assign data_V_fu_908_p1 = dc_reg_1438;

assign empty_37_fu_770_p1 = yi_fu_210[8:0];

assign empty_38_fu_429_p1 = ap_sig_allocacmp_indvar_flatten_load[8:0];

assign empty_39_fu_441_p2 = ((tmp_17_fu_433_p3 == 19'd0) ? 1'b1 : 1'b0);

assign empty_40_fu_453_p1 = add_ln45_fu_371_p2[8:0];

assign empty_41_fu_465_p2 = ((tmp_18_fu_457_p3 == 19'd0) ? 1'b1 : 1'b0);

assign empty_44_fu_816_p1 = add_ln45_2_fu_810_p2[8:0];

assign grad_sobel_fu_1169_p3 = ((or_ln111_fu_1163_p2[0:0] == 1'b1) ? select_ln111_fu_1155_p3 : select_ln107_fu_1123_p3);

assign grp_fu_1217_p0 = sext_ln74_fu_757_p1;

assign grp_fu_1217_p1 = sext_ln74_fu_757_p1;

assign grp_fu_1223_p0 = sext_ln73_1_fu_760_p1;

assign grp_fu_1223_p1 = sext_ln73_1_fu_760_p1;

assign grp_fu_300_p0 = add_ln90_reg_1423;

assign grp_fu_751_p0 = $signed(tmp_16_fu_736_p3);

assign icmp34_fu_830_p2 = ((tmp_2_fu_820_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_fu_784_p2 = ((tmp_1_fu_774_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln107_1_fu_1081_p2 = (($signed(ap_phi_reg_pp0_iter27_t_int_1_reg_289) < $signed(32'd4294967191)) ? 1'b1 : 1'b0);

assign icmp_ln107_fu_1075_p2 = (($signed(ap_phi_reg_pp0_iter27_t_int_1_reg_289) > $signed(32'd4294966678)) ? 1'b1 : 1'b0);

assign icmp_ln111_1_fu_1099_p2 = (($signed(ap_phi_reg_pp0_iter27_t_int_1_reg_289) < $signed(32'd107)) ? 1'b1 : 1'b0);

assign icmp_ln111_fu_1093_p2 = (($signed(ap_phi_reg_pp0_iter27_t_int_1_reg_289) > $signed(32'd4294967190)) ? 1'b1 : 1'b0);

assign icmp_ln115_1_fu_1111_p2 = (($signed(ap_phi_reg_pp0_iter27_t_int_1_reg_289) < $signed(32'd618)) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_1105_p2 = (($signed(ap_phi_reg_pp0_iter27_t_int_1_reg_289) > $signed(32'd106)) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_423_p2 = ((add_ln124_fu_417_p2 > 10'd504) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_365_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 19'd262144) ? 1'b1 : 1'b0);

assign icmp_ln46_fu_380_p2 = ((ap_sig_allocacmp_xi_load == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_407_p2 = ((trunc_ln46_fu_399_p1 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_1069_p2 = (($signed(tmp_15_fu_1059_p4) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln99_fu_732_p2 = ((pix_h_sobel_reg_1369 == zext_ln79_2_reg_1375) ? 1'b1 : 1'b0);

assign isNeg_fu_957_p3 = add_ln346_fu_951_p2[32'd8];

assign line_buf_address0 = line_buf_addr_reg_1323_pp0_iter1_reg;

assign line_buf_address1 = zext_ln46_1_fu_394_p1;

assign line_buf_d0 = {{trunc_ln59_1_fu_550_p1}, {tmp_3_reg_1364}};

assign m_axi_gmem0_ARADDR = 64'd0;

assign m_axi_gmem0_ARBURST = 2'd0;

assign m_axi_gmem0_ARCACHE = 4'd0;

assign m_axi_gmem0_ARID = 1'd0;

assign m_axi_gmem0_ARLEN = 32'd0;

assign m_axi_gmem0_ARLOCK = 2'd0;

assign m_axi_gmem0_ARPROT = 3'd0;

assign m_axi_gmem0_ARQOS = 4'd0;

assign m_axi_gmem0_ARREGION = 4'd0;

assign m_axi_gmem0_ARSIZE = 3'd0;

assign m_axi_gmem0_ARUSER = 1'd0;

assign m_axi_gmem0_ARVALID = 1'b0;

assign m_axi_gmem0_AWADDR = 64'd0;

assign m_axi_gmem0_AWBURST = 2'd0;

assign m_axi_gmem0_AWCACHE = 4'd0;

assign m_axi_gmem0_AWID = 1'd0;

assign m_axi_gmem0_AWLEN = 32'd0;

assign m_axi_gmem0_AWLOCK = 2'd0;

assign m_axi_gmem0_AWPROT = 3'd0;

assign m_axi_gmem0_AWQOS = 4'd0;

assign m_axi_gmem0_AWREGION = 4'd0;

assign m_axi_gmem0_AWSIZE = 3'd0;

assign m_axi_gmem0_AWUSER = 1'd0;

assign m_axi_gmem0_AWVALID = 1'b0;

assign m_axi_gmem0_BREADY = 1'b0;

assign m_axi_gmem0_WDATA = 512'd0;

assign m_axi_gmem0_WID = 1'd0;

assign m_axi_gmem0_WLAST = 1'b0;

assign m_axi_gmem0_WSTRB = 64'd0;

assign m_axi_gmem0_WUSER = 1'd0;

assign m_axi_gmem0_WVALID = 1'b0;

assign m_axi_gmem1_ARADDR = 64'd0;

assign m_axi_gmem1_ARBURST = 2'd0;

assign m_axi_gmem1_ARCACHE = 4'd0;

assign m_axi_gmem1_ARID = 1'd0;

assign m_axi_gmem1_ARLEN = 32'd0;

assign m_axi_gmem1_ARLOCK = 2'd0;

assign m_axi_gmem1_ARPROT = 3'd0;

assign m_axi_gmem1_ARQOS = 4'd0;

assign m_axi_gmem1_ARREGION = 4'd0;

assign m_axi_gmem1_ARSIZE = 3'd0;

assign m_axi_gmem1_ARUSER = 1'd0;

assign m_axi_gmem1_ARVALID = 1'b0;

assign m_axi_gmem1_AWADDR = gmem1_addr_reg_1464;

assign m_axi_gmem1_AWBURST = 2'd0;

assign m_axi_gmem1_AWCACHE = 4'd0;

assign m_axi_gmem1_AWID = 1'd0;

assign m_axi_gmem1_AWLEN = 32'd512;

assign m_axi_gmem1_AWLOCK = 2'd0;

assign m_axi_gmem1_AWPROT = 3'd0;

assign m_axi_gmem1_AWQOS = 4'd0;

assign m_axi_gmem1_AWREGION = 4'd0;

assign m_axi_gmem1_AWSIZE = 3'd0;

assign m_axi_gmem1_AWUSER = 1'd0;

assign m_axi_gmem1_RREADY = 1'b0;

assign m_axi_gmem1_WDATA = select_ln124_reg_1470;

assign m_axi_gmem1_WID = 1'd0;

assign m_axi_gmem1_WLAST = 1'b0;

assign m_axi_gmem1_WSTRB = 2'd3;

assign m_axi_gmem1_WUSER = 1'd0;

assign mantissa_fu_933_p4 = {{{{1'd1}, {p_Result_1_fu_929_p1}}}, {1'd0}};

assign or_ln111_fu_1163_p2 = (and_ln111_1_fu_1149_p2 | and_ln107_fu_1087_p2);

assign or_ln124_1_fu_1177_p2 = (select_ln45_3_reg_1443 | icmp_ln124_reg_1333_pp0_iter26_reg);

assign or_ln124_2_fu_888_p2 = (icmp34_fu_830_p2 | cmp145_not_mid1_fu_836_p2);

assign or_ln124_fu_804_p2 = (icmp_fu_784_p2 | cmp145_not_fu_790_p2);

assign p_Result_1_fu_929_p1 = data_V_fu_908_p1[22:0];

assign pix_h_sobel_2_fu_728_p2 = (pix_h_sobel_reg_1369 - zext_ln79_2_reg_1375);

assign pix_h_sobel_3_fu_611_p2 = (zext_ln73_fu_572_p1 + zext_ln79_fu_607_p1);

assign pix_h_sobel_4_fu_621_p2 = (zext_ln79_1_fu_617_p1 - tmp_2_cast_fu_579_p1);

assign pix_h_sobel_fu_631_p2 = ($signed(sext_ln79_fu_627_p1) + $signed(sext_ln73_fu_603_p1));

assign pix_v_sobel_4_fu_667_p2 = (zext_ln73_fu_572_p1 - zext_ln79_fu_607_p1);

assign pix_v_sobel_5_fu_683_p2 = ($signed(add_ln86_fu_677_p2) + $signed(sext_ln86_1_fu_673_p1));

assign pix_v_sobel_fu_689_p2 = (pix_v_sobel_5_fu_683_p2 - zext_ln79_2_fu_637_p1);

assign r_V_1_fu_997_p2 = zext_ln15_fu_943_p1 << zext_ln1488_fu_987_p1;

assign r_V_fu_991_p2 = zext_ln15_fu_943_p1 >> zext_ln1488_fu_987_p1;

assign result_V_2_fu_1048_p2 = (32'd0 - val_reg_1453);

assign result_V_fu_1053_p3 = ((p_Result_s_reg_1448[0:0] == 1'b1) ? result_V_2_fu_1048_p2 : val_reg_1453);

assign select_ln107_fu_1123_p3 = ((and_ln115_fu_1117_p2[0:0] == 1'b1) ? 8'd45 : 8'd90);

assign select_ln111_fu_1155_p3 = ((and_ln111_1_fu_1149_p2[0:0] == 1'b1) ? 8'd0 : 8'd135);

assign select_ln124_fu_1209_p3 = ((or_ln124_1_fu_1177_p2[0:0] == 1'b1) ? shl_ln2_fu_1181_p3 : tmp_s_fu_1201_p3);

assign select_ln126_fu_1193_p3 = ((icmp_ln93_fu_1069_p2[0:0] == 1'b1) ? 8'd255 : trunc_ln126_fu_1189_p1);

assign select_ln45_1_fu_529_p3 = ((icmp_ln46_reg_1315_pp0_iter1_reg[0:0] == 1'b1) ? 504'd0 : shiftreg_fu_190);

assign select_ln45_2_fu_850_p3 = ((icmp_ln46_reg_1315_pp0_iter25_reg[0:0] == 1'b1) ? tmp_6_mid1_fu_842_p3 : tmp_6_fu_796_p3);

assign select_ln45_3_fu_894_p3 = ((icmp_ln46_reg_1315_pp0_iter25_reg[0:0] == 1'b1) ? or_ln124_2_fu_888_p2 : or_ln124_fu_804_p2);

assign select_ln45_4_fu_901_p3 = ((icmp_ln46_reg_1315_pp0_iter25_reg[0:0] == 1'b1) ? add_ln45_2_fu_810_p2 : yi_fu_210);

assign select_ln45_fu_386_p3 = ((icmp_ln46_fu_380_p2[0:0] == 1'b1) ? 10'd0 : ap_sig_allocacmp_xi_load);

assign sext_ln100_fu_1033_p1 = $signed(grp_fu_751_p2);

assign sext_ln127_1_mid2_v_fu_874_p4 = {{add_ln45_1_fu_869_p2[63:1]}};

assign sext_ln127_1_mid2_v_v_v_v_v_fu_857_p3 = {{select_ln45_2_fu_850_p3}, {1'd0}};

assign sext_ln1488_fu_983_p1 = $signed(ush_fu_975_p3);

assign sext_ln1512_fu_971_p1 = $signed(sub_ln1512_fu_965_p2);

assign sext_ln45_1_fu_884_p1 = $signed(sext_ln127_1_mid2_v_fu_874_p4);

assign sext_ln73_1_fu_760_p1 = pix_h_sobel_2_reg_1387_pp0_iter4_reg;

assign sext_ln73_fu_603_p1 = $signed(tmp_9_fu_595_p3);

assign sext_ln74_fu_757_p1 = pix_v_sobel_reg_1381_pp0_iter3_reg;

assign sext_ln79_fu_627_p1 = $signed(pix_h_sobel_4_fu_621_p2);

assign sext_ln86_1_fu_673_p1 = $signed(pix_v_sobel_4_fu_667_p2);

assign sext_ln86_fu_663_p1 = $signed(tmp_8_fu_655_p3);

assign shl_ln2_fu_1181_p3 = {{grad_sobel_fu_1169_p3}, {8'd0}};

assign sub_ln1512_fu_965_p2 = (8'd127 - xs_exp_V_fu_919_p4);

assign tmp16_fu_649_p2 = (zext_ln74_fu_641_p1 - zext_ln74_1_fu_645_p1);

assign tmp_10_fu_1015_p4 = {{r_V_1_fu_997_p2[55:24]}};

assign tmp_14_fu_1003_p3 = r_V_fu_991_p2[32'd24];

assign tmp_15_fu_1059_p4 = {{result_V_fu_1053_p3[31:8]}};

assign tmp_16_fu_736_p3 = {{pix_v_sobel_reg_1381}, {8'd0}};

assign tmp_17_fu_433_p3 = {{10'd0}, {empty_38_fu_429_p1}};

assign tmp_18_fu_457_p3 = {{10'd0}, {empty_40_fu_453_p1}};

assign tmp_1_fu_774_p4 = {{yi_fu_210[9:2]}};

assign tmp_2_cast1_fu_576_p1 = tmp_4_reg_1346;

assign tmp_2_cast_fu_579_p1 = tmp_4_reg_1346;

assign tmp_2_fu_820_p4 = {{add_ln45_2_fu_810_p2[9:2]}};

assign tmp_4_cast_fu_586_p1 = tmp_7_reg_1353;

assign tmp_6_fu_796_p3 = {{empty_37_fu_770_p1}, {9'd0}};

assign tmp_6_mid1_fu_842_p3 = {{empty_44_fu_816_p1}, {9'd0}};

assign tmp_8_fu_655_p3 = {{tmp16_fu_649_p2}, {1'd0}};

assign tmp_9_fu_595_p3 = {{tmp_fu_589_p2}, {1'd0}};

assign tmp_fu_589_p2 = (zext_ln73_1_fu_582_p1 - tmp_4_cast_fu_586_p1);

assign tmp_s_fu_1201_p3 = {{grad_sobel_fu_1169_p3}, {select_ln126_fu_1193_p3}};

assign trunc_ln126_fu_1189_p1 = result_V_fu_1053_p3[7:0];

assign trunc_ln46_fu_399_p1 = select_ln45_fu_386_p3[5:0];

assign trunc_ln59_1_fu_550_p1 = ap_phi_mux_empty_42_phi_fu_283_p4[7:0];

assign trunc_ln59_fu_403_p1 = select_ln45_fu_386_p3[8:0];

assign ush_fu_975_p3 = ((isNeg_fu_957_p3[0:0] == 1'b1) ? sext_ln1512_fu_971_p1 : add_ln346_fu_951_p2);

assign val_fu_1025_p3 = ((isNeg_fu_957_p3[0:0] == 1'b1) ? zext_ln818_fu_1011_p1 : tmp_10_fu_1015_p4);

assign xor_ln107_fu_1137_p2 = (1'd1 ^ and_ln107_1_fu_1131_p2);

assign xs_exp_V_fu_919_p4 = {{data_V_fu_908_p1[30:23]}};

assign zext_ln124_fu_413_p1 = trunc_ln59_fu_403_p1;

assign zext_ln1488_fu_987_p1 = $unsigned(sext_ln1488_fu_983_p1);

assign zext_ln15_fu_943_p1 = mantissa_fu_933_p4;

assign zext_ln346_fu_947_p1 = xs_exp_V_fu_919_p4;

assign zext_ln45_fu_865_p1 = sext_ln127_1_mid2_v_v_v_v_v_fu_857_p3;

assign zext_ln46_1_fu_394_p1 = select_ln45_fu_386_p3;

assign zext_ln46_fu_536_p1 = select_ln45_1_fu_529_p3;

assign zext_ln73_1_fu_582_p1 = empty_fu_198;

assign zext_ln73_fu_572_p1 = pix_v_sobel_1_fu_194;

assign zext_ln74_1_fu_645_p1 = empty_36_fu_226;

assign zext_ln74_fu_641_p1 = empty_34_fu_218;

assign zext_ln79_1_fu_617_p1 = pix_h_sobel_3_fu_611_p2;

assign zext_ln79_2_fu_637_p1 = trunc_ln59_1_fu_550_p1;

assign zext_ln79_fu_607_p1 = empty_33_fu_202;

assign zext_ln818_fu_1011_p1 = tmp_14_fu_1003_p3;

always @ (posedge ap_clk) begin
    zext_ln79_2_reg_1375[10:8] <= 3'b000;
end

endmodule //sobel_sobel_Pipeline_VITIS_LOOP_45_1_VITIS_LOOP_46_2
