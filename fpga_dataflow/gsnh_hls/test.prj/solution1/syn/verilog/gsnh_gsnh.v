// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="gsnh_gsnh,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=2.500000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=1.825000,HLS_SYN_LAT=1050950,HLS_SYN_TPT=none,HLS_SYN_MEM=524,HLS_SYN_DSP=0,HLS_SYN_FF=5146,HLS_SYN_LUT=8798,HLS_VERSION=2019_2}" *)

module gsnh_gsnh (
        ap_clk,
        ap_rst_n,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 51'd1;
parameter    ap_ST_fsm_pp0_stage0 = 51'd2;
parameter    ap_ST_fsm_pp0_stage1 = 51'd4;
parameter    ap_ST_fsm_pp0_stage2 = 51'd8;
parameter    ap_ST_fsm_pp0_stage3 = 51'd16;
parameter    ap_ST_fsm_pp0_stage4 = 51'd32;
parameter    ap_ST_fsm_pp0_stage5 = 51'd64;
parameter    ap_ST_fsm_pp0_stage6 = 51'd128;
parameter    ap_ST_fsm_pp0_stage7 = 51'd256;
parameter    ap_ST_fsm_pp0_stage8 = 51'd512;
parameter    ap_ST_fsm_pp0_stage9 = 51'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 51'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 51'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 51'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 51'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 51'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 51'd65536;
parameter    ap_ST_fsm_pp0_stage16 = 51'd131072;
parameter    ap_ST_fsm_pp0_stage17 = 51'd262144;
parameter    ap_ST_fsm_pp0_stage18 = 51'd524288;
parameter    ap_ST_fsm_pp0_stage19 = 51'd1048576;
parameter    ap_ST_fsm_pp0_stage20 = 51'd2097152;
parameter    ap_ST_fsm_pp0_stage21 = 51'd4194304;
parameter    ap_ST_fsm_pp0_stage22 = 51'd8388608;
parameter    ap_ST_fsm_pp0_stage23 = 51'd16777216;
parameter    ap_ST_fsm_pp0_stage24 = 51'd33554432;
parameter    ap_ST_fsm_pp0_stage25 = 51'd67108864;
parameter    ap_ST_fsm_pp0_stage26 = 51'd134217728;
parameter    ap_ST_fsm_pp0_stage27 = 51'd268435456;
parameter    ap_ST_fsm_pp0_stage28 = 51'd536870912;
parameter    ap_ST_fsm_pp0_stage29 = 51'd1073741824;
parameter    ap_ST_fsm_pp0_stage30 = 51'd2147483648;
parameter    ap_ST_fsm_pp0_stage31 = 51'd4294967296;
parameter    ap_ST_fsm_state35 = 51'd8589934592;
parameter    ap_ST_fsm_state36 = 51'd17179869184;
parameter    ap_ST_fsm_state37 = 51'd34359738368;
parameter    ap_ST_fsm_state38 = 51'd68719476736;
parameter    ap_ST_fsm_state39 = 51'd137438953472;
parameter    ap_ST_fsm_state40 = 51'd274877906944;
parameter    ap_ST_fsm_state41 = 51'd549755813888;
parameter    ap_ST_fsm_pp1_stage0 = 51'd1099511627776;
parameter    ap_ST_fsm_state47 = 51'd2199023255552;
parameter    ap_ST_fsm_state48 = 51'd4398046511104;
parameter    ap_ST_fsm_state49 = 51'd8796093022208;
parameter    ap_ST_fsm_state50 = 51'd17592186044416;
parameter    ap_ST_fsm_pp2_stage0 = 51'd35184372088832;
parameter    ap_ST_fsm_state56 = 51'd70368744177664;
parameter    ap_ST_fsm_state57 = 51'd140737488355328;
parameter    ap_ST_fsm_state58 = 51'd281474976710656;
parameter    ap_ST_fsm_state59 = 51'd562949953421312;
parameter    ap_ST_fsm_state60 = 51'd1125899906842624;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [50:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [63:0] data;
wire   [63:0] out_r;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_state35;
reg    gmem0_blk_n_R;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln31_reg_2159;
reg    gmem1_blk_n_AW;
wire    ap_CS_fsm_state50;
reg    gmem1_blk_n_W;
reg    ap_enable_reg_pp2_iter4;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln273_reg_2250;
reg   [0:0] icmp_ln273_reg_2250_pp2_iter3_reg;
reg    gmem1_blk_n_B;
wire    ap_CS_fsm_state60;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [7:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
reg    gmem1_AWVALID;
wire    gmem1_AWREADY;
reg    gmem1_WVALID;
wire    gmem1_WREADY;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [7:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
reg    gmem1_BREADY;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
reg   [4:0] empty_reg_762;
reg   [18:0] indvar_flatten_reg_773;
reg   [9:0] xi_reg_784;
reg   [9:0] yi_reg_795;
reg   [7:0] window_buf_2_1_reg_806;
reg   [7:0] window_buf_2_1_1_reg_818;
reg   [7:0] window_buf_1_1_reg_830;
reg   [7:0] window_buf_1_1_1_reg_842;
reg   [7:0] window_buf_0_1_reg_854;
reg   [7:0] window_buf_0_1_1_reg_866;
reg   [18:0] indvar_flatten10_reg_878;
reg   [9:0] yi_1_reg_889;
reg   [9:0] xi_1_reg_900;
reg   [63:0] out_read_reg_2046;
reg   [63:0] data_read_reg_2051;
wire   [0:0] exitcond4012_fu_925_p2;
reg   [0:0] exitcond4012_reg_2056;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state34_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [4:0] empty_154_fu_931_p2;
reg   [4:0] empty_154_reg_2060;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] empty_155_fu_937_p1;
reg   [2:0] empty_155_reg_2065;
wire   [1:0] tmp_17_fu_941_p4;
reg   [1:0] tmp_17_reg_2070;
wire   [23:0] empty_166_fu_1027_p2;
reg   [23:0] empty_166_reg_2075;
wire   [8:0] tmp_s_fu_1033_p3;
reg   [8:0] tmp_s_reg_2081;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
wire   [2:0] mask_fu_1048_p2;
reg   [2:0] mask_reg_2147;
wire   [0:0] icmp_ln31_fu_1693_p2;
wire    ap_block_state42_pp1_stage0_iter0;
reg    ap_block_state43_pp1_stage0_iter1;
wire    ap_block_state44_pp1_stage0_iter2;
wire    ap_block_state45_pp1_stage0_iter3;
wire    ap_block_state46_pp1_stage0_iter4;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln31_reg_2159_pp1_iter1_reg;
reg   [0:0] icmp_ln31_reg_2159_pp1_iter2_reg;
reg   [0:0] icmp_ln31_reg_2159_pp1_iter3_reg;
wire   [18:0] add_ln31_fu_1699_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [0:0] icmp_ln32_fu_1705_p2;
reg   [0:0] icmp_ln32_reg_2168;
reg   [0:0] icmp_ln32_reg_2168_pp1_iter1_reg;
wire   [9:0] select_ln31_fu_1711_p3;
reg   [9:0] select_ln31_reg_2173;
reg   [9:0] select_ln31_reg_2173_pp1_iter1_reg;
wire   [9:0] add_ln32_fu_1719_p2;
reg   [8:0] line_buf_addr_128_reg_2184;
reg   [8:0] line_buf_addr_128_reg_2184_pp1_iter2_reg;
reg   [7:0] window_buf_2_2_reg_2190;
reg   [7:0] window_buf_2_2_reg_2190_pp1_iter2_reg;
wire   [9:0] select_ln31_1_fu_1735_p3;
reg   [9:0] select_ln31_1_reg_2197;
reg    ap_enable_reg_pp1_iter2;
reg   [7:0] window_buf_0_2_reg_2202;
reg   [7:0] window_buf_1_2_reg_2208;
wire   [17:0] add_ln44_fu_1777_p2;
reg   [17:0] add_ln44_reg_2214;
reg   [17:0] add_ln44_reg_2214_pp1_iter3_reg;
reg   [15:0] tmp_19_reg_2219;
wire   [9:0] add_ln62_fu_1840_p2;
reg   [9:0] add_ln62_reg_2224;
wire   [9:0] add_ln62_3_fu_1846_p2;
reg   [9:0] add_ln62_3_reg_2229;
wire   [8:0] add_ln62_4_fu_1852_p2;
reg   [8:0] add_ln62_4_reg_2234;
reg   [7:0] trunc_ln_reg_2239;
reg   [63:0] gmem1_addr_reg_2244;
wire    ap_CS_fsm_state47;
wire   [0:0] icmp_ln273_fu_1961_p2;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state51_pp2_stage0_iter0;
wire    ap_block_state52_pp2_stage0_iter1;
wire    ap_block_state53_pp2_stage0_iter2;
wire    ap_block_state54_pp2_stage0_iter3;
wire    ap_block_state55_pp2_stage0_iter4;
reg    ap_block_state55_io;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln273_reg_2250_pp2_iter1_reg;
reg   [0:0] icmp_ln273_reg_2250_pp2_iter2_reg;
wire   [18:0] add_ln273_fu_1967_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [9:0] select_ln273_1_fu_1993_p3;
reg   [9:0] select_ln273_1_reg_2259;
wire   [17:0] add_ln281_fu_2017_p2;
reg   [17:0] add_ln281_reg_2264;
wire   [9:0] add_ln274_fu_2023_p2;
wire   [0:0] icmp_ln286_fu_2033_p2;
reg   [0:0] icmp_ln286_reg_2279;
wire   [7:0] select_ln292_fu_2039_p3;
reg   [7:0] select_ln292_reg_2284;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_state33_pp0_stage31_iter0;
wire    ap_block_pp0_stage31_subdone;
wire    ap_CS_fsm_pp0_stage31;
wire    ap_CS_fsm_state41;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_flush_enable;
reg    ap_enable_reg_pp1_iter3;
reg    ap_condition_pp1_exit_iter2_state44;
reg    ap_enable_reg_pp1_iter4;
wire    grp_nms_fu_918_ap_ready;
wire    grp_nms_fu_918_ap_done;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state51;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg   [8:0] line_buf_address0;
reg    line_buf_ce0;
reg   [2:0] line_buf_we0;
wire   [23:0] line_buf_q0;
reg   [8:0] line_buf_address1;
reg    line_buf_ce1;
reg   [2:0] line_buf_we1;
reg   [23:0] line_buf_d1;
reg   [17:0] gau_buf_address0;
reg    gau_buf_ce0;
reg    gau_buf_we0;
wire   [7:0] gau_buf_q0;
reg   [17:0] sobel_buf_value_address0;
reg    sobel_buf_value_ce0;
reg    sobel_buf_value_we0;
wire   [7:0] sobel_buf_value_q0;
reg   [17:0] sobel_buf_grad_address0;
reg    sobel_buf_grad_ce0;
reg    sobel_buf_grad_we0;
wire   [7:0] sobel_buf_grad_q0;
reg   [17:0] supp_buf_address0;
reg    supp_buf_ce0;
reg    supp_buf_we0;
wire   [7:0] supp_buf_q0;
wire    grp_sobel_fu_911_ap_start;
wire    grp_sobel_fu_911_ap_done;
wire    grp_sobel_fu_911_ap_idle;
wire    grp_sobel_fu_911_ap_ready;
wire   [17:0] grp_sobel_fu_911_data_address0;
wire    grp_sobel_fu_911_data_ce0;
wire   [17:0] grp_sobel_fu_911_out_value_address0;
wire    grp_sobel_fu_911_out_value_ce0;
wire    grp_sobel_fu_911_out_value_we0;
wire   [7:0] grp_sobel_fu_911_out_value_d0;
wire   [17:0] grp_sobel_fu_911_out_grad_address0;
wire    grp_sobel_fu_911_out_grad_ce0;
wire    grp_sobel_fu_911_out_grad_we0;
wire   [7:0] grp_sobel_fu_911_out_grad_d0;
wire    grp_nms_fu_918_ap_start;
wire    grp_nms_fu_918_ap_idle;
wire   [17:0] grp_nms_fu_918_data_value_address0;
wire    grp_nms_fu_918_data_value_ce0;
wire   [17:0] grp_nms_fu_918_data_grad_address0;
wire    grp_nms_fu_918_data_grad_ce0;
wire   [17:0] grp_nms_fu_918_out_r_address0;
wire    grp_nms_fu_918_out_r_ce0;
wire    grp_nms_fu_918_out_r_we0;
wire   [7:0] grp_nms_fu_918_out_r_d0;
reg   [4:0] ap_phi_mux_empty_phi_fu_766_p4;
wire    ap_block_pp0_stage0;
reg   [9:0] ap_phi_mux_yi_phi_fu_799_p4;
reg   [7:0] ap_phi_mux_window_buf_2_1_phi_fu_810_p4;
reg   [7:0] ap_phi_mux_window_buf_2_1_1_phi_fu_822_p4;
reg   [7:0] ap_phi_mux_window_buf_1_1_1_phi_fu_846_p4;
reg   [7:0] ap_phi_mux_window_buf_0_1_phi_fu_858_p4;
reg   [7:0] ap_phi_mux_window_buf_0_1_1_phi_fu_870_p4;
reg   [9:0] ap_phi_mux_yi_1_phi_fu_893_p4;
reg    grp_sobel_fu_911_ap_start_reg;
wire    ap_CS_fsm_state48;
reg    grp_nms_fu_918_ap_start_reg;
wire    ap_CS_fsm_state49;
wire   [63:0] p_cast11_fu_1040_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] p_cast14_fu_1062_p1;
wire   [63:0] p_cast15_fu_1072_p1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire   [63:0] p_cast16_fu_1082_p1;
wire   [63:0] p_cast17_fu_1092_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire   [63:0] p_cast18_fu_1102_p1;
wire   [63:0] p_cast19_fu_1112_p1;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire   [63:0] p_cast20_fu_1122_p1;
wire   [63:0] p_cast21_fu_1132_p1;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire   [63:0] p_cast22_fu_1142_p1;
wire   [63:0] p_cast23_fu_1152_p1;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire   [63:0] p_cast24_fu_1162_p1;
wire   [63:0] p_cast25_fu_1172_p1;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire   [63:0] p_cast26_fu_1182_p1;
wire   [63:0] p_cast27_fu_1192_p1;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire   [63:0] p_cast28_fu_1202_p1;
wire   [63:0] p_cast29_fu_1212_p1;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire   [63:0] p_cast30_fu_1222_p1;
wire   [63:0] p_cast31_fu_1232_p1;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire   [63:0] p_cast32_fu_1242_p1;
wire   [63:0] p_cast33_fu_1252_p1;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire   [63:0] p_cast34_fu_1262_p1;
wire   [63:0] p_cast35_fu_1272_p1;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire   [63:0] p_cast36_fu_1282_p1;
wire   [63:0] p_cast37_fu_1292_p1;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire   [63:0] p_cast38_fu_1302_p1;
wire   [63:0] p_cast39_fu_1312_p1;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire   [63:0] p_cast40_fu_1322_p1;
wire   [63:0] p_cast41_fu_1332_p1;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire   [63:0] p_cast42_fu_1342_p1;
wire   [63:0] p_cast43_fu_1352_p1;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire   [63:0] p_cast44_fu_1362_p1;
wire   [63:0] p_cast45_fu_1372_p1;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire   [63:0] p_cast46_fu_1382_p1;
wire   [63:0] p_cast47_fu_1392_p1;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire   [63:0] p_cast48_fu_1402_p1;
wire   [63:0] p_cast49_fu_1412_p1;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire   [63:0] p_cast50_fu_1422_p1;
wire   [63:0] p_cast51_fu_1432_p1;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire   [63:0] p_cast52_fu_1442_p1;
wire   [63:0] p_cast53_fu_1452_p1;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire   [63:0] p_cast54_fu_1462_p1;
wire   [63:0] p_cast55_fu_1472_p1;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire   [63:0] p_cast56_fu_1482_p1;
wire   [63:0] p_cast57_fu_1492_p1;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire   [63:0] p_cast58_fu_1502_p1;
wire   [63:0] p_cast59_fu_1512_p1;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire   [63:0] p_cast60_fu_1522_p1;
wire   [63:0] p_cast61_fu_1532_p1;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire   [63:0] p_cast62_fu_1542_p1;
wire   [63:0] p_cast63_fu_1552_p1;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire   [63:0] p_cast64_fu_1562_p1;
wire   [63:0] p_cast65_fu_1572_p1;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire   [63:0] p_cast66_fu_1582_p1;
wire   [63:0] p_cast67_fu_1592_p1;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire   [63:0] p_cast68_fu_1602_p1;
wire   [63:0] p_cast69_fu_1612_p1;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
wire   [63:0] p_cast70_fu_1622_p1;
wire   [63:0] p_cast71_fu_1632_p1;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire   [63:0] p_cast72_fu_1642_p1;
wire   [63:0] p_cast73_fu_1652_p1;
wire    ap_block_pp0_stage31;
wire   [63:0] p_cast74_fu_1662_p1;
wire   [63:0] p_cast75_fu_1672_p1;
wire   [63:0] p_cast76_fu_1682_p1;
wire   [63:0] zext_ln32_fu_1725_p1;
wire   [63:0] zext_ln44_fu_1952_p1;
wire   [63:0] zext_ln281_fu_2029_p1;
wire    ap_block_pp2_stage0_01001;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire    ap_block_state10_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_11001;
wire    ap_block_state11_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_11001;
wire    ap_block_state12_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_11001;
wire    ap_block_state13_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_11001;
wire    ap_block_state14_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_11001;
wire    ap_block_state15_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_block_state16_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_11001;
wire    ap_block_state17_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_11001;
wire    ap_block_state18_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire    ap_block_state19_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_11001;
wire    ap_block_state20_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_11001;
wire    ap_block_state21_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_11001;
wire    ap_block_state22_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_11001;
wire    ap_block_state23_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_11001;
wire    ap_block_state24_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_11001;
wire    ap_block_state25_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_11001;
wire    ap_block_state26_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_11001;
wire    ap_block_state27_pp0_stage25_iter0;
wire    ap_block_pp0_stage25_11001;
wire    ap_block_state28_pp0_stage26_iter0;
wire    ap_block_pp0_stage26_11001;
wire    ap_block_state29_pp0_stage27_iter0;
wire    ap_block_pp0_stage27_11001;
wire    ap_block_state30_pp0_stage28_iter0;
wire    ap_block_pp0_stage28_11001;
wire    ap_block_state31_pp0_stage29_iter0;
wire    ap_block_pp0_stage29_11001;
wire    ap_block_state32_pp0_stage30_iter0;
wire    ap_block_pp0_stage30_11001;
wire    ap_block_pp0_stage31_11001;
wire   [23:0] tmp_20_fu_1858_p3;
wire   [4:0] tmp_18_fu_951_p3;
wire   [4:0] empty_156_fu_959_p2;
wire   [0:0] empty_157_fu_965_p2;
wire   [4:0] empty_160_fu_987_p1;
wire   [4:0] empty_159_fu_979_p3;
wire   [4:0] empty_160_fu_987_p2;
wire   [23:0] empty_161_fu_993_p1;
wire   [23:0] empty_162_fu_997_p1;
wire   [23:0] empty_164_fu_1009_p2;
wire   [23:0] empty_165_fu_1015_p2;
wire   [23:0] empty_163_fu_1001_p3;
wire   [23:0] p_demorgan_fu_1021_p2;
wire   [2:0] empty_167_fu_1045_p1;
wire   [8:0] empty_168_fu_1056_p2;
wire   [8:0] empty_169_fu_1067_p2;
wire   [8:0] empty_170_fu_1077_p2;
wire   [8:0] empty_171_fu_1087_p2;
wire   [8:0] empty_172_fu_1097_p2;
wire   [8:0] empty_173_fu_1107_p2;
wire   [8:0] empty_174_fu_1117_p2;
wire   [8:0] empty_175_fu_1127_p2;
wire   [8:0] empty_176_fu_1137_p2;
wire   [8:0] empty_177_fu_1147_p2;
wire   [8:0] empty_178_fu_1157_p2;
wire   [8:0] empty_179_fu_1167_p2;
wire   [8:0] empty_180_fu_1177_p2;
wire   [8:0] empty_181_fu_1187_p2;
wire   [8:0] empty_182_fu_1197_p2;
wire   [8:0] empty_183_fu_1207_p2;
wire   [8:0] empty_184_fu_1217_p2;
wire   [8:0] empty_185_fu_1227_p2;
wire   [8:0] empty_186_fu_1237_p2;
wire   [8:0] empty_187_fu_1247_p2;
wire   [8:0] empty_188_fu_1257_p2;
wire   [8:0] empty_189_fu_1267_p2;
wire   [8:0] empty_190_fu_1277_p2;
wire   [8:0] empty_191_fu_1287_p2;
wire   [8:0] empty_192_fu_1297_p2;
wire   [8:0] empty_193_fu_1307_p2;
wire   [8:0] empty_194_fu_1317_p2;
wire   [8:0] empty_195_fu_1327_p2;
wire   [8:0] empty_196_fu_1337_p2;
wire   [8:0] empty_197_fu_1347_p2;
wire   [8:0] empty_198_fu_1357_p2;
wire   [8:0] empty_199_fu_1367_p2;
wire   [8:0] empty_200_fu_1377_p2;
wire   [8:0] empty_201_fu_1387_p2;
wire   [8:0] empty_202_fu_1397_p2;
wire   [8:0] empty_203_fu_1407_p2;
wire   [8:0] empty_204_fu_1417_p2;
wire   [8:0] empty_205_fu_1427_p2;
wire   [8:0] empty_206_fu_1437_p2;
wire   [8:0] empty_207_fu_1447_p2;
wire   [8:0] empty_208_fu_1457_p2;
wire   [8:0] empty_209_fu_1467_p2;
wire   [8:0] empty_210_fu_1477_p2;
wire   [8:0] empty_211_fu_1487_p2;
wire   [8:0] empty_212_fu_1497_p2;
wire   [8:0] empty_213_fu_1507_p2;
wire   [8:0] empty_214_fu_1517_p2;
wire   [8:0] empty_215_fu_1527_p2;
wire   [8:0] empty_216_fu_1537_p2;
wire   [8:0] empty_217_fu_1547_p2;
wire   [8:0] empty_218_fu_1557_p2;
wire   [8:0] empty_219_fu_1567_p2;
wire   [8:0] empty_220_fu_1577_p2;
wire   [8:0] empty_221_fu_1587_p2;
wire   [8:0] empty_222_fu_1597_p2;
wire   [8:0] empty_223_fu_1607_p2;
wire   [8:0] empty_224_fu_1617_p2;
wire   [8:0] empty_225_fu_1627_p2;
wire   [8:0] empty_226_fu_1637_p2;
wire   [8:0] empty_227_fu_1647_p2;
wire   [8:0] empty_228_fu_1657_p2;
wire   [8:0] empty_229_fu_1667_p2;
wire   [8:0] empty_230_fu_1677_p2;
wire   [9:0] add_ln32_fu_1719_p1;
wire   [9:0] add_ln31_1_fu_1729_p2;
wire   [8:0] trunc_ln31_fu_1742_p1;
wire   [17:0] add_ln44_fu_1777_p0;
wire   [17:0] add_ln44_fu_1777_p1;
wire   [8:0] shl_ln_fu_1797_p3;
wire   [8:0] shl_ln62_1_fu_1809_p3;
wire   [8:0] shl_ln62_4_fu_1825_p3;
wire   [9:0] add_ln62_fu_1840_p0;
wire   [9:0] add_ln62_fu_1840_p1;
wire   [9:0] add_ln62_3_fu_1846_p0;
wire   [9:0] add_ln62_3_fu_1846_p1;
wire   [8:0] add_ln62_4_fu_1852_p0;
wire   [8:0] add_ln62_4_fu_1852_p1;
wire   [9:0] shl_ln62_2_fu_1868_p3;
wire   [8:0] shl_ln62_3_fu_1880_p3;
wire   [10:0] add_ln62_1_fu_1894_p0;
wire   [10:0] add_ln62_1_fu_1894_p1;
wire   [10:0] add_ln62_1_fu_1894_p2;
wire   [11:0] zext_ln62_10_fu_1900_p1;
wire   [11:0] zext_ln62_9_fu_1891_p1;
wire   [9:0] add_ln62_5_fu_1916_p0;
wire   [9:0] add_ln62_5_fu_1916_p1;
wire   [9:0] add_ln62_5_fu_1916_p2;
wire   [10:0] add_ln62_6_fu_1926_p0;
wire   [10:0] add_ln62_6_fu_1926_p1;
wire   [10:0] add_ln62_6_fu_1926_p2;
wire   [11:0] zext_ln62_14_fu_1932_p1;
wire   [11:0] add_ln62_2_fu_1904_p2;
wire   [11:0] add_ln62_7_fu_1936_p2;
wire   [0:0] icmp_ln274_fu_1973_p2;
wire   [9:0] add_ln273_1_fu_1987_p2;
wire   [8:0] trunc_ln273_fu_2001_p1;
wire   [9:0] select_ln273_fu_1979_p3;
wire   [17:0] add_ln281_fu_2017_p0;
wire   [17:0] add_ln281_fu_2017_p1;
reg   [50:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_pp0_stage23_subdone;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_pp0_stage25_subdone;
wire    ap_block_pp0_stage26_subdone;
wire    ap_block_pp0_stage27_subdone;
wire    ap_block_pp0_stage28_subdone;
wire    ap_block_pp0_stage29_subdone;
wire    ap_block_pp0_stage30_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 51'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 grp_sobel_fu_911_ap_start_reg = 1'b0;
#0 grp_nms_fu_918_ap_start_reg = 1'b0;
end

gsnh_gsnh_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
gsnh_control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .data(data),
    .out_r(out_r)
);

gsnh_gsnh_gmem0_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
gsnh_gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(data_read_reg_2051),
    .I_ARID(1'd0),
    .I_ARLEN(32'd262144),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(8'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

gsnh_gsnh_gmem1_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
gsnh_gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(gmem1_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(gmem1_addr_reg_2244),
    .I_AWID(1'd0),
    .I_AWLEN(32'd262144),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem1_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(select_ln292_reg_2284),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd1),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(gmem1_BREADY),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

gsnh_sobel_line_buf #(
    .DataWidth( 24 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
line_buf_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(line_buf_address0),
    .ce0(line_buf_ce0),
    .we0(line_buf_we0),
    .d0(empty_166_reg_2075),
    .q0(line_buf_q0),
    .address1(line_buf_address1),
    .ce1(line_buf_ce1),
    .we1(line_buf_we1),
    .d1(line_buf_d1)
);

gsnh_gsnh_gau_buf #(
    .DataWidth( 8 ),
    .AddressRange( 262144 ),
    .AddressWidth( 18 ))
gau_buf_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(gau_buf_address0),
    .ce0(gau_buf_ce0),
    .we0(gau_buf_we0),
    .d0(trunc_ln_reg_2239),
    .q0(gau_buf_q0)
);

gsnh_gsnh_gau_buf #(
    .DataWidth( 8 ),
    .AddressRange( 262144 ),
    .AddressWidth( 18 ))
sobel_buf_value_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sobel_buf_value_address0),
    .ce0(sobel_buf_value_ce0),
    .we0(sobel_buf_value_we0),
    .d0(grp_sobel_fu_911_out_value_d0),
    .q0(sobel_buf_value_q0)
);

gsnh_gsnh_gau_buf #(
    .DataWidth( 8 ),
    .AddressRange( 262144 ),
    .AddressWidth( 18 ))
sobel_buf_grad_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(sobel_buf_grad_address0),
    .ce0(sobel_buf_grad_ce0),
    .we0(sobel_buf_grad_we0),
    .d0(grp_sobel_fu_911_out_grad_d0),
    .q0(sobel_buf_grad_q0)
);

gsnh_gsnh_gau_buf #(
    .DataWidth( 8 ),
    .AddressRange( 262144 ),
    .AddressWidth( 18 ))
supp_buf_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(supp_buf_address0),
    .ce0(supp_buf_ce0),
    .we0(supp_buf_we0),
    .d0(grp_nms_fu_918_out_r_d0),
    .q0(supp_buf_q0)
);

gsnh_sobel grp_sobel_fu_911(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_sobel_fu_911_ap_start),
    .ap_done(grp_sobel_fu_911_ap_done),
    .ap_idle(grp_sobel_fu_911_ap_idle),
    .ap_ready(grp_sobel_fu_911_ap_ready),
    .data_address0(grp_sobel_fu_911_data_address0),
    .data_ce0(grp_sobel_fu_911_data_ce0),
    .data_q0(gau_buf_q0),
    .out_value_address0(grp_sobel_fu_911_out_value_address0),
    .out_value_ce0(grp_sobel_fu_911_out_value_ce0),
    .out_value_we0(grp_sobel_fu_911_out_value_we0),
    .out_value_d0(grp_sobel_fu_911_out_value_d0),
    .out_grad_address0(grp_sobel_fu_911_out_grad_address0),
    .out_grad_ce0(grp_sobel_fu_911_out_grad_ce0),
    .out_grad_we0(grp_sobel_fu_911_out_grad_we0),
    .out_grad_d0(grp_sobel_fu_911_out_grad_d0)
);

gsnh_nms grp_nms_fu_918(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_nms_fu_918_ap_start),
    .ap_done(grp_nms_fu_918_ap_done),
    .ap_idle(grp_nms_fu_918_ap_idle),
    .ap_ready(grp_nms_fu_918_ap_ready),
    .data_value_address0(grp_nms_fu_918_data_value_address0),
    .data_value_ce0(grp_nms_fu_918_data_value_ce0),
    .data_value_q0(sobel_buf_value_q0),
    .data_grad_address0(grp_nms_fu_918_data_grad_address0),
    .data_grad_ce0(grp_nms_fu_918_data_grad_ce0),
    .data_grad_q0(sobel_buf_grad_q0),
    .out_r_address0(grp_nms_fu_918_out_r_address0),
    .out_r_ce0(grp_nms_fu_918_out_r_ce0),
    .out_r_we0(grp_nms_fu_918_out_r_we0),
    .out_r_d0(grp_nms_fu_918_out_r_d0)
);

gsnh_gsnh_add_5ns_5ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
gsnh_add_5ns_5ns_5_1_1_U59(
    .din0(ap_phi_mux_empty_phi_fu_766_p4),
    .din1(5'd1),
    .dout(empty_154_fu_931_p2)
);

gsnh_gsnh_sub_5s_5ns_5_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 5 ),
    .din1_WIDTH( 5 ),
    .dout_WIDTH( 5 ))
gsnh_sub_5s_5ns_5_1_1_U60(
    .din0(5'd23),
    .din1(empty_160_fu_987_p1),
    .dout(empty_160_fu_987_p2)
);

gsnh_gsnh_add_19ns_19ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
gsnh_add_19ns_19ns_19_1_1_U61(
    .din0(indvar_flatten_reg_773),
    .din1(19'd1),
    .dout(add_ln31_fu_1699_p2)
);

gsnh_gsnh_add_10ns_10ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
gsnh_add_10ns_10ns_10_1_1_U62(
    .din0(10'd1),
    .din1(add_ln32_fu_1719_p1),
    .dout(add_ln32_fu_1719_p2)
);

gsnh_gsnh_add_10ns_10ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
gsnh_add_10ns_10ns_10_1_1_U63(
    .din0(10'd1),
    .din1(ap_phi_mux_yi_phi_fu_799_p4),
    .dout(add_ln31_1_fu_1729_p2)
);

gsnh_gsnh_add_18ns_18ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
gsnh_add_18ns_18ns_18_1_1_U64(
    .din0(add_ln44_fu_1777_p0),
    .din1(add_ln44_fu_1777_p1),
    .dout(add_ln44_fu_1777_p2)
);

gsnh_gsnh_add_10ns_10ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
gsnh_add_10ns_10ns_10_1_1_U65(
    .din0(add_ln62_fu_1840_p0),
    .din1(add_ln62_fu_1840_p1),
    .dout(add_ln62_fu_1840_p2)
);

gsnh_gsnh_add_10ns_10ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
gsnh_add_10ns_10ns_10_1_1_U66(
    .din0(add_ln62_3_fu_1846_p0),
    .din1(add_ln62_3_fu_1846_p1),
    .dout(add_ln62_3_fu_1846_p2)
);

gsnh_gsnh_add_9ns_9ns_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
gsnh_add_9ns_9ns_9_1_1_U67(
    .din0(add_ln62_4_fu_1852_p0),
    .din1(add_ln62_4_fu_1852_p1),
    .dout(add_ln62_4_fu_1852_p2)
);

gsnh_gsnh_add_11ns_11ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
gsnh_add_11ns_11ns_11_1_1_U68(
    .din0(add_ln62_1_fu_1894_p0),
    .din1(add_ln62_1_fu_1894_p1),
    .dout(add_ln62_1_fu_1894_p2)
);

gsnh_gsnh_add_10ns_10ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
gsnh_add_10ns_10ns_10_1_1_U69(
    .din0(add_ln62_5_fu_1916_p0),
    .din1(add_ln62_5_fu_1916_p1),
    .dout(add_ln62_5_fu_1916_p2)
);

gsnh_gsnh_add_11ns_11ns_11_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 11 ))
gsnh_add_11ns_11ns_11_1_1_U70(
    .din0(add_ln62_6_fu_1926_p0),
    .din1(add_ln62_6_fu_1926_p1),
    .dout(add_ln62_6_fu_1926_p2)
);

gsnh_gsnh_add_19ns_19ns_19_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 19 ),
    .din1_WIDTH( 19 ),
    .dout_WIDTH( 19 ))
gsnh_add_19ns_19ns_19_1_1_U71(
    .din0(indvar_flatten10_reg_878),
    .din1(19'd1),
    .dout(add_ln273_fu_1967_p2)
);

gsnh_gsnh_add_10ns_10ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
gsnh_add_10ns_10ns_10_1_1_U72(
    .din0(10'd1),
    .din1(ap_phi_mux_yi_1_phi_fu_893_p4),
    .dout(add_ln273_1_fu_1987_p2)
);

gsnh_gsnh_add_18ns_18ns_18_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 18 ),
    .din1_WIDTH( 18 ),
    .dout_WIDTH( 18 ))
gsnh_add_18ns_18ns_18_1_1_U73(
    .din0(add_ln281_fu_2017_p0),
    .din1(add_ln281_fu_2017_p1),
    .dout(add_ln281_fu_2017_p2)
);

gsnh_gsnh_add_10ns_10ns_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
gsnh_add_10ns_10ns_10_1_1_U74(
    .din0(10'd1),
    .din1(select_ln273_fu_1979_p3),
    .dout(add_ln274_fu_2023_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage31_subdone) & (1'b1 == ap_CS_fsm_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp1_flush_enable)) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter2_state44)) begin
                ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if ((1'b1 == ap_CS_fsm_state41)) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state51) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((~((grp_nms_fu_918_ap_done == 1'b0) | (gmem1_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state50))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state51)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state51);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end else if ((~((grp_nms_fu_918_ap_done == 1'b0) | (gmem1_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state50))) begin
            ap_enable_reg_pp2_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_nms_fu_918_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state49)) begin
            grp_nms_fu_918_ap_start_reg <= 1'b1;
        end else if ((grp_nms_fu_918_ap_ready == 1'b1)) begin
            grp_nms_fu_918_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_sobel_fu_911_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state47)) begin
            grp_sobel_fu_911_ap_start_reg <= 1'b1;
        end else if ((grp_sobel_fu_911_ap_ready == 1'b1)) begin
            grp_sobel_fu_911_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond4012_reg_2056 == 1'd0))) begin
        empty_reg_762 <= empty_154_reg_2060;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_762 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln273_fu_1961_p2 == 1'd0))) begin
        indvar_flatten10_reg_878 <= add_ln273_fu_1967_p2;
    end else if ((~((grp_nms_fu_918_ap_done == 1'b0) | (gmem1_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state50))) begin
        indvar_flatten10_reg_878 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln31_fu_1693_p2 == 1'd0))) begin
        indvar_flatten_reg_773 <= add_ln31_fu_1699_p2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        indvar_flatten_reg_773 <= 19'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0))) begin
        window_buf_0_1_1_reg_866 <= window_buf_0_1_reg_854;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        window_buf_0_1_1_reg_866 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0))) begin
        window_buf_0_1_reg_854 <= window_buf_0_2_reg_2202;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        window_buf_0_1_reg_854 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0))) begin
        window_buf_1_1_1_reg_842 <= window_buf_1_1_reg_830;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        window_buf_1_1_1_reg_842 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0))) begin
        window_buf_1_1_reg_830 <= window_buf_1_2_reg_2208;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        window_buf_1_1_reg_830 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0))) begin
        window_buf_2_1_1_reg_818 <= window_buf_2_1_reg_806;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        window_buf_2_1_1_reg_818 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0))) begin
        window_buf_2_1_reg_806 <= window_buf_2_2_reg_2190_pp1_iter2_reg;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        window_buf_2_1_reg_806 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln273_fu_1961_p2 == 1'd0))) begin
        xi_1_reg_900 <= add_ln274_fu_2023_p2;
    end else if ((~((grp_nms_fu_918_ap_done == 1'b0) | (gmem1_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state50))) begin
        xi_1_reg_900 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln31_fu_1693_p2 == 1'd0))) begin
        xi_reg_784 <= add_ln32_fu_1719_p2;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        xi_reg_784 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln273_reg_2250 == 1'd0))) begin
        yi_1_reg_889 <= select_ln273_1_reg_2259;
    end else if ((~((grp_nms_fu_918_ap_done == 1'b0) | (gmem1_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state50))) begin
        yi_1_reg_889 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0))) begin
        yi_reg_795 <= select_ln31_1_reg_2197;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        yi_reg_795 <= 10'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln273_fu_1961_p2 == 1'd0))) begin
        add_ln281_reg_2264 <= add_ln281_fu_2017_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_reg_2159_pp1_iter1_reg == 1'd0))) begin
        add_ln44_reg_2214 <= add_ln44_fu_1777_p2;
        add_ln62_3_reg_2229 <= add_ln62_3_fu_1846_p2;
        add_ln62_4_reg_2234 <= add_ln62_4_fu_1852_p2;
        add_ln62_reg_2224 <= add_ln62_fu_1840_p2;
        tmp_19_reg_2219 <= {{line_buf_q0[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        add_ln44_reg_2214_pp1_iter3_reg <= add_ln44_reg_2214;
        icmp_ln31_reg_2159_pp1_iter2_reg <= icmp_ln31_reg_2159_pp1_iter1_reg;
        icmp_ln31_reg_2159_pp1_iter3_reg <= icmp_ln31_reg_2159_pp1_iter2_reg;
        line_buf_addr_128_reg_2184_pp1_iter2_reg <= line_buf_addr_128_reg_2184;
        window_buf_2_2_reg_2190_pp1_iter2_reg <= window_buf_2_2_reg_2190;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        data_read_reg_2051 <= data;
        out_read_reg_2046 <= out_r;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_154_reg_2060 <= empty_154_fu_931_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond4012_fu_925_p2 == 1'd0))) begin
        empty_155_reg_2065 <= empty_155_fu_937_p1;
        tmp_17_reg_2070 <= {{ap_phi_mux_empty_phi_fu_766_p4[4:3]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond4012_reg_2056 <= exitcond4012_fu_925_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        gmem1_addr_reg_2244 <= out_read_reg_2046;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln273_reg_2250 <= icmp_ln273_fu_1961_p2;
        icmp_ln273_reg_2250_pp2_iter1_reg <= icmp_ln273_reg_2250;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln273_reg_2250_pp2_iter2_reg <= icmp_ln273_reg_2250_pp2_iter1_reg;
        icmp_ln273_reg_2250_pp2_iter3_reg <= icmp_ln273_reg_2250_pp2_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln273_reg_2250_pp2_iter1_reg == 1'd0))) begin
        icmp_ln286_reg_2279 <= icmp_ln286_fu_2033_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln31_reg_2159 <= icmp_ln31_fu_1693_p2;
        icmp_ln31_reg_2159_pp1_iter1_reg <= icmp_ln31_reg_2159;
        icmp_ln32_reg_2168_pp1_iter1_reg <= icmp_ln32_reg_2168;
        select_ln31_reg_2173_pp1_iter1_reg <= select_ln31_reg_2173;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln31_fu_1693_p2 == 1'd0))) begin
        icmp_ln32_reg_2168 <= icmp_ln32_fu_1705_p2;
        select_ln31_reg_2173 <= select_ln31_fu_1711_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln31_reg_2159 == 1'd0))) begin
        line_buf_addr_128_reg_2184 <= zext_ln32_fu_1725_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (exitcond4012_reg_2056 == 1'd0))) begin
        mask_reg_2147 <= mask_fu_1048_p2;
        tmp_s_reg_2081[8 : 6] <= tmp_s_fu_1033_p3[8 : 6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln273_fu_1961_p2 == 1'd0))) begin
        select_ln273_1_reg_2259 <= select_ln273_1_fu_1993_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln273_reg_2250_pp2_iter2_reg == 1'd0))) begin
        select_ln292_reg_2284 <= select_ln292_fu_2039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter1_reg == 1'd0))) begin
        select_ln31_1_reg_2197 <= select_ln31_1_fu_1735_p3;
        window_buf_0_2_reg_2202 <= {{line_buf_q0[15:8]}};
        window_buf_1_2_reg_2208 <= {{line_buf_q0[23:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0))) begin
        trunc_ln_reg_2239 <= {{add_ln62_7_fu_1936_p2[11:4]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln31_reg_2159 == 1'd0))) begin
        window_buf_2_2_reg_2190 <= gmem0_RDATA;
    end
end

always @ (*) begin
    if ((exitcond4012_fu_925_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_condition_pp1_exit_iter2_state44 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter2_state44 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln31_fu_1693_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_condition_pp1_flush_enable = 1'b1;
    end else begin
        ap_condition_pp1_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln273_fu_1961_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state51 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state51 = 1'b0;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond4012_reg_2056 == 1'd0))) begin
        ap_phi_mux_empty_phi_fu_766_p4 = empty_154_reg_2060;
    end else begin
        ap_phi_mux_empty_phi_fu_766_p4 = empty_reg_762;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_window_buf_0_1_1_phi_fu_870_p4 = window_buf_0_1_reg_854;
    end else begin
        ap_phi_mux_window_buf_0_1_1_phi_fu_870_p4 = window_buf_0_1_1_reg_866;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_window_buf_0_1_phi_fu_858_p4 = window_buf_0_2_reg_2202;
    end else begin
        ap_phi_mux_window_buf_0_1_phi_fu_858_p4 = window_buf_0_1_reg_854;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_window_buf_1_1_1_phi_fu_846_p4 = window_buf_1_1_reg_830;
    end else begin
        ap_phi_mux_window_buf_1_1_1_phi_fu_846_p4 = window_buf_1_1_1_reg_842;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_window_buf_2_1_1_phi_fu_822_p4 = window_buf_2_1_reg_806;
    end else begin
        ap_phi_mux_window_buf_2_1_1_phi_fu_822_p4 = window_buf_2_1_1_reg_818;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_window_buf_2_1_phi_fu_810_p4 = window_buf_2_2_reg_2190_pp1_iter2_reg;
    end else begin
        ap_phi_mux_window_buf_2_1_phi_fu_810_p4 = window_buf_2_1_reg_806;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln273_reg_2250 == 1'd0))) begin
        ap_phi_mux_yi_1_phi_fu_893_p4 = select_ln273_1_reg_2259;
    end else begin
        ap_phi_mux_yi_1_phi_fu_893_p4 = yi_1_reg_889;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_yi_phi_fu_799_p4 = select_ln31_1_reg_2197;
    end else begin
        ap_phi_mux_yi_phi_fu_799_p4 = yi_reg_795;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        gau_buf_address0 = zext_ln44_fu_1952_p1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        gau_buf_address0 = grp_sobel_fu_911_data_address0;
    end else begin
        gau_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        gau_buf_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        gau_buf_ce0 = grp_sobel_fu_911_data_ce0;
    end else begin
        gau_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter3_reg == 1'd0))) begin
        gau_buf_we0 = 1'b1;
    end else begin
        gau_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
        gmem0_ARVALID = 1'b1;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln31_reg_2159 == 1'd0))) begin
        gmem0_RREADY = 1'b1;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln31_reg_2159 == 1'd0) & (1'b0 == ap_block_pp1_stage0))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_nms_fu_918_ap_done == 1'b0) | (gmem1_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state50))) begin
        gmem1_AWVALID = 1'b1;
    end else begin
        gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
        gmem1_BREADY = 1'b1;
    end else begin
        gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln273_reg_2250_pp2_iter3_reg == 1'd0))) begin
        gmem1_WVALID = 1'b1;
    end else begin
        gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        gmem1_blk_n_AW = m_axi_gmem1_AWREADY;
    end else begin
        gmem1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        gmem1_blk_n_B = m_axi_gmem1_BVALID;
    end else begin
        gmem1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter4 == 1'b1) & (icmp_ln273_reg_2250_pp2_iter3_reg == 1'd0))) begin
        gmem1_blk_n_W = m_axi_gmem1_WREADY;
    end else begin
        gmem1_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        line_buf_address0 = zext_ln32_fu_1725_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buf_address0 = p_cast75_fu_1672_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31))) begin
        line_buf_address0 = p_cast73_fu_1652_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30))) begin
        line_buf_address0 = p_cast71_fu_1632_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29))) begin
        line_buf_address0 = p_cast69_fu_1612_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28))) begin
        line_buf_address0 = p_cast67_fu_1592_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27))) begin
        line_buf_address0 = p_cast65_fu_1572_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26))) begin
        line_buf_address0 = p_cast63_fu_1552_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25))) begin
        line_buf_address0 = p_cast61_fu_1532_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
        line_buf_address0 = p_cast59_fu_1512_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
        line_buf_address0 = p_cast57_fu_1492_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
        line_buf_address0 = p_cast55_fu_1472_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
        line_buf_address0 = p_cast53_fu_1452_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        line_buf_address0 = p_cast51_fu_1432_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        line_buf_address0 = p_cast49_fu_1412_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        line_buf_address0 = p_cast47_fu_1392_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        line_buf_address0 = p_cast45_fu_1372_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
        line_buf_address0 = p_cast43_fu_1352_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        line_buf_address0 = p_cast41_fu_1332_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        line_buf_address0 = p_cast39_fu_1312_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast37_fu_1292_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast35_fu_1272_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast33_fu_1252_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast31_fu_1232_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast29_fu_1212_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast27_fu_1192_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast25_fu_1172_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast23_fu_1152_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast21_fu_1132_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast19_fu_1112_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast17_fu_1092_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast15_fu_1072_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address0 = p_cast11_fu_1040_p1;
    end else begin
        line_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        line_buf_address1 = line_buf_addr_128_reg_2184_pp1_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buf_address1 = p_cast76_fu_1682_p1;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31))) begin
        line_buf_address1 = p_cast74_fu_1662_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30))) begin
        line_buf_address1 = p_cast72_fu_1642_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29))) begin
        line_buf_address1 = p_cast70_fu_1622_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28))) begin
        line_buf_address1 = p_cast68_fu_1602_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27))) begin
        line_buf_address1 = p_cast66_fu_1582_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26))) begin
        line_buf_address1 = p_cast64_fu_1562_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25))) begin
        line_buf_address1 = p_cast62_fu_1542_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24))) begin
        line_buf_address1 = p_cast60_fu_1522_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23))) begin
        line_buf_address1 = p_cast58_fu_1502_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22))) begin
        line_buf_address1 = p_cast56_fu_1482_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21))) begin
        line_buf_address1 = p_cast54_fu_1462_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20))) begin
        line_buf_address1 = p_cast52_fu_1442_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19))) begin
        line_buf_address1 = p_cast50_fu_1422_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18))) begin
        line_buf_address1 = p_cast48_fu_1402_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17))) begin
        line_buf_address1 = p_cast46_fu_1382_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16))) begin
        line_buf_address1 = p_cast44_fu_1362_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15))) begin
        line_buf_address1 = p_cast42_fu_1342_p1;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14))) begin
        line_buf_address1 = p_cast40_fu_1322_p1;
    end else if (((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast38_fu_1302_p1;
    end else if (((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast36_fu_1282_p1;
    end else if (((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast34_fu_1262_p1;
    end else if (((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast32_fu_1242_p1;
    end else if (((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast30_fu_1222_p1;
    end else if (((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast28_fu_1202_p1;
    end else if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast26_fu_1182_p1;
    end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast24_fu_1162_p1;
    end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast22_fu_1142_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast20_fu_1122_p1;
    end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast18_fu_1102_p1;
    end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast16_fu_1082_p1;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        line_buf_address1 = p_cast14_fu_1062_p1;
    end else begin
        line_buf_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)))) begin
        line_buf_ce0 = 1'b1;
    end else begin
        line_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31_11001)) | ((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        line_buf_ce1 = 1'b1;
    end else begin
        line_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter3 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        line_buf_d1 = tmp_20_fu_1858_p3;
    end else if ((((1'b0 == ap_block_pp0_stage13) & (1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage12) & (1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage11) & (1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage10) & (1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage9) & (1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage8) & (1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage31)) | ((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        line_buf_d1 = empty_166_reg_2075;
    end else begin
        line_buf_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage30_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage29_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage28_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond4012_reg_2056 == 1'd0)))) begin
        line_buf_we0 = mask_reg_2147;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0))) begin
        line_buf_we0 = mask_fu_1048_p2;
    end else begin
        line_buf_we0 = 3'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1) & (icmp_ln31_reg_2159_pp1_iter2_reg == 1'd0))) begin
        line_buf_we1 = 3'd7;
    end else if ((((1'b1 == ap_CS_fsm_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage31_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage30) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage30_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage29) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage29_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage28) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage28_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage27) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage27_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage26) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage26_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage25) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage25_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage24_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage23_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage22_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage21_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage20_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage19_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage18_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage17_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (exitcond4012_reg_2056 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (exitcond4012_reg_2056 == 1'd0)))) begin
        line_buf_we1 = mask_reg_2147;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (exitcond4012_reg_2056 == 1'd0))) begin
        line_buf_we1 = mask_fu_1048_p2;
    end else begin
        line_buf_we1 = 3'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        sobel_buf_grad_address0 = grp_nms_fu_918_data_grad_address0;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        sobel_buf_grad_address0 = grp_sobel_fu_911_out_grad_address0;
    end else begin
        sobel_buf_grad_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        sobel_buf_grad_ce0 = grp_nms_fu_918_data_grad_ce0;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        sobel_buf_grad_ce0 = grp_sobel_fu_911_out_grad_ce0;
    end else begin
        sobel_buf_grad_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        sobel_buf_grad_we0 = grp_sobel_fu_911_out_grad_we0;
    end else begin
        sobel_buf_grad_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        sobel_buf_value_address0 = grp_nms_fu_918_data_value_address0;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        sobel_buf_value_address0 = grp_sobel_fu_911_out_value_address0;
    end else begin
        sobel_buf_value_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        sobel_buf_value_ce0 = grp_nms_fu_918_data_value_ce0;
    end else if ((1'b1 == ap_CS_fsm_state48)) begin
        sobel_buf_value_ce0 = grp_sobel_fu_911_out_value_ce0;
    end else begin
        sobel_buf_value_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        sobel_buf_value_we0 = grp_sobel_fu_911_out_value_we0;
    end else begin
        sobel_buf_value_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        supp_buf_address0 = zext_ln281_fu_2029_p1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        supp_buf_address0 = grp_nms_fu_918_out_r_address0;
    end else begin
        supp_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        supp_buf_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        supp_buf_ce0 = grp_nms_fu_918_out_r_ce0;
    end else begin
        supp_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        supp_buf_we0 = grp_nms_fu_918_out_r_we0;
    end else begin
        supp_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond4012_fu_925_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond4012_fu_925_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        ap_ST_fsm_state35 : begin
            if (((gmem0_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)) & ~((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter4 == 1'b1)) | ((ap_enable_reg_pp1_iter3 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter2 == 1'b1) & (ap_enable_reg_pp1_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            if (((grp_sobel_fu_911_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state48))) begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            if ((~((grp_nms_fu_918_ap_done == 1'b0) | (gmem1_AWREADY == 1'b0)) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln273_fu_1961_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) & ~((ap_enable_reg_pp2_iter3 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter1 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln273_fu_1961_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1)) | ((ap_enable_reg_pp2_iter3 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter4 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state56;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            if (((gmem1_BVALID == 1'b1) & (1'b1 == ap_CS_fsm_state60))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state60;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln281_fu_2017_p0 = select_ln273_fu_1979_p3;

assign add_ln281_fu_2017_p1 = {{trunc_ln273_fu_2001_p1}, {9'd0}};

assign add_ln32_fu_1719_p1 = ((icmp_ln32_fu_1705_p2[0:0] === 1'b1) ? 10'd0 : xi_reg_784);

assign add_ln44_fu_1777_p0 = select_ln31_reg_2173_pp1_iter1_reg;

assign add_ln44_fu_1777_p1 = {{trunc_ln31_fu_1742_p1}, {9'd0}};

assign add_ln62_1_fu_1894_p0 = shl_ln62_2_fu_1868_p3;

assign add_ln62_1_fu_1894_p1 = shl_ln62_3_fu_1880_p3;

assign add_ln62_2_fu_1904_p2 = (zext_ln62_10_fu_1900_p1 + zext_ln62_9_fu_1891_p1);

assign add_ln62_3_fu_1846_p0 = shl_ln62_4_fu_1825_p3;

assign add_ln62_3_fu_1846_p1 = ap_phi_mux_window_buf_0_1_1_phi_fu_870_p4;

assign add_ln62_4_fu_1852_p0 = ap_phi_mux_window_buf_2_1_1_phi_fu_822_p4;

assign add_ln62_4_fu_1852_p1 = window_buf_2_2_reg_2190;

assign add_ln62_5_fu_1916_p0 = add_ln62_4_reg_2234;

assign add_ln62_5_fu_1916_p1 = window_buf_0_2_reg_2202;

assign add_ln62_6_fu_1926_p0 = add_ln62_5_fu_1916_p2;

assign add_ln62_6_fu_1926_p1 = add_ln62_3_reg_2229;

assign add_ln62_7_fu_1936_p2 = (zext_ln62_14_fu_1932_p1 + add_ln62_2_fu_1904_p2);

assign add_ln62_fu_1840_p0 = shl_ln_fu_1797_p3;

assign add_ln62_fu_1840_p1 = shl_ln62_1_fu_1809_p3;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd50];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage25_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage26_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage27_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage28_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage29_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage31_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln31_reg_2159 == 1'd0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((gmem0_RVALID == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln31_reg_2159 == 1'd0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((1'b1 == ap_block_state55_io) & (ap_enable_reg_pp2_iter4 == 1'b1));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((1'b1 == ap_block_state55_io) & (ap_enable_reg_pp2_iter4 == 1'b1));
end

assign ap_block_state10_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage25_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage26_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage27_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage28_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage29_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage30_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage31_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state43_pp1_stage0_iter1 = ((gmem0_RVALID == 1'b0) & (icmp_ln31_reg_2159 == 1'd0));
end

assign ap_block_state44_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state55_io = ((gmem1_WREADY == 1'b0) & (icmp_ln273_reg_2250_pp2_iter3_reg == 1'd0));
end

assign ap_block_state55_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_155_fu_937_p1 = ap_phi_mux_empty_phi_fu_766_p4[2:0];

assign empty_156_fu_959_p2 = (ap_phi_mux_empty_phi_fu_766_p4 | 5'd7);

assign empty_157_fu_965_p2 = ((tmp_18_fu_951_p3 > empty_156_fu_959_p2) ? 1'b1 : 1'b0);

assign empty_159_fu_979_p3 = ((empty_157_fu_965_p2[0:0] === 1'b1) ? empty_156_fu_959_p2 : tmp_18_fu_951_p3);

assign empty_160_fu_987_p1 = ((empty_157_fu_965_p2[0:0] === 1'b1) ? tmp_18_fu_951_p3 : empty_156_fu_959_p2);

assign empty_161_fu_993_p1 = empty_159_fu_979_p3;

assign empty_162_fu_997_p1 = empty_160_fu_987_p2;

assign empty_163_fu_1001_p3 = ((empty_157_fu_965_p2[0:0] === 1'b1) ? 24'd0 : 24'd0);

assign empty_164_fu_1009_p2 = 24'd16777215 << empty_161_fu_993_p1;

assign empty_165_fu_1015_p2 = 24'd16777215 >> empty_162_fu_997_p1;

assign empty_166_fu_1027_p2 = (p_demorgan_fu_1021_p2 & empty_163_fu_1001_p3);

assign empty_167_fu_1045_p1 = tmp_17_reg_2070;

assign empty_168_fu_1056_p2 = (tmp_s_fu_1033_p3 | 9'd1);

assign empty_169_fu_1067_p2 = (tmp_s_reg_2081 | 9'd2);

assign empty_170_fu_1077_p2 = (tmp_s_reg_2081 | 9'd3);

assign empty_171_fu_1087_p2 = (tmp_s_reg_2081 | 9'd4);

assign empty_172_fu_1097_p2 = (tmp_s_reg_2081 | 9'd5);

assign empty_173_fu_1107_p2 = (tmp_s_reg_2081 | 9'd6);

assign empty_174_fu_1117_p2 = (tmp_s_reg_2081 | 9'd7);

assign empty_175_fu_1127_p2 = (tmp_s_reg_2081 | 9'd8);

assign empty_176_fu_1137_p2 = (tmp_s_reg_2081 | 9'd9);

assign empty_177_fu_1147_p2 = (tmp_s_reg_2081 | 9'd10);

assign empty_178_fu_1157_p2 = (tmp_s_reg_2081 | 9'd11);

assign empty_179_fu_1167_p2 = (tmp_s_reg_2081 | 9'd12);

assign empty_180_fu_1177_p2 = (tmp_s_reg_2081 | 9'd13);

assign empty_181_fu_1187_p2 = (tmp_s_reg_2081 | 9'd14);

assign empty_182_fu_1197_p2 = (tmp_s_reg_2081 | 9'd15);

assign empty_183_fu_1207_p2 = (tmp_s_reg_2081 | 9'd16);

assign empty_184_fu_1217_p2 = (tmp_s_reg_2081 | 9'd17);

assign empty_185_fu_1227_p2 = (tmp_s_reg_2081 | 9'd18);

assign empty_186_fu_1237_p2 = (tmp_s_reg_2081 | 9'd19);

assign empty_187_fu_1247_p2 = (tmp_s_reg_2081 | 9'd20);

assign empty_188_fu_1257_p2 = (tmp_s_reg_2081 | 9'd21);

assign empty_189_fu_1267_p2 = (tmp_s_reg_2081 | 9'd22);

assign empty_190_fu_1277_p2 = (tmp_s_reg_2081 | 9'd23);

assign empty_191_fu_1287_p2 = (tmp_s_reg_2081 | 9'd24);

assign empty_192_fu_1297_p2 = (tmp_s_reg_2081 | 9'd25);

assign empty_193_fu_1307_p2 = (tmp_s_reg_2081 | 9'd26);

assign empty_194_fu_1317_p2 = (tmp_s_reg_2081 | 9'd27);

assign empty_195_fu_1327_p2 = (tmp_s_reg_2081 | 9'd28);

assign empty_196_fu_1337_p2 = (tmp_s_reg_2081 | 9'd29);

assign empty_197_fu_1347_p2 = (tmp_s_reg_2081 | 9'd30);

assign empty_198_fu_1357_p2 = (tmp_s_reg_2081 | 9'd31);

assign empty_199_fu_1367_p2 = (tmp_s_reg_2081 | 9'd32);

assign empty_200_fu_1377_p2 = (tmp_s_reg_2081 | 9'd33);

assign empty_201_fu_1387_p2 = (tmp_s_reg_2081 | 9'd34);

assign empty_202_fu_1397_p2 = (tmp_s_reg_2081 | 9'd35);

assign empty_203_fu_1407_p2 = (tmp_s_reg_2081 | 9'd36);

assign empty_204_fu_1417_p2 = (tmp_s_reg_2081 | 9'd37);

assign empty_205_fu_1427_p2 = (tmp_s_reg_2081 | 9'd38);

assign empty_206_fu_1437_p2 = (tmp_s_reg_2081 | 9'd39);

assign empty_207_fu_1447_p2 = (tmp_s_reg_2081 | 9'd40);

assign empty_208_fu_1457_p2 = (tmp_s_reg_2081 | 9'd41);

assign empty_209_fu_1467_p2 = (tmp_s_reg_2081 | 9'd42);

assign empty_210_fu_1477_p2 = (tmp_s_reg_2081 | 9'd43);

assign empty_211_fu_1487_p2 = (tmp_s_reg_2081 | 9'd44);

assign empty_212_fu_1497_p2 = (tmp_s_reg_2081 | 9'd45);

assign empty_213_fu_1507_p2 = (tmp_s_reg_2081 | 9'd46);

assign empty_214_fu_1517_p2 = (tmp_s_reg_2081 | 9'd47);

assign empty_215_fu_1527_p2 = (tmp_s_reg_2081 | 9'd48);

assign empty_216_fu_1537_p2 = (tmp_s_reg_2081 | 9'd49);

assign empty_217_fu_1547_p2 = (tmp_s_reg_2081 | 9'd50);

assign empty_218_fu_1557_p2 = (tmp_s_reg_2081 | 9'd51);

assign empty_219_fu_1567_p2 = (tmp_s_reg_2081 | 9'd52);

assign empty_220_fu_1577_p2 = (tmp_s_reg_2081 | 9'd53);

assign empty_221_fu_1587_p2 = (tmp_s_reg_2081 | 9'd54);

assign empty_222_fu_1597_p2 = (tmp_s_reg_2081 | 9'd55);

assign empty_223_fu_1607_p2 = (tmp_s_reg_2081 | 9'd56);

assign empty_224_fu_1617_p2 = (tmp_s_reg_2081 | 9'd57);

assign empty_225_fu_1627_p2 = (tmp_s_reg_2081 | 9'd58);

assign empty_226_fu_1637_p2 = (tmp_s_reg_2081 | 9'd59);

assign empty_227_fu_1647_p2 = (tmp_s_reg_2081 | 9'd60);

assign empty_228_fu_1657_p2 = (tmp_s_reg_2081 | 9'd61);

assign empty_229_fu_1667_p2 = (tmp_s_reg_2081 | 9'd62);

assign empty_230_fu_1677_p2 = (tmp_s_reg_2081 | 9'd63);

assign exitcond4012_fu_925_p2 = ((ap_phi_mux_empty_phi_fu_766_p4 == 5'd24) ? 1'b1 : 1'b0);

assign grp_nms_fu_918_ap_start = grp_nms_fu_918_ap_start_reg;

assign grp_sobel_fu_911_ap_start = grp_sobel_fu_911_ap_start_reg;

assign icmp_ln273_fu_1961_p2 = ((indvar_flatten10_reg_878 == 19'd262144) ? 1'b1 : 1'b0);

assign icmp_ln274_fu_1973_p2 = ((xi_1_reg_900 == 10'd512) ? 1'b1 : 1'b0);

assign icmp_ln286_fu_2033_p2 = ((supp_buf_q0 > 8'd50) ? 1'b1 : 1'b0);

assign icmp_ln31_fu_1693_p2 = ((indvar_flatten_reg_773 == 19'd262144) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_1705_p2 = ((xi_reg_784 == 10'd512) ? 1'b1 : 1'b0);

assign mask_fu_1048_p2 = 3'd1 << empty_167_fu_1045_p1;

assign p_cast11_fu_1040_p1 = tmp_s_fu_1033_p3;

assign p_cast14_fu_1062_p1 = empty_168_fu_1056_p2;

assign p_cast15_fu_1072_p1 = empty_169_fu_1067_p2;

assign p_cast16_fu_1082_p1 = empty_170_fu_1077_p2;

assign p_cast17_fu_1092_p1 = empty_171_fu_1087_p2;

assign p_cast18_fu_1102_p1 = empty_172_fu_1097_p2;

assign p_cast19_fu_1112_p1 = empty_173_fu_1107_p2;

assign p_cast20_fu_1122_p1 = empty_174_fu_1117_p2;

assign p_cast21_fu_1132_p1 = empty_175_fu_1127_p2;

assign p_cast22_fu_1142_p1 = empty_176_fu_1137_p2;

assign p_cast23_fu_1152_p1 = empty_177_fu_1147_p2;

assign p_cast24_fu_1162_p1 = empty_178_fu_1157_p2;

assign p_cast25_fu_1172_p1 = empty_179_fu_1167_p2;

assign p_cast26_fu_1182_p1 = empty_180_fu_1177_p2;

assign p_cast27_fu_1192_p1 = empty_181_fu_1187_p2;

assign p_cast28_fu_1202_p1 = empty_182_fu_1197_p2;

assign p_cast29_fu_1212_p1 = empty_183_fu_1207_p2;

assign p_cast30_fu_1222_p1 = empty_184_fu_1217_p2;

assign p_cast31_fu_1232_p1 = empty_185_fu_1227_p2;

assign p_cast32_fu_1242_p1 = empty_186_fu_1237_p2;

assign p_cast33_fu_1252_p1 = empty_187_fu_1247_p2;

assign p_cast34_fu_1262_p1 = empty_188_fu_1257_p2;

assign p_cast35_fu_1272_p1 = empty_189_fu_1267_p2;

assign p_cast36_fu_1282_p1 = empty_190_fu_1277_p2;

assign p_cast37_fu_1292_p1 = empty_191_fu_1287_p2;

assign p_cast38_fu_1302_p1 = empty_192_fu_1297_p2;

assign p_cast39_fu_1312_p1 = empty_193_fu_1307_p2;

assign p_cast40_fu_1322_p1 = empty_194_fu_1317_p2;

assign p_cast41_fu_1332_p1 = empty_195_fu_1327_p2;

assign p_cast42_fu_1342_p1 = empty_196_fu_1337_p2;

assign p_cast43_fu_1352_p1 = empty_197_fu_1347_p2;

assign p_cast44_fu_1362_p1 = empty_198_fu_1357_p2;

assign p_cast45_fu_1372_p1 = empty_199_fu_1367_p2;

assign p_cast46_fu_1382_p1 = empty_200_fu_1377_p2;

assign p_cast47_fu_1392_p1 = empty_201_fu_1387_p2;

assign p_cast48_fu_1402_p1 = empty_202_fu_1397_p2;

assign p_cast49_fu_1412_p1 = empty_203_fu_1407_p2;

assign p_cast50_fu_1422_p1 = empty_204_fu_1417_p2;

assign p_cast51_fu_1432_p1 = empty_205_fu_1427_p2;

assign p_cast52_fu_1442_p1 = empty_206_fu_1437_p2;

assign p_cast53_fu_1452_p1 = empty_207_fu_1447_p2;

assign p_cast54_fu_1462_p1 = empty_208_fu_1457_p2;

assign p_cast55_fu_1472_p1 = empty_209_fu_1467_p2;

assign p_cast56_fu_1482_p1 = empty_210_fu_1477_p2;

assign p_cast57_fu_1492_p1 = empty_211_fu_1487_p2;

assign p_cast58_fu_1502_p1 = empty_212_fu_1497_p2;

assign p_cast59_fu_1512_p1 = empty_213_fu_1507_p2;

assign p_cast60_fu_1522_p1 = empty_214_fu_1517_p2;

assign p_cast61_fu_1532_p1 = empty_215_fu_1527_p2;

assign p_cast62_fu_1542_p1 = empty_216_fu_1537_p2;

assign p_cast63_fu_1552_p1 = empty_217_fu_1547_p2;

assign p_cast64_fu_1562_p1 = empty_218_fu_1557_p2;

assign p_cast65_fu_1572_p1 = empty_219_fu_1567_p2;

assign p_cast66_fu_1582_p1 = empty_220_fu_1577_p2;

assign p_cast67_fu_1592_p1 = empty_221_fu_1587_p2;

assign p_cast68_fu_1602_p1 = empty_222_fu_1597_p2;

assign p_cast69_fu_1612_p1 = empty_223_fu_1607_p2;

assign p_cast70_fu_1622_p1 = empty_224_fu_1617_p2;

assign p_cast71_fu_1632_p1 = empty_225_fu_1627_p2;

assign p_cast72_fu_1642_p1 = empty_226_fu_1637_p2;

assign p_cast73_fu_1652_p1 = empty_227_fu_1647_p2;

assign p_cast74_fu_1662_p1 = empty_228_fu_1657_p2;

assign p_cast75_fu_1672_p1 = empty_229_fu_1667_p2;

assign p_cast76_fu_1682_p1 = empty_230_fu_1677_p2;

assign p_demorgan_fu_1021_p2 = (empty_165_fu_1015_p2 & empty_164_fu_1009_p2);

assign select_ln273_1_fu_1993_p3 = ((icmp_ln274_fu_1973_p2[0:0] === 1'b1) ? add_ln273_1_fu_1987_p2 : ap_phi_mux_yi_1_phi_fu_893_p4);

assign select_ln273_fu_1979_p3 = ((icmp_ln274_fu_1973_p2[0:0] === 1'b1) ? 10'd0 : xi_1_reg_900);

assign select_ln292_fu_2039_p3 = ((icmp_ln286_reg_2279[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln31_1_fu_1735_p3 = ((icmp_ln32_reg_2168_pp1_iter1_reg[0:0] === 1'b1) ? add_ln31_1_fu_1729_p2 : ap_phi_mux_yi_phi_fu_799_p4);

assign select_ln31_fu_1711_p3 = ((icmp_ln32_fu_1705_p2[0:0] === 1'b1) ? 10'd0 : xi_reg_784);

assign shl_ln62_1_fu_1809_p3 = {{ap_phi_mux_window_buf_1_1_1_phi_fu_846_p4}, {1'd0}};

assign shl_ln62_2_fu_1868_p3 = {{window_buf_1_1_reg_830}, {2'd0}};

assign shl_ln62_3_fu_1880_p3 = {{window_buf_1_2_reg_2208}, {1'd0}};

assign shl_ln62_4_fu_1825_p3 = {{ap_phi_mux_window_buf_2_1_phi_fu_810_p4}, {1'd0}};

assign shl_ln_fu_1797_p3 = {{ap_phi_mux_window_buf_0_1_phi_fu_858_p4}, {1'd0}};

assign tmp_17_fu_941_p4 = {{ap_phi_mux_empty_phi_fu_766_p4[4:3]}};

assign tmp_18_fu_951_p3 = {{tmp_17_fu_941_p4}, {3'd0}};

assign tmp_20_fu_1858_p3 = {{window_buf_2_2_reg_2190_pp1_iter2_reg}, {tmp_19_reg_2219}};

assign tmp_s_fu_1033_p3 = {{empty_155_reg_2065}, {6'd0}};

assign trunc_ln273_fu_2001_p1 = select_ln273_1_fu_1993_p3[8:0];

assign trunc_ln31_fu_1742_p1 = select_ln31_1_fu_1735_p3[8:0];

assign zext_ln281_fu_2029_p1 = add_ln281_reg_2264;

assign zext_ln32_fu_1725_p1 = select_ln31_reg_2173;

assign zext_ln44_fu_1952_p1 = add_ln44_reg_2214_pp1_iter3_reg;

assign zext_ln62_10_fu_1900_p1 = add_ln62_1_fu_1894_p2;

assign zext_ln62_14_fu_1932_p1 = add_ln62_6_fu_1926_p2;

assign zext_ln62_9_fu_1891_p1 = add_ln62_reg_2224;

always @ (posedge ap_clk) begin
    empty_166_reg_2075[23:0] <= 24'b000000000000000000000000;
    tmp_s_reg_2081[5:0] <= 6'b000000;
end

endmodule //gsnh_gsnh
