-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity gsn_sobel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    data_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    data_ce0 : OUT STD_LOGIC;
    data_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    out_0_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    out_0_ce0 : OUT STD_LOGIC;
    out_0_we0 : OUT STD_LOGIC;
    out_0_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_1_address0 : OUT STD_LOGIC_VECTOR (17 downto 0);
    out_1_ce0 : OUT STD_LOGIC;
    out_1_we0 : OUT STD_LOGIC;
    out_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of gsn_sobel is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv19_0 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_7FFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "01111111111111111111111111111111";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv11_600 : STD_LOGIC_VECTOR (10 downto 0) := "11000000000";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv24_FFFFFF : STD_LOGIC_VECTOR (23 downto 0) := "111111111111111111111111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv8_16 : STD_LOGIC_VECTOR (7 downto 0) := "00010110";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv10_1FC : STD_LOGIC_VECTOR (9 downto 0) := "0111111100";
    constant ap_const_lv19_40000 : STD_LOGIC_VECTOR (18 downto 0) := "1000000000000000000";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv10_200 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_6A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001101010";
    constant ap_const_lv32_26A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001001101010";
    constant ap_const_lv8_2D : STD_LOGIC_VECTOR (7 downto 0) := "00101101";
    constant ap_const_lv8_5A : STD_LOGIC_VECTOR (7 downto 0) := "01011010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv31_7FFFFD96 : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111110110010110";
    constant ap_const_lv28_FFFFF96 : STD_LOGIC_VECTOR (27 downto 0) := "1111111111111111111110010110";
    constant ap_const_lv28_6B : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000001101011";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal empty_reg_274 : STD_LOGIC_VECTOR (10 downto 0);
    signal indvar_flatten_reg_318 : STD_LOGIC_VECTOR (18 downto 0);
    signal yi_reg_329 : STD_LOGIC_VECTOR (9 downto 0);
    signal xi_reg_340 : STD_LOGIC_VECTOR (9 downto 0);
    signal window_buf_2_1_reg_351 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_1_3_reg_361 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_1_reg_371 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_1_3_reg_381 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_0_1_reg_391 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_0_1_3_reg_401 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond5216_fu_446_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal exitcond5216_reg_1438 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal empty_40_fu_452_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal empty_41_fu_458_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal empty_41_reg_1447 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_462_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_reg_1452 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_3_fu_472_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_3_reg_1457 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_42_fu_480_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_42_reg_1462 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_43_fu_486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_43_reg_1467 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_46_fu_500_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_46_reg_1473 : STD_LOGIC_VECTOR (4 downto 0);
    signal window_buf_0_1_0_load_reg_1514 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal window_buf_0_2_0_load_reg_1519 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_1_0_load_reg_1524 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_2_0_load_reg_1529 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_1_0_load_reg_1534 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_2_0_load_reg_1539 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_56_fu_588_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal next_mul_fu_594_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal exitcond5115_fu_582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idx_urem_fu_656_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln95_fu_692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state7_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_state9_pp2_stage0_iter2 : BOOLEAN;
    signal ap_block_state10_pp2_stage0_iter3 : BOOLEAN;
    signal ap_block_state11_pp2_stage0_iter4 : BOOLEAN;
    signal ap_block_state12_pp2_stage0_iter5 : BOOLEAN;
    signal ap_block_state13_pp2_stage0_iter6 : BOOLEAN;
    signal ap_block_state14_pp2_stage0_iter7 : BOOLEAN;
    signal ap_block_state15_pp2_stage0_iter8 : BOOLEAN;
    signal ap_block_state16_pp2_stage0_iter9 : BOOLEAN;
    signal ap_block_state17_pp2_stage0_iter10 : BOOLEAN;
    signal ap_block_state18_pp2_stage0_iter11 : BOOLEAN;
    signal ap_block_state19_pp2_stage0_iter12 : BOOLEAN;
    signal ap_block_state20_pp2_stage0_iter13 : BOOLEAN;
    signal ap_block_state21_pp2_stage0_iter14 : BOOLEAN;
    signal ap_block_state22_pp2_stage0_iter15 : BOOLEAN;
    signal ap_block_state23_pp2_stage0_iter16 : BOOLEAN;
    signal ap_block_state24_pp2_stage0_iter17 : BOOLEAN;
    signal ap_block_state25_pp2_stage0_iter18 : BOOLEAN;
    signal ap_block_state26_pp2_stage0_iter19 : BOOLEAN;
    signal ap_block_state27_pp2_stage0_iter20 : BOOLEAN;
    signal ap_block_state28_pp2_stage0_iter21 : BOOLEAN;
    signal ap_block_state29_pp2_stage0_iter22 : BOOLEAN;
    signal ap_block_state30_pp2_stage0_iter23 : BOOLEAN;
    signal ap_block_state31_pp2_stage0_iter24 : BOOLEAN;
    signal ap_block_state32_pp2_stage0_iter25 : BOOLEAN;
    signal ap_block_state33_pp2_stage0_iter26 : BOOLEAN;
    signal ap_block_state34_pp2_stage0_iter27 : BOOLEAN;
    signal ap_block_state35_pp2_stage0_iter28 : BOOLEAN;
    signal ap_block_state36_pp2_stage0_iter29 : BOOLEAN;
    signal ap_block_state37_pp2_stage0_iter30 : BOOLEAN;
    signal ap_block_state38_pp2_stage0_iter31 : BOOLEAN;
    signal ap_block_state39_pp2_stage0_iter32 : BOOLEAN;
    signal ap_block_state40_pp2_stage0_iter33 : BOOLEAN;
    signal ap_block_state41_pp2_stage0_iter34 : BOOLEAN;
    signal ap_block_state42_pp2_stage0_iter35 : BOOLEAN;
    signal ap_block_state43_pp2_stage0_iter36 : BOOLEAN;
    signal ap_block_state44_pp2_stage0_iter37 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal icmp_ln95_reg_1568_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln95_reg_1568_pp2_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln95_fu_698_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal select_ln95_1_fu_724_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln95_1_reg_1577 : STD_LOGIC_VECTOR (9 downto 0);
    signal line_buf_addr_1_reg_1582 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buf_addr_1_reg_1582_pp2_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buf_addr_1_reg_1582_pp2_iter2_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln109_fu_789_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln109_reg_1588 : STD_LOGIC_VECTOR (17 downto 0);
    signal or_ln174_2_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_2_reg_1593_pp2_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln96_fu_829_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln109_fu_835_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter2_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter20_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter21_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter22_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter23_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter24_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter25_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter26_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter27_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter28_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter29_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter30_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter31_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter32_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter33_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter34_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter35_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln109_reg_1604_pp2_iter36_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal window_buf_0_2_reg_1615 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp2_iter2 : STD_LOGIC := '0';
    signal window_buf_1_2_reg_1621 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_1_2_reg_1621_pp2_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_2_reg_1627 : STD_LOGIC_VECTOR (7 downto 0);
    signal window_buf_2_2_reg_1627_pp2_iter3_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_reg_1634 : STD_LOGIC_VECTOR (15 downto 0);
    signal window_buf_0_1_3_cast7_fu_869_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal window_buf_0_1_3_cast7_reg_1639 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_fu_873_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln_reg_1645 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln129_3_fu_881_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln129_3_reg_1650 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln129_3_reg_1650_pp2_iter3_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln129_fu_907_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln129_reg_1656 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln136_1_fu_934_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln136_1_reg_1661 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln136_1_fu_940_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln136_1_reg_1666 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln150_fu_972_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln150_reg_1671 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln150_reg_1671_pp2_iter5_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln150_reg_1671_pp2_iter6_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln150_reg_1671_pp2_iter7_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln150_1_fu_995_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln150_1_reg_1681 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln149_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_reg_1687_pp2_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln140_fu_1007_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal shl_ln2_fu_1010_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln2_reg_1697 : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln2_reg_1697_pp2_iter6_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln2_reg_1697_pp2_iter7_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln2_reg_1697_pp2_iter8_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln2_reg_1697_pp2_iter9_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal shl_ln2_reg_1697_pp2_iter10_reg : STD_LOGIC_VECTOR (18 downto 0);
    signal sext_ln150_1_fu_1021_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln150_1_reg_1710 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln150_1_reg_1710_pp2_iter6_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln150_1_reg_1710_pp2_iter7_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln150_1_reg_1710_pp2_iter8_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln150_1_reg_1710_pp2_iter9_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln150_1_reg_1710_pp2_iter10_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln136_fu_1036_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_1392_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal and_ln157_fu_1107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln157_reg_1740_pp2_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1414_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal add_ln140_reg_1754 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_enable_reg_pp2_iter9 : STD_LOGIC := '0';
    signal and_ln161_fu_1179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln161_reg_1764_pp2_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal x_assign_reg_1768 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln150_2_fu_1185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln165_fu_1207_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_441_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal f_reg_1783 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_s_reg_1788 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Result_s_reg_1788_pp2_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Repl2_s_fu_1236_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal p_Repl2_s_reg_1793 : STD_LOGIC_VECTOR (22 downto 0);
    signal isNeg_fu_1250_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal isNeg_reg_1798 : STD_LOGIC_VECTOR (0 downto 0);
    signal ush_fu_1268_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal ush_reg_1803 : STD_LOGIC_VECTOR (8 downto 0);
    signal val_V_fu_1330_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_V_reg_1808 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_fu_1342_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Val2_3_reg_1814 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_1819 : STD_LOGIC_VECTOR (23 downto 0);
    signal select_ln174_1_fu_1384_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln174_1_reg_1824 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter3 : STD_LOGIC := '0';
    signal ap_condition_pp2_exit_iter2_state9 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp2_iter37 : STD_LOGIC := '0';
    signal line_buf_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal line_buf_ce0 : STD_LOGIC;
    signal line_buf_we0 : STD_LOGIC_VECTOR (2 downto 0);
    signal line_buf_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buf_ce1 : STD_LOGIC;
    signal line_buf_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_54_reg_285 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal phi_mul_reg_296 : STD_LOGIC_VECTOR (7 downto 0);
    signal phi_urem_reg_307 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_yi_phi_fu_333_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal ap_phi_mux_window_buf_2_1_3_phi_fu_364_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_window_buf_1_1_3_phi_fu_384_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_window_buf_0_1_3_phi_fu_404_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter0_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter1_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter2_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter3_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter4_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter5_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter6_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter7_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter8_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter9_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter10_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter11_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter12_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter13_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter14_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter15_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter16_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter17_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter18_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter19_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter20_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter21_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter22_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter23_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter24_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter25_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter26_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter27_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter28_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter29_t_int_06368_reg_411 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp2_iter0_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter1_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter2_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter3_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter4_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter5_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter6_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter7_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter8_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter9_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter10_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter11_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter12_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter13_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter14_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter15_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter16_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter17_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter18_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter19_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter20_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter21_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter22_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter23_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter24_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter25_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter26_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter27_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter28_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter29_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp2_iter30_grad_sobel_reg_422 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast120_fu_506_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln96_fu_780_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_52_fu_547_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal mask_fu_557_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_885_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_438_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_44_fu_492_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_45_fu_510_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_47_fu_515_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_48_fu_519_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_50_fu_529_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_51_fu_535_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_49_fu_522_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_demorgan_fu_541_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal empty_53_fu_554_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal next_urem_fu_644_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_58_fu_650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_664_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_fu_674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp88_not_fu_680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln96_fu_704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln95_1_fu_718_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln95_fu_732_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_744_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp75_fu_754_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp88_not_mid1_fu_760_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_4_fu_766_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_1_fu_686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln95_fu_710_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln96_1_fu_785_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal p_mid2_fu_736_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal tmp_15_fu_795_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln174_1_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln174_fu_805_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln95_2_fu_772_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_fu_817_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln129_fu_892_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln129_fu_895_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln129_1_fu_904_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln129_fu_900_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1_fu_913_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln136_fu_925_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln136_fu_921_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln136_1_fu_930_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln129_1_fu_948_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln129_2_fu_955_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln129_1_fu_959_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln129_1_fu_964_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln129_4_fu_969_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln136_2_fu_978_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln136_fu_981_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln136_3_fu_986_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sub_ln136_1_fu_989_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1024_p0 : STD_LOGIC_VECTOR (19 downto 0);
    signal sext_ln157_1_fu_1046_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_1398_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_11_fu_1039_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln157_fu_1049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln157_1_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln157_3_fu_1074_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1406_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal icmp_ln157_2_fu_1077_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln157_3_fu_1088_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1067_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln157_fu_1082_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln157_1_fu_1093_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln157_fu_1059_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln157_1_fu_1099_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln161_1_fu_1130_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1422_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_13_fu_1123_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln161_fu_1133_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln161_1_fu_1138_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln161_3_fu_1158_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal grp_fu_1430_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal tmp_14_fu_1151_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln161_2_fu_1161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln161_3_fu_1166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln161_fu_1143_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln161_1_fu_1171_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1024_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln165_fu_1189_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln165_1_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln165_fu_1201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_s_fu_1215_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Repl2_1_fu_1226_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln340_fu_1240_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln340_fu_1244_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1311_fu_1258_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln1311_fu_1264_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_V_fu_1276_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sh_prom_i_i_i_cast_cast_cast_cast_cast_fu_1289_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_1285_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal sh_prom_i_i_i_cast_cast_cast_cast_cast_cast_fu_1292_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal r_V_fu_1296_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_9_fu_1308_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal r_V_1_fu_1302_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln662_fu_1316_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1320_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_V_1_fu_1337_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln174_fu_1366_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln143_fu_1358_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln174_3_fu_1379_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln174_fu_1371_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln176_fu_1363_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1392_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1392_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1398_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1406_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1414_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1414_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1422_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1430_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;
    signal ap_condition_961 : BOOLEAN;
    signal ap_condition_964 : BOOLEAN;
    signal ap_condition_920 : BOOLEAN;
    signal ap_condition_603 : BOOLEAN;

    component gsn_sitofp_32s_32_6_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gsn_fsqrt_32ns_32ns_32_17_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component gsn_sdiv_20s_11s_20_24_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (19 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component gsn_mul_mul_11s_11s_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component gsn_mul_mul_11s_11s_31_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (30 downto 0) );
    end component;


    component gsn_mul_mul_11s_8s_28_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component gsn_mac_muladd_11s_11s_22s_22_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (10 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component gsn_mul_mul_11s_8ns_28_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (27 downto 0) );
    end component;


    component gsn_gau6_line_buf IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC_VECTOR (2 downto 0);
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    line_buf_U : component gsn_gau6_line_buf
    generic map (
        DataWidth => 24,
        AddressRange => 512,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buf_address0,
        ce0 => line_buf_ce0,
        we0 => line_buf_we0,
        d0 => line_buf_d0,
        address1 => line_buf_addr_1_reg_1582,
        ce1 => line_buf_ce1,
        q1 => line_buf_q1);

    sitofp_32s_32_6_no_dsp_1_U7 : component gsn_sitofp_32s_32_6_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 6,
        din0_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_438_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_438_p1);

    fsqrt_32ns_32ns_32_17_no_dsp_1_U8 : component gsn_fsqrt_32ns_32ns_32_17_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 17,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => ap_const_lv32_0,
        din1 => x_assign_reg_1768,
        ce => ap_const_logic_1,
        dout => grp_fu_441_p2);

    sdiv_20s_11s_20_24_1_U9 : component gsn_sdiv_20s_11s_20_24_1
    generic map (
        ID => 1,
        NUM_STAGE => 24,
        din0_WIDTH => 20,
        din1_WIDTH => 11,
        dout_WIDTH => 20)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1024_p0,
        din1 => sub_ln150_reg_1671,
        ce => ap_const_logic_1,
        dout => grp_fu_1024_p2);

    mul_mul_11s_11s_22_4_1_U10 : component gsn_mul_mul_11s_11s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1392_p0,
        din1 => grp_fu_1392_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1392_p2);

    mul_mul_11s_11s_31_4_1_U11 : component gsn_mul_mul_11s_11s_31_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        dout_WIDTH => 31)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln150_reg_1671,
        din1 => grp_fu_1398_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1398_p2);

    mul_mul_11s_8s_28_4_1_U12 : component gsn_mul_mul_11s_8s_28_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln150_reg_1671,
        din1 => grp_fu_1406_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1406_p2);

    mac_muladd_11s_11s_22s_22_4_1_U13 : component gsn_mac_muladd_11s_11s_22s_22_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 11,
        din2_WIDTH => 22,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1414_p0,
        din1 => grp_fu_1414_p1,
        din2 => grp_fu_1392_p2,
        ce => ap_const_logic_1,
        dout => grp_fu_1414_p3);

    mul_mul_11s_8s_28_4_1_U14 : component gsn_mul_mul_11s_8s_28_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln150_reg_1671_pp2_iter7_reg,
        din1 => grp_fu_1422_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1422_p2);

    mul_mul_11s_8ns_28_4_1_U15 : component gsn_mul_mul_11s_8ns_28_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 11,
        din1_WIDTH => 8,
        dout_WIDTH => 28)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sub_ln150_reg_1671_pp2_iter7_reg,
        din1 => grp_fu_1430_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1430_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp2_flush_enable)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter10 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter11 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter12 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter13 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter14 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter15 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter16 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter17 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter18 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter19 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter20 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter21 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter22 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter23 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter24 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter24 <= ap_enable_reg_pp2_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter25 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter25 <= ap_enable_reg_pp2_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter26 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter26 <= ap_enable_reg_pp2_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter27 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter27 <= ap_enable_reg_pp2_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter28 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter28 <= ap_enable_reg_pp2_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter29 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter29 <= ap_enable_reg_pp2_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp2_exit_iter2_state9)) then 
                        ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter1;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter30 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter30 <= ap_enable_reg_pp2_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter31 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter31 <= ap_enable_reg_pp2_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter32 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter32 <= ap_enable_reg_pp2_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter33 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter33 <= ap_enable_reg_pp2_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter34 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter34 <= ap_enable_reg_pp2_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter35 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter35 <= ap_enable_reg_pp2_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter36 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter36 <= ap_enable_reg_pp2_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter37 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter37 <= ap_enable_reg_pp2_iter36;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_enable_reg_pp2_iter37 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter9 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp2_iter10_grad_sobel_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter9 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_961)) then 
                    ap_phi_reg_pp2_iter10_grad_sobel_reg_422 <= ap_const_lv8_87;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter10_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter9_grad_sobel_reg_422;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter29_grad_sobel_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter28 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_964)) then 
                    ap_phi_reg_pp2_iter29_grad_sobel_reg_422 <= ap_const_lv8_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter29_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter28_grad_sobel_reg_422;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter29_t_int_06368_reg_411_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter28 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_920)) then 
                    ap_phi_reg_pp2_iter29_t_int_06368_reg_411 <= sext_ln150_2_fu_1185_p1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter29_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter28_t_int_06368_reg_411;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter30_grad_sobel_reg_422_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter29 = ap_const_logic_1))) then
                if ((ap_const_boolean_1 = ap_condition_603)) then 
                    ap_phi_reg_pp2_iter30_grad_sobel_reg_422 <= select_ln165_fu_1207_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter30_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter29_grad_sobel_reg_422;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp2_iter6_t_int_06368_reg_411_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter5 = ap_const_logic_1))) then
                if (((icmp_ln149_reg_1687 = ap_const_lv1_1) and (icmp_ln95_reg_1568_pp2_iter4_reg = ap_const_lv1_0))) then 
                    ap_phi_reg_pp2_iter6_t_int_06368_reg_411 <= ap_const_lv32_7FFFFFFF;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp2_iter6_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter5_t_int_06368_reg_411;
                end if;
            end if; 
        end if;
    end process;

    empty_54_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                empty_54_reg_285 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond5115_fu_582_p2 = ap_const_lv1_0))) then 
                empty_54_reg_285 <= empty_56_fu_588_p2;
            end if; 
        end if;
    end process;

    empty_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond5216_fu_446_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                empty_reg_274 <= empty_40_fu_452_p2;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                empty_reg_274 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indvar_flatten_reg_318 <= ap_const_lv19_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln95_fu_692_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_318 <= add_ln95_fu_698_p2;
            end if; 
        end if;
    end process;

    phi_mul_reg_296_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_mul_reg_296 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond5115_fu_582_p2 = ap_const_lv1_0))) then 
                phi_mul_reg_296 <= next_mul_fu_594_p2;
            end if; 
        end if;
    end process;

    phi_urem_reg_307_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                phi_urem_reg_307 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond5115_fu_582_p2 = ap_const_lv1_0))) then 
                phi_urem_reg_307 <= idx_urem_fu_656_p3;
            end if; 
        end if;
    end process;

    window_buf_0_1_3_reg_401_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_0_1_3_reg_401 <= window_buf_0_1_0_load_reg_1514;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter2_reg = ap_const_lv1_0))) then 
                window_buf_0_1_3_reg_401 <= window_buf_0_1_reg_391;
            end if; 
        end if;
    end process;

    window_buf_0_1_reg_391_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_0_1_reg_391 <= window_buf_0_2_0_load_reg_1519;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter2_reg = ap_const_lv1_0))) then 
                window_buf_0_1_reg_391 <= window_buf_0_2_reg_1615;
            end if; 
        end if;
    end process;

    window_buf_1_1_3_reg_381_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_1_1_3_reg_381 <= window_buf_1_1_0_load_reg_1524;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter2_reg = ap_const_lv1_0))) then 
                window_buf_1_1_3_reg_381 <= window_buf_1_1_reg_371;
            end if; 
        end if;
    end process;

    window_buf_1_1_reg_371_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_1_1_reg_371 <= window_buf_1_2_0_load_reg_1529;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter2_reg = ap_const_lv1_0))) then 
                window_buf_1_1_reg_371 <= window_buf_1_2_reg_1621;
            end if; 
        end if;
    end process;

    window_buf_2_1_3_reg_361_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_2_1_3_reg_361 <= window_buf_2_1_0_load_reg_1534;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter2_reg = ap_const_lv1_0))) then 
                window_buf_2_1_3_reg_361 <= window_buf_2_1_reg_351;
            end if; 
        end if;
    end process;

    window_buf_2_1_reg_351_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                window_buf_2_1_reg_351 <= window_buf_2_2_0_load_reg_1539;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter2_reg = ap_const_lv1_0))) then 
                window_buf_2_1_reg_351 <= window_buf_2_2_reg_1627;
            end if; 
        end if;
    end process;

    xi_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                xi_reg_340 <= ap_const_lv10_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln95_fu_692_p2 = ap_const_lv1_0))) then 
                xi_reg_340 <= add_ln96_fu_829_p2;
            end if; 
        end if;
    end process;

    yi_reg_329_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                yi_reg_329 <= ap_const_lv10_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln95_reg_1568 = ap_const_lv1_0))) then 
                yi_reg_329 <= select_ln95_1_reg_1577;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln95_fu_692_p2 = ap_const_lv1_0))) then
                add_ln109_reg_1588 <= add_ln109_fu_789_p2;
                line_buf_addr_1_reg_1582 <= zext_ln96_fu_780_p1(9 - 1 downto 0);
                or_ln174_2_reg_1593 <= or_ln174_2_fu_823_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln95_reg_1568_pp2_iter2_reg = ap_const_lv1_0))) then
                add_ln129_reg_1656 <= add_ln129_fu_907_p2;
                add_ln136_1_reg_1661 <= add_ln136_1_fu_934_p2;
                    shl_ln136_1_reg_1666(8 downto 1) <= shl_ln136_1_fu_940_p3(8 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter9 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter8_reg = ap_const_lv1_0))) then
                add_ln140_reg_1754 <= grp_fu_1414_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln149_reg_1687_pp2_iter7_reg = ap_const_lv1_0) and (icmp_ln95_reg_1568_pp2_iter7_reg = ap_const_lv1_0))) then
                and_ln157_reg_1740 <= and_ln157_fu_1107_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp2_stage0_11001)) then
                and_ln157_reg_1740_pp2_iter10_reg <= and_ln157_reg_1740_pp2_iter9_reg;
                and_ln157_reg_1740_pp2_iter11_reg <= and_ln157_reg_1740_pp2_iter10_reg;
                and_ln157_reg_1740_pp2_iter12_reg <= and_ln157_reg_1740_pp2_iter11_reg;
                and_ln157_reg_1740_pp2_iter13_reg <= and_ln157_reg_1740_pp2_iter12_reg;
                and_ln157_reg_1740_pp2_iter14_reg <= and_ln157_reg_1740_pp2_iter13_reg;
                and_ln157_reg_1740_pp2_iter15_reg <= and_ln157_reg_1740_pp2_iter14_reg;
                and_ln157_reg_1740_pp2_iter16_reg <= and_ln157_reg_1740_pp2_iter15_reg;
                and_ln157_reg_1740_pp2_iter17_reg <= and_ln157_reg_1740_pp2_iter16_reg;
                and_ln157_reg_1740_pp2_iter18_reg <= and_ln157_reg_1740_pp2_iter17_reg;
                and_ln157_reg_1740_pp2_iter19_reg <= and_ln157_reg_1740_pp2_iter18_reg;
                and_ln157_reg_1740_pp2_iter20_reg <= and_ln157_reg_1740_pp2_iter19_reg;
                and_ln157_reg_1740_pp2_iter21_reg <= and_ln157_reg_1740_pp2_iter20_reg;
                and_ln157_reg_1740_pp2_iter22_reg <= and_ln157_reg_1740_pp2_iter21_reg;
                and_ln157_reg_1740_pp2_iter23_reg <= and_ln157_reg_1740_pp2_iter22_reg;
                and_ln157_reg_1740_pp2_iter24_reg <= and_ln157_reg_1740_pp2_iter23_reg;
                and_ln157_reg_1740_pp2_iter25_reg <= and_ln157_reg_1740_pp2_iter24_reg;
                and_ln157_reg_1740_pp2_iter26_reg <= and_ln157_reg_1740_pp2_iter25_reg;
                and_ln157_reg_1740_pp2_iter27_reg <= and_ln157_reg_1740_pp2_iter26_reg;
                and_ln157_reg_1740_pp2_iter28_reg <= and_ln157_reg_1740_pp2_iter27_reg;
                and_ln157_reg_1740_pp2_iter9_reg <= and_ln157_reg_1740;
                and_ln161_reg_1764_pp2_iter12_reg <= and_ln161_reg_1764;
                and_ln161_reg_1764_pp2_iter13_reg <= and_ln161_reg_1764_pp2_iter12_reg;
                and_ln161_reg_1764_pp2_iter14_reg <= and_ln161_reg_1764_pp2_iter13_reg;
                and_ln161_reg_1764_pp2_iter15_reg <= and_ln161_reg_1764_pp2_iter14_reg;
                and_ln161_reg_1764_pp2_iter16_reg <= and_ln161_reg_1764_pp2_iter15_reg;
                and_ln161_reg_1764_pp2_iter17_reg <= and_ln161_reg_1764_pp2_iter16_reg;
                and_ln161_reg_1764_pp2_iter18_reg <= and_ln161_reg_1764_pp2_iter17_reg;
                and_ln161_reg_1764_pp2_iter19_reg <= and_ln161_reg_1764_pp2_iter18_reg;
                and_ln161_reg_1764_pp2_iter20_reg <= and_ln161_reg_1764_pp2_iter19_reg;
                and_ln161_reg_1764_pp2_iter21_reg <= and_ln161_reg_1764_pp2_iter20_reg;
                and_ln161_reg_1764_pp2_iter22_reg <= and_ln161_reg_1764_pp2_iter21_reg;
                and_ln161_reg_1764_pp2_iter23_reg <= and_ln161_reg_1764_pp2_iter22_reg;
                and_ln161_reg_1764_pp2_iter24_reg <= and_ln161_reg_1764_pp2_iter23_reg;
                and_ln161_reg_1764_pp2_iter25_reg <= and_ln161_reg_1764_pp2_iter24_reg;
                and_ln161_reg_1764_pp2_iter26_reg <= and_ln161_reg_1764_pp2_iter25_reg;
                and_ln161_reg_1764_pp2_iter27_reg <= and_ln161_reg_1764_pp2_iter26_reg;
                and_ln161_reg_1764_pp2_iter28_reg <= and_ln161_reg_1764_pp2_iter27_reg;
                icmp_ln149_reg_1687_pp2_iter10_reg <= icmp_ln149_reg_1687_pp2_iter9_reg;
                icmp_ln149_reg_1687_pp2_iter11_reg <= icmp_ln149_reg_1687_pp2_iter10_reg;
                icmp_ln149_reg_1687_pp2_iter12_reg <= icmp_ln149_reg_1687_pp2_iter11_reg;
                icmp_ln149_reg_1687_pp2_iter13_reg <= icmp_ln149_reg_1687_pp2_iter12_reg;
                icmp_ln149_reg_1687_pp2_iter14_reg <= icmp_ln149_reg_1687_pp2_iter13_reg;
                icmp_ln149_reg_1687_pp2_iter15_reg <= icmp_ln149_reg_1687_pp2_iter14_reg;
                icmp_ln149_reg_1687_pp2_iter16_reg <= icmp_ln149_reg_1687_pp2_iter15_reg;
                icmp_ln149_reg_1687_pp2_iter17_reg <= icmp_ln149_reg_1687_pp2_iter16_reg;
                icmp_ln149_reg_1687_pp2_iter18_reg <= icmp_ln149_reg_1687_pp2_iter17_reg;
                icmp_ln149_reg_1687_pp2_iter19_reg <= icmp_ln149_reg_1687_pp2_iter18_reg;
                icmp_ln149_reg_1687_pp2_iter20_reg <= icmp_ln149_reg_1687_pp2_iter19_reg;
                icmp_ln149_reg_1687_pp2_iter21_reg <= icmp_ln149_reg_1687_pp2_iter20_reg;
                icmp_ln149_reg_1687_pp2_iter22_reg <= icmp_ln149_reg_1687_pp2_iter21_reg;
                icmp_ln149_reg_1687_pp2_iter23_reg <= icmp_ln149_reg_1687_pp2_iter22_reg;
                icmp_ln149_reg_1687_pp2_iter24_reg <= icmp_ln149_reg_1687_pp2_iter23_reg;
                icmp_ln149_reg_1687_pp2_iter25_reg <= icmp_ln149_reg_1687_pp2_iter24_reg;
                icmp_ln149_reg_1687_pp2_iter26_reg <= icmp_ln149_reg_1687_pp2_iter25_reg;
                icmp_ln149_reg_1687_pp2_iter27_reg <= icmp_ln149_reg_1687_pp2_iter26_reg;
                icmp_ln149_reg_1687_pp2_iter28_reg <= icmp_ln149_reg_1687_pp2_iter27_reg;
                icmp_ln149_reg_1687_pp2_iter5_reg <= icmp_ln149_reg_1687;
                icmp_ln149_reg_1687_pp2_iter6_reg <= icmp_ln149_reg_1687_pp2_iter5_reg;
                icmp_ln149_reg_1687_pp2_iter7_reg <= icmp_ln149_reg_1687_pp2_iter6_reg;
                icmp_ln149_reg_1687_pp2_iter8_reg <= icmp_ln149_reg_1687_pp2_iter7_reg;
                icmp_ln149_reg_1687_pp2_iter9_reg <= icmp_ln149_reg_1687_pp2_iter8_reg;
                icmp_ln95_reg_1568_pp2_iter10_reg <= icmp_ln95_reg_1568_pp2_iter9_reg;
                icmp_ln95_reg_1568_pp2_iter11_reg <= icmp_ln95_reg_1568_pp2_iter10_reg;
                icmp_ln95_reg_1568_pp2_iter12_reg <= icmp_ln95_reg_1568_pp2_iter11_reg;
                icmp_ln95_reg_1568_pp2_iter13_reg <= icmp_ln95_reg_1568_pp2_iter12_reg;
                icmp_ln95_reg_1568_pp2_iter14_reg <= icmp_ln95_reg_1568_pp2_iter13_reg;
                icmp_ln95_reg_1568_pp2_iter15_reg <= icmp_ln95_reg_1568_pp2_iter14_reg;
                icmp_ln95_reg_1568_pp2_iter16_reg <= icmp_ln95_reg_1568_pp2_iter15_reg;
                icmp_ln95_reg_1568_pp2_iter17_reg <= icmp_ln95_reg_1568_pp2_iter16_reg;
                icmp_ln95_reg_1568_pp2_iter18_reg <= icmp_ln95_reg_1568_pp2_iter17_reg;
                icmp_ln95_reg_1568_pp2_iter19_reg <= icmp_ln95_reg_1568_pp2_iter18_reg;
                icmp_ln95_reg_1568_pp2_iter20_reg <= icmp_ln95_reg_1568_pp2_iter19_reg;
                icmp_ln95_reg_1568_pp2_iter21_reg <= icmp_ln95_reg_1568_pp2_iter20_reg;
                icmp_ln95_reg_1568_pp2_iter22_reg <= icmp_ln95_reg_1568_pp2_iter21_reg;
                icmp_ln95_reg_1568_pp2_iter23_reg <= icmp_ln95_reg_1568_pp2_iter22_reg;
                icmp_ln95_reg_1568_pp2_iter24_reg <= icmp_ln95_reg_1568_pp2_iter23_reg;
                icmp_ln95_reg_1568_pp2_iter25_reg <= icmp_ln95_reg_1568_pp2_iter24_reg;
                icmp_ln95_reg_1568_pp2_iter26_reg <= icmp_ln95_reg_1568_pp2_iter25_reg;
                icmp_ln95_reg_1568_pp2_iter27_reg <= icmp_ln95_reg_1568_pp2_iter26_reg;
                icmp_ln95_reg_1568_pp2_iter28_reg <= icmp_ln95_reg_1568_pp2_iter27_reg;
                icmp_ln95_reg_1568_pp2_iter29_reg <= icmp_ln95_reg_1568_pp2_iter28_reg;
                icmp_ln95_reg_1568_pp2_iter2_reg <= icmp_ln95_reg_1568_pp2_iter1_reg;
                icmp_ln95_reg_1568_pp2_iter30_reg <= icmp_ln95_reg_1568_pp2_iter29_reg;
                icmp_ln95_reg_1568_pp2_iter31_reg <= icmp_ln95_reg_1568_pp2_iter30_reg;
                icmp_ln95_reg_1568_pp2_iter32_reg <= icmp_ln95_reg_1568_pp2_iter31_reg;
                icmp_ln95_reg_1568_pp2_iter33_reg <= icmp_ln95_reg_1568_pp2_iter32_reg;
                icmp_ln95_reg_1568_pp2_iter34_reg <= icmp_ln95_reg_1568_pp2_iter33_reg;
                icmp_ln95_reg_1568_pp2_iter35_reg <= icmp_ln95_reg_1568_pp2_iter34_reg;
                icmp_ln95_reg_1568_pp2_iter36_reg <= icmp_ln95_reg_1568_pp2_iter35_reg;
                icmp_ln95_reg_1568_pp2_iter3_reg <= icmp_ln95_reg_1568_pp2_iter2_reg;
                icmp_ln95_reg_1568_pp2_iter4_reg <= icmp_ln95_reg_1568_pp2_iter3_reg;
                icmp_ln95_reg_1568_pp2_iter5_reg <= icmp_ln95_reg_1568_pp2_iter4_reg;
                icmp_ln95_reg_1568_pp2_iter6_reg <= icmp_ln95_reg_1568_pp2_iter5_reg;
                icmp_ln95_reg_1568_pp2_iter7_reg <= icmp_ln95_reg_1568_pp2_iter6_reg;
                icmp_ln95_reg_1568_pp2_iter8_reg <= icmp_ln95_reg_1568_pp2_iter7_reg;
                icmp_ln95_reg_1568_pp2_iter9_reg <= icmp_ln95_reg_1568_pp2_iter8_reg;
                line_buf_addr_1_reg_1582_pp2_iter2_reg <= line_buf_addr_1_reg_1582_pp2_iter1_reg;
                or_ln174_2_reg_1593_pp2_iter10_reg <= or_ln174_2_reg_1593_pp2_iter9_reg;
                or_ln174_2_reg_1593_pp2_iter11_reg <= or_ln174_2_reg_1593_pp2_iter10_reg;
                or_ln174_2_reg_1593_pp2_iter12_reg <= or_ln174_2_reg_1593_pp2_iter11_reg;
                or_ln174_2_reg_1593_pp2_iter13_reg <= or_ln174_2_reg_1593_pp2_iter12_reg;
                or_ln174_2_reg_1593_pp2_iter14_reg <= or_ln174_2_reg_1593_pp2_iter13_reg;
                or_ln174_2_reg_1593_pp2_iter15_reg <= or_ln174_2_reg_1593_pp2_iter14_reg;
                or_ln174_2_reg_1593_pp2_iter16_reg <= or_ln174_2_reg_1593_pp2_iter15_reg;
                or_ln174_2_reg_1593_pp2_iter17_reg <= or_ln174_2_reg_1593_pp2_iter16_reg;
                or_ln174_2_reg_1593_pp2_iter18_reg <= or_ln174_2_reg_1593_pp2_iter17_reg;
                or_ln174_2_reg_1593_pp2_iter19_reg <= or_ln174_2_reg_1593_pp2_iter18_reg;
                or_ln174_2_reg_1593_pp2_iter20_reg <= or_ln174_2_reg_1593_pp2_iter19_reg;
                or_ln174_2_reg_1593_pp2_iter21_reg <= or_ln174_2_reg_1593_pp2_iter20_reg;
                or_ln174_2_reg_1593_pp2_iter22_reg <= or_ln174_2_reg_1593_pp2_iter21_reg;
                or_ln174_2_reg_1593_pp2_iter23_reg <= or_ln174_2_reg_1593_pp2_iter22_reg;
                or_ln174_2_reg_1593_pp2_iter24_reg <= or_ln174_2_reg_1593_pp2_iter23_reg;
                or_ln174_2_reg_1593_pp2_iter25_reg <= or_ln174_2_reg_1593_pp2_iter24_reg;
                or_ln174_2_reg_1593_pp2_iter26_reg <= or_ln174_2_reg_1593_pp2_iter25_reg;
                or_ln174_2_reg_1593_pp2_iter27_reg <= or_ln174_2_reg_1593_pp2_iter26_reg;
                or_ln174_2_reg_1593_pp2_iter28_reg <= or_ln174_2_reg_1593_pp2_iter27_reg;
                or_ln174_2_reg_1593_pp2_iter29_reg <= or_ln174_2_reg_1593_pp2_iter28_reg;
                or_ln174_2_reg_1593_pp2_iter2_reg <= or_ln174_2_reg_1593_pp2_iter1_reg;
                or_ln174_2_reg_1593_pp2_iter30_reg <= or_ln174_2_reg_1593_pp2_iter29_reg;
                or_ln174_2_reg_1593_pp2_iter31_reg <= or_ln174_2_reg_1593_pp2_iter30_reg;
                or_ln174_2_reg_1593_pp2_iter32_reg <= or_ln174_2_reg_1593_pp2_iter31_reg;
                or_ln174_2_reg_1593_pp2_iter33_reg <= or_ln174_2_reg_1593_pp2_iter32_reg;
                or_ln174_2_reg_1593_pp2_iter34_reg <= or_ln174_2_reg_1593_pp2_iter33_reg;
                or_ln174_2_reg_1593_pp2_iter35_reg <= or_ln174_2_reg_1593_pp2_iter34_reg;
                or_ln174_2_reg_1593_pp2_iter3_reg <= or_ln174_2_reg_1593_pp2_iter2_reg;
                or_ln174_2_reg_1593_pp2_iter4_reg <= or_ln174_2_reg_1593_pp2_iter3_reg;
                or_ln174_2_reg_1593_pp2_iter5_reg <= or_ln174_2_reg_1593_pp2_iter4_reg;
                or_ln174_2_reg_1593_pp2_iter6_reg <= or_ln174_2_reg_1593_pp2_iter5_reg;
                or_ln174_2_reg_1593_pp2_iter7_reg <= or_ln174_2_reg_1593_pp2_iter6_reg;
                or_ln174_2_reg_1593_pp2_iter8_reg <= or_ln174_2_reg_1593_pp2_iter7_reg;
                or_ln174_2_reg_1593_pp2_iter9_reg <= or_ln174_2_reg_1593_pp2_iter8_reg;
                p_Result_s_reg_1788_pp2_iter34_reg <= p_Result_s_reg_1788;
                sext_ln150_1_reg_1710_pp2_iter10_reg <= sext_ln150_1_reg_1710_pp2_iter9_reg;
                sext_ln150_1_reg_1710_pp2_iter6_reg <= sext_ln150_1_reg_1710;
                sext_ln150_1_reg_1710_pp2_iter7_reg <= sext_ln150_1_reg_1710_pp2_iter6_reg;
                sext_ln150_1_reg_1710_pp2_iter8_reg <= sext_ln150_1_reg_1710_pp2_iter7_reg;
                sext_ln150_1_reg_1710_pp2_iter9_reg <= sext_ln150_1_reg_1710_pp2_iter8_reg;
                    shl_ln2_reg_1697_pp2_iter10_reg(18 downto 8) <= shl_ln2_reg_1697_pp2_iter9_reg(18 downto 8);
                    shl_ln2_reg_1697_pp2_iter6_reg(18 downto 8) <= shl_ln2_reg_1697(18 downto 8);
                    shl_ln2_reg_1697_pp2_iter7_reg(18 downto 8) <= shl_ln2_reg_1697_pp2_iter6_reg(18 downto 8);
                    shl_ln2_reg_1697_pp2_iter8_reg(18 downto 8) <= shl_ln2_reg_1697_pp2_iter7_reg(18 downto 8);
                    shl_ln2_reg_1697_pp2_iter9_reg(18 downto 8) <= shl_ln2_reg_1697_pp2_iter8_reg(18 downto 8);
                sub_ln150_reg_1671_pp2_iter5_reg <= sub_ln150_reg_1671;
                sub_ln150_reg_1671_pp2_iter6_reg <= sub_ln150_reg_1671_pp2_iter5_reg;
                sub_ln150_reg_1671_pp2_iter7_reg <= sub_ln150_reg_1671_pp2_iter6_reg;
                window_buf_1_2_reg_1621_pp2_iter3_reg <= window_buf_1_2_reg_1621;
                window_buf_2_2_reg_1627_pp2_iter3_reg <= window_buf_2_2_reg_1627;
                    zext_ln109_reg_1604_pp2_iter10_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter9_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter11_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter10_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter12_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter11_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter13_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter12_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter14_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter13_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter15_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter14_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter16_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter15_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter17_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter16_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter18_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter17_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter19_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter18_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter20_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter19_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter21_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter20_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter22_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter21_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter23_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter22_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter24_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter23_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter25_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter24_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter26_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter25_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter27_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter26_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter28_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter27_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter29_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter28_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter2_reg(17 downto 0) <= zext_ln109_reg_1604(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter30_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter29_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter31_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter30_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter32_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter31_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter33_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter32_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter34_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter33_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter35_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter34_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter36_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter35_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter3_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter2_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter4_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter3_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter5_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter4_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter6_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter5_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter7_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter6_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter8_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter7_reg(17 downto 0);
                    zext_ln109_reg_1604_pp2_iter9_reg(17 downto 0) <= zext_ln109_reg_1604_pp2_iter8_reg(17 downto 0);
                    zext_ln129_3_reg_1650_pp2_iter3_reg(7 downto 0) <= zext_ln129_3_reg_1650(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln157_reg_1740_pp2_iter10_reg) and (ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln149_reg_1687_pp2_iter10_reg = ap_const_lv1_0) and (icmp_ln95_reg_1568_pp2_iter10_reg = ap_const_lv1_0))) then
                and_ln161_reg_1764 <= and_ln161_fu_1179_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter9 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter10_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter9_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter10 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter11_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter10_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter11_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter10_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter11 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter12_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter11_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter12_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter11_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter12 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter13_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter12_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter13_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter12_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter13 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter14_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter13_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter14_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter13_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter14 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter15_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter14_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter15_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter14_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter15 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter16_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter15_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter16_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter15_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter16 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter17_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter16_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter17_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter16_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter17 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter18_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter17_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter18_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter17_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter18 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter19_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter18_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter19_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter18_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                ap_phi_reg_pp2_iter1_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter0_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter1_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter0_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter19 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter20_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter19_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter20_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter19_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter20 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter21_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter20_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter21_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter20_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter21 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter22_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter21_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter22_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter21_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter22 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter23_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter22_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter23_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter22_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter23 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter24_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter23_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter24_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter23_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter24 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter25_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter24_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter25_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter24_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter25 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter26_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter25_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter26_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter25_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter26 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter27_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter26_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter27_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter26_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter27 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter28_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter27_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter28_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter27_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                ap_phi_reg_pp2_iter2_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter1_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter2_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter1_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter3_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter2_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter3_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter2_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter4_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter3_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter4_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter3_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter4 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter5_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter4_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter5_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter4_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter5 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter6_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter5_grad_sobel_reg_422;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter6 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter7_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter6_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter7_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter6_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter7 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter8_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter7_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter8_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter7_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter8 = ap_const_logic_1))) then
                ap_phi_reg_pp2_iter9_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter8_grad_sobel_reg_422;
                ap_phi_reg_pp2_iter9_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter8_t_int_06368_reg_411;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond5216_fu_446_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                empty_41_reg_1447 <= empty_41_fu_458_p1;
                    empty_42_reg_1462(4 downto 3) <= empty_42_fu_480_p2(4 downto 3);
                empty_43_reg_1467 <= empty_43_fu_486_p2;
                empty_46_reg_1473 <= empty_46_fu_500_p2;
                tmp_2_reg_1452 <= empty_reg_274(10 downto 9);
                    tmp_3_reg_1457(4 downto 3) <= tmp_3_fu_472_p3(4 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                exitcond5216_reg_1438 <= exitcond5216_fu_446_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln95_reg_1568_pp2_iter31_reg = ap_const_lv1_0))) then
                f_reg_1783 <= grp_fu_441_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln95_reg_1568_pp2_iter3_reg = ap_const_lv1_0))) then
                icmp_ln149_reg_1687 <= icmp_ln149_fu_1001_p2;
                sub_ln150_1_reg_1681 <= sub_ln150_1_fu_995_p2;
                sub_ln150_reg_1671 <= sub_ln150_fu_972_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln95_reg_1568 <= icmp_ln95_fu_692_p2;
                icmp_ln95_reg_1568_pp2_iter1_reg <= icmp_ln95_reg_1568;
                line_buf_addr_1_reg_1582_pp2_iter1_reg <= line_buf_addr_1_reg_1582;
                or_ln174_2_reg_1593_pp2_iter1_reg <= or_ln174_2_reg_1593;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln95_reg_1568_pp2_iter32_reg = ap_const_lv1_0))) then
                isNeg_reg_1798 <= add_ln340_fu_1244_p2(8 downto 8);
                p_Repl2_s_reg_1793 <= p_Repl2_s_fu_1236_p1;
                p_Result_s_reg_1788 <= p_Val2_s_fu_1215_p1(31 downto 31);
                ush_reg_1803 <= ush_fu_1268_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln95_reg_1568_pp2_iter34_reg = ap_const_lv1_0))) then
                p_Val2_3_reg_1814 <= p_Val2_3_fu_1342_p3;
                tmp_10_reg_1819 <= p_Val2_3_fu_1342_p3(31 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln95_reg_1568_pp2_iter35_reg = ap_const_lv1_0))) then
                select_ln174_1_reg_1824 <= select_ln174_1_fu_1384_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln95_fu_692_p2 = ap_const_lv1_0))) then
                select_ln95_1_reg_1577 <= select_ln95_1_fu_724_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln149_reg_1687 = ap_const_lv1_0) and (icmp_ln95_reg_1568_pp2_iter4_reg = ap_const_lv1_0))) then
                sext_ln150_1_reg_1710 <= sext_ln150_1_fu_1021_p1;
                    shl_ln2_reg_1697(18 downto 8) <= shl_ln2_fu_1010_p3(18 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln95_reg_1568_pp2_iter1_reg = ap_const_lv1_0))) then
                    shl_ln_reg_1645(8 downto 1) <= shl_ln_fu_873_p3(8 downto 1);
                tmp_1_reg_1634 <= line_buf_q1(23 downto 8);
                    window_buf_0_1_3_cast7_reg_1639(7 downto 0) <= window_buf_0_1_3_cast7_fu_869_p1(7 downto 0);
                    zext_ln129_3_reg_1650(7 downto 0) <= zext_ln129_3_fu_881_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln95_reg_1568_pp2_iter33_reg = ap_const_lv1_0))) then
                val_V_reg_1808 <= val_V_fu_1330_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter1_reg = ap_const_lv1_0))) then
                window_buf_0_2_reg_1615 <= line_buf_q1(15 downto 8);
                window_buf_1_2_reg_1621 <= line_buf_q1(23 downto 16);
                window_buf_2_2_reg_1627 <= data_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (icmp_ln95_reg_1568_pp2_iter14_reg = ap_const_lv1_0))) then
                x_assign_reg_1768 <= grp_fu_438_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln95_reg_1568 = ap_const_lv1_0))) then
                    zext_ln109_reg_1604(17 downto 0) <= zext_ln109_fu_835_p1(17 downto 0);
            end if;
        end if;
    end process;
    tmp_3_reg_1457(2 downto 0) <= "000";
    empty_42_reg_1462(2 downto 0) <= "111";
    zext_ln109_reg_1604(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter2_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter3_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter4_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter5_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter6_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter7_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter8_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter9_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter10_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter11_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter12_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter13_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter14_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter15_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter16_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter17_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter18_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter19_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter20_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter21_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter22_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter23_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter24_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter25_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter26_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter27_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter28_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter29_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter30_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter31_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter32_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter33_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter34_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter35_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    zext_ln109_reg_1604_pp2_iter36_reg(63 downto 18) <= "0000000000000000000000000000000000000000000000";
    window_buf_0_1_3_cast7_reg_1639(8) <= '0';
    shl_ln_reg_1645(0) <= '0';
    zext_ln129_3_reg_1650(10 downto 8) <= "000";
    zext_ln129_3_reg_1650_pp2_iter3_reg(10 downto 8) <= "000";
    shl_ln136_1_reg_1666(0) <= '0';
    shl_ln2_reg_1697(7 downto 0) <= "00000000";
    shl_ln2_reg_1697_pp2_iter6_reg(7 downto 0) <= "00000000";
    shl_ln2_reg_1697_pp2_iter7_reg(7 downto 0) <= "00000000";
    shl_ln2_reg_1697_pp2_iter8_reg(7 downto 0) <= "00000000";
    shl_ln2_reg_1697_pp2_iter9_reg(7 downto 0) <= "00000000";
    shl_ln2_reg_1697_pp2_iter10_reg(7 downto 0) <= "00000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, exitcond5216_fu_446_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state5, exitcond5115_fu_582_p2, ap_enable_reg_pp2_iter2, ap_block_pp0_stage0_subdone, ap_block_pp2_stage0_subdone, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter36, ap_enable_reg_pp2_iter37)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond5216_fu_446_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (exitcond5216_fu_446_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (exitcond5115_fu_582_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
            when ap_ST_fsm_pp2_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter37 = ap_const_logic_1) and (ap_enable_reg_pp2_iter36 = ap_const_logic_0))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter37 = ap_const_logic_1) and (ap_enable_reg_pp2_iter36 = ap_const_logic_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state45;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state45 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln109_fu_789_p2 <= std_logic_vector(unsigned(zext_ln96_1_fu_785_p1) + unsigned(p_mid2_fu_736_p3));
    add_ln129_1_fu_964_p2 <= std_logic_vector(unsigned(zext_ln129_3_reg_1650_pp2_iter3_reg) + unsigned(sub_ln129_1_fu_959_p2));
    add_ln129_fu_907_p2 <= std_logic_vector(unsigned(zext_ln129_1_fu_904_p1) + unsigned(sext_ln129_fu_900_p1));
    add_ln136_1_fu_934_p2 <= std_logic_vector(unsigned(zext_ln136_fu_921_p1) + unsigned(zext_ln136_1_fu_930_p1));
    add_ln136_fu_925_p2 <= std_logic_vector(unsigned(zext_ln129_fu_892_p1) + unsigned(window_buf_0_1_3_cast7_reg_1639));
    add_ln340_fu_1244_p2 <= std_logic_vector(signed(ap_const_lv9_181) + signed(zext_ln340_fu_1240_p1));
    add_ln95_1_fu_718_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(ap_phi_mux_yi_phi_fu_333_p4));
    add_ln95_fu_698_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_318) + unsigned(ap_const_lv19_1));
    add_ln96_fu_829_p2 <= std_logic_vector(unsigned(ap_const_lv10_1) + unsigned(select_ln95_fu_710_p3));
    and_ln157_fu_1107_p2 <= (select_ln157_fu_1059_p3 and select_ln157_1_fu_1099_p3);
    and_ln161_fu_1179_p2 <= (select_ln161_fu_1143_p3 and select_ln161_1_fu_1171_p3);
    and_ln165_fu_1201_p2 <= (icmp_ln165_fu_1189_p2 and icmp_ln165_1_fu_1195_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state4 <= ap_CS_fsm(2);
    ap_CS_fsm_state45 <= ap_CS_fsm(6);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state10_pp2_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp2_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp2_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp2_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp2_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp2_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp2_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp2_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp2_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp2_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp2_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp2_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp2_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp2_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp2_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp2_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp2_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp2_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp2_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp2_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp2_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp2_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp2_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp2_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp2_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp2_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp2_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp2_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp2_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp2_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp2_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp2_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp2_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp2_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp2_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp2_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_603_assign_proc : process(icmp_ln95_reg_1568_pp2_iter28_reg, icmp_ln149_reg_1687_pp2_iter28_reg, and_ln157_reg_1740_pp2_iter28_reg, and_ln161_reg_1764_pp2_iter28_reg)
    begin
                ap_condition_603 <= (((icmp_ln149_reg_1687_pp2_iter28_reg = ap_const_lv1_1) and (icmp_ln95_reg_1568_pp2_iter28_reg = ap_const_lv1_0)) or ((ap_const_lv1_0 = and_ln161_reg_1764_pp2_iter28_reg) and (ap_const_lv1_0 = and_ln157_reg_1740_pp2_iter28_reg) and (icmp_ln95_reg_1568_pp2_iter28_reg = ap_const_lv1_0)));
    end process;


    ap_condition_920_assign_proc : process(icmp_ln95_reg_1568_pp2_iter27_reg, icmp_ln149_reg_1687_pp2_iter27_reg, and_ln157_reg_1740_pp2_iter27_reg, and_ln161_reg_1764_pp2_iter27_reg)
    begin
                ap_condition_920 <= ((ap_const_lv1_0 = and_ln161_reg_1764_pp2_iter27_reg) and (ap_const_lv1_0 = and_ln157_reg_1740_pp2_iter27_reg) and (icmp_ln149_reg_1687_pp2_iter27_reg = ap_const_lv1_0) and (icmp_ln95_reg_1568_pp2_iter27_reg = ap_const_lv1_0));
    end process;


    ap_condition_961_assign_proc : process(icmp_ln95_reg_1568_pp2_iter8_reg, icmp_ln149_reg_1687_pp2_iter8_reg, and_ln157_reg_1740)
    begin
                ap_condition_961 <= ((ap_const_lv1_1 = and_ln157_reg_1740) and (icmp_ln149_reg_1687_pp2_iter8_reg = ap_const_lv1_0) and (icmp_ln95_reg_1568_pp2_iter8_reg = ap_const_lv1_0));
    end process;


    ap_condition_964_assign_proc : process(icmp_ln95_reg_1568_pp2_iter27_reg, icmp_ln149_reg_1687_pp2_iter27_reg, and_ln157_reg_1740_pp2_iter27_reg, and_ln161_reg_1764_pp2_iter27_reg)
    begin
                ap_condition_964 <= ((ap_const_lv1_0 = and_ln157_reg_1740_pp2_iter27_reg) and (ap_const_lv1_1 = and_ln161_reg_1764_pp2_iter27_reg) and (icmp_ln149_reg_1687_pp2_iter27_reg = ap_const_lv1_0) and (icmp_ln95_reg_1568_pp2_iter27_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(exitcond5216_fu_446_p2)
    begin
        if ((exitcond5216_fu_446_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter2_state9_assign_proc : process(ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_1))) then 
            ap_condition_pp2_exit_iter2_state9 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter2_state9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_flush_enable_assign_proc : process(icmp_ln95_fu_692_p2, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln95_fu_692_p2 = ap_const_lv1_1))) then 
            ap_condition_pp2_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp2_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter2, ap_enable_reg_pp2_iter9, ap_enable_reg_pp2_iter1, ap_enable_reg_pp2_iter3, ap_enable_reg_pp2_iter4, ap_enable_reg_pp2_iter5, ap_enable_reg_pp2_iter6, ap_enable_reg_pp2_iter7, ap_enable_reg_pp2_iter8, ap_enable_reg_pp2_iter10, ap_enable_reg_pp2_iter11, ap_enable_reg_pp2_iter12, ap_enable_reg_pp2_iter13, ap_enable_reg_pp2_iter14, ap_enable_reg_pp2_iter15, ap_enable_reg_pp2_iter16, ap_enable_reg_pp2_iter17, ap_enable_reg_pp2_iter18, ap_enable_reg_pp2_iter19, ap_enable_reg_pp2_iter20, ap_enable_reg_pp2_iter21, ap_enable_reg_pp2_iter22, ap_enable_reg_pp2_iter23, ap_enable_reg_pp2_iter24, ap_enable_reg_pp2_iter25, ap_enable_reg_pp2_iter26, ap_enable_reg_pp2_iter27, ap_enable_reg_pp2_iter28, ap_enable_reg_pp2_iter29, ap_enable_reg_pp2_iter30, ap_enable_reg_pp2_iter31, ap_enable_reg_pp2_iter32, ap_enable_reg_pp2_iter33, ap_enable_reg_pp2_iter34, ap_enable_reg_pp2_iter35, ap_enable_reg_pp2_iter36, ap_enable_reg_pp2_iter37)
    begin
        if (((ap_enable_reg_pp2_iter37 = ap_const_logic_0) and (ap_enable_reg_pp2_iter36 = ap_const_logic_0) and (ap_enable_reg_pp2_iter35 = ap_const_logic_0) and (ap_enable_reg_pp2_iter34 = ap_const_logic_0) and (ap_enable_reg_pp2_iter33 = ap_const_logic_0) and (ap_enable_reg_pp2_iter32 = ap_const_logic_0) and (ap_enable_reg_pp2_iter31 = ap_const_logic_0) and (ap_enable_reg_pp2_iter30 = ap_const_logic_0) and (ap_enable_reg_pp2_iter29 = ap_const_logic_0) and (ap_enable_reg_pp2_iter28 = ap_const_logic_0) and (ap_enable_reg_pp2_iter27 = ap_const_logic_0) and (ap_enable_reg_pp2_iter26 = ap_const_logic_0) and (ap_enable_reg_pp2_iter25 = ap_const_logic_0) and (ap_enable_reg_pp2_iter24 = ap_const_logic_0) and (ap_enable_reg_pp2_iter23 = ap_const_logic_0) and (ap_enable_reg_pp2_iter22 = ap_const_logic_0) and (ap_enable_reg_pp2_iter21 = ap_const_logic_0) and (ap_enable_reg_pp2_iter20 = ap_const_logic_0) and (ap_enable_reg_pp2_iter19 = ap_const_logic_0) and (ap_enable_reg_pp2_iter18 = ap_const_logic_0) and (ap_enable_reg_pp2_iter17 = ap_const_logic_0) and (ap_enable_reg_pp2_iter16 = ap_const_logic_0) and (ap_enable_reg_pp2_iter15 = ap_const_logic_0) and (ap_enable_reg_pp2_iter14 = ap_const_logic_0) and (ap_enable_reg_pp2_iter13 = ap_const_logic_0) and (ap_enable_reg_pp2_iter12 = ap_const_logic_0) and (ap_enable_reg_pp2_iter11 = ap_const_logic_0) and (ap_enable_reg_pp2_iter10 = ap_const_logic_0) and (ap_enable_reg_pp2_iter8 = ap_const_logic_0) and (ap_enable_reg_pp2_iter7 = ap_const_logic_0) and (ap_enable_reg_pp2_iter6 = ap_const_logic_0) and (ap_enable_reg_pp2_iter5 = ap_const_logic_0) and (ap_enable_reg_pp2_iter4 = ap_const_logic_0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter9 = ap_const_logic_0) and (ap_enable_reg_pp2_iter2 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_window_buf_0_1_3_phi_fu_404_p4_assign_proc : process(window_buf_0_1_reg_391, window_buf_0_1_3_reg_401, icmp_ln95_reg_1568_pp2_iter2_reg, ap_enable_reg_pp2_iter3, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter2_reg = ap_const_lv1_0))) then 
            ap_phi_mux_window_buf_0_1_3_phi_fu_404_p4 <= window_buf_0_1_reg_391;
        else 
            ap_phi_mux_window_buf_0_1_3_phi_fu_404_p4 <= window_buf_0_1_3_reg_401;
        end if; 
    end process;


    ap_phi_mux_window_buf_1_1_3_phi_fu_384_p4_assign_proc : process(window_buf_1_1_reg_371, window_buf_1_1_3_reg_381, icmp_ln95_reg_1568_pp2_iter2_reg, ap_enable_reg_pp2_iter3, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter2_reg = ap_const_lv1_0))) then 
            ap_phi_mux_window_buf_1_1_3_phi_fu_384_p4 <= window_buf_1_1_reg_371;
        else 
            ap_phi_mux_window_buf_1_1_3_phi_fu_384_p4 <= window_buf_1_1_3_reg_381;
        end if; 
    end process;


    ap_phi_mux_window_buf_2_1_3_phi_fu_364_p4_assign_proc : process(window_buf_2_1_reg_351, window_buf_2_1_3_reg_361, icmp_ln95_reg_1568_pp2_iter2_reg, ap_enable_reg_pp2_iter3, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter2_reg = ap_const_lv1_0))) then 
            ap_phi_mux_window_buf_2_1_3_phi_fu_364_p4 <= window_buf_2_1_reg_351;
        else 
            ap_phi_mux_window_buf_2_1_3_phi_fu_364_p4 <= window_buf_2_1_3_reg_361;
        end if; 
    end process;


    ap_phi_mux_yi_phi_fu_333_p4_assign_proc : process(yi_reg_329, icmp_ln95_reg_1568, ap_CS_fsm_pp2_stage0, select_ln95_1_reg_1577, ap_enable_reg_pp2_iter1, ap_block_pp2_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln95_reg_1568 = ap_const_lv1_0))) then 
            ap_phi_mux_yi_phi_fu_333_p4 <= select_ln95_1_reg_1577;
        else 
            ap_phi_mux_yi_phi_fu_333_p4 <= yi_reg_329;
        end if; 
    end process;

    ap_phi_reg_pp2_iter0_grad_sobel_reg_422 <= "XXXXXXXX";
    ap_phi_reg_pp2_iter0_t_int_06368_reg_411 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state45)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp88_not_fu_680_p2 <= "1" when (unsigned(ap_phi_mux_yi_phi_fu_333_p4) > unsigned(ap_const_lv10_1FC)) else "0";
    cmp88_not_mid1_fu_760_p2 <= "1" when (unsigned(add_ln95_1_fu_718_p2) > unsigned(ap_const_lv10_1FC)) else "0";
    data_address0 <= zext_ln109_fu_835_p1(18 - 1 downto 0);

    data_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            data_ce0 <= ap_const_logic_1;
        else 
            data_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    empty_40_fu_452_p2 <= std_logic_vector(unsigned(empty_reg_274) + unsigned(ap_const_lv11_1));
    empty_41_fu_458_p1 <= empty_reg_274(9 - 1 downto 0);
    empty_42_fu_480_p2 <= (tmp_3_fu_472_p3 or ap_const_lv5_7);
    empty_43_fu_486_p2 <= "1" when (unsigned(tmp_3_fu_472_p3) > unsigned(empty_42_fu_480_p2)) else "0";
    empty_44_fu_492_p3 <= 
        tmp_3_fu_472_p3 when (empty_43_fu_486_p2(0) = '1') else 
        empty_42_fu_480_p2;
    empty_45_fu_510_p3 <= 
        empty_42_reg_1462 when (empty_43_reg_1467(0) = '1') else 
        tmp_3_reg_1457;
    empty_46_fu_500_p2 <= std_logic_vector(signed(ap_const_lv5_17) - signed(empty_44_fu_492_p3));
    empty_47_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_45_fu_510_p3),24));
    empty_48_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_46_reg_1473),24));
    empty_49_fu_522_p3 <= 
        ap_const_lv24_0 when (empty_43_reg_1467(0) = '1') else 
        ap_const_lv24_0;
    empty_50_fu_529_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv24_FFFFFF),to_integer(unsigned('0' & empty_47_fu_515_p1(24-1 downto 0)))));
    empty_51_fu_535_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv24_FFFFFF),to_integer(unsigned('0' & empty_48_fu_519_p1(24-1 downto 0)))));
    empty_52_fu_547_p2 <= (p_demorgan_fu_541_p2 and empty_49_fu_522_p3);
    empty_53_fu_554_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_reg_1452),3));
    empty_56_fu_588_p2 <= std_logic_vector(unsigned(empty_54_reg_285) + unsigned(ap_const_lv4_1));
    empty_58_fu_650_p2 <= "1" when (unsigned(next_urem_fu_644_p2) < unsigned(ap_const_lv4_3)) else "0";
    exitcond5115_fu_582_p2 <= "1" when (empty_54_reg_285 = ap_const_lv4_9) else "0";
    exitcond5216_fu_446_p2 <= "1" when (empty_reg_274 = ap_const_lv11_600) else "0";
        grp_fu_1024_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_fu_1010_p3),20));

    grp_fu_1392_p0 <= sext_ln140_fu_1007_p1(11 - 1 downto 0);
    grp_fu_1392_p1 <= sext_ln140_fu_1007_p1(11 - 1 downto 0);
    grp_fu_1398_p1 <= ap_const_lv31_7FFFFD96(11 - 1 downto 0);
    grp_fu_1406_p1 <= ap_const_lv28_FFFFF96(8 - 1 downto 0);
    grp_fu_1414_p0 <= sext_ln136_fu_1036_p1(11 - 1 downto 0);
    grp_fu_1414_p1 <= sext_ln136_fu_1036_p1(11 - 1 downto 0);
    grp_fu_1422_p1 <= ap_const_lv28_FFFFF96(8 - 1 downto 0);
    grp_fu_1430_p1 <= ap_const_lv28_6B(8 - 1 downto 0);
        grp_fu_438_p0 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln140_reg_1754),32));

    icmp75_fu_754_p2 <= "1" when (tmp_4_fu_744_p4 = ap_const_lv8_0) else "0";
    icmp_fu_674_p2 <= "1" when (tmp_fu_664_p4 = ap_const_lv8_0) else "0";
    icmp_ln143_fu_1358_p2 <= "1" when (signed(tmp_10_reg_1819) > signed(ap_const_lv24_0)) else "0";
    icmp_ln149_fu_1001_p2 <= "1" when (add_ln129_1_fu_964_p2 = zext_ln129_4_fu_969_p1) else "0";
    icmp_ln157_1_fu_1054_p2 <= "1" when (signed(sext_ln157_1_fu_1046_p1) > signed(grp_fu_1398_p2)) else "0";
    icmp_ln157_2_fu_1077_p2 <= "1" when (signed(sext_ln157_3_fu_1074_p1) < signed(grp_fu_1406_p2)) else "0";
    icmp_ln157_3_fu_1088_p2 <= "1" when (signed(grp_fu_1406_p2) < signed(sext_ln157_3_fu_1074_p1)) else "0";
    icmp_ln157_fu_1049_p2 <= "1" when (signed(sext_ln157_1_fu_1046_p1) < signed(grp_fu_1398_p2)) else "0";
    icmp_ln161_1_fu_1138_p2 <= "1" when (signed(sext_ln161_1_fu_1130_p1) > signed(grp_fu_1422_p2)) else "0";
    icmp_ln161_2_fu_1161_p2 <= "1" when (signed(sext_ln161_3_fu_1158_p1) > signed(grp_fu_1430_p2)) else "0";
    icmp_ln161_3_fu_1166_p2 <= "1" when (signed(sext_ln161_3_fu_1158_p1) < signed(grp_fu_1430_p2)) else "0";
    icmp_ln161_fu_1133_p2 <= "1" when (signed(sext_ln161_1_fu_1130_p1) < signed(grp_fu_1422_p2)) else "0";
    icmp_ln165_1_fu_1195_p2 <= "1" when (signed(ap_phi_reg_pp2_iter29_t_int_06368_reg_411) < signed(ap_const_lv32_26A)) else "0";
    icmp_ln165_fu_1189_p2 <= "1" when (signed(ap_phi_reg_pp2_iter29_t_int_06368_reg_411) > signed(ap_const_lv32_6A)) else "0";
    icmp_ln174_1_fu_811_p2 <= "1" when (unsigned(select_ln95_fu_710_p3) > unsigned(ap_const_lv10_1FC)) else "0";
    icmp_ln174_fu_805_p2 <= "1" when (tmp_15_fu_795_p4 = ap_const_lv8_0) else "0";
    icmp_ln95_fu_692_p2 <= "1" when (indvar_flatten_reg_318 = ap_const_lv19_40000) else "0";
    icmp_ln96_fu_704_p2 <= "1" when (xi_reg_340 = ap_const_lv10_200) else "0";
    idx_urem_fu_656_p3 <= 
        next_urem_fu_644_p2 when (empty_58_fu_650_p2(0) = '1') else 
        ap_const_lv4_0;
    isNeg_fu_1250_p3 <= add_ln340_fu_1244_p2(8 downto 8);

    line_buf_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, line_buf_addr_1_reg_1582_pp2_iter2_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, p_cast120_fu_506_p1, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            line_buf_address0 <= line_buf_addr_1_reg_1582_pp2_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buf_address0 <= p_cast120_fu_506_p1(9 - 1 downto 0);
        else 
            line_buf_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    line_buf_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1)))) then 
            line_buf_ce0 <= ap_const_logic_1;
        else 
            line_buf_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            line_buf_ce1 <= ap_const_logic_1;
        else 
            line_buf_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buf_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter3, ap_block_pp2_stage0, ap_block_pp0_stage0, empty_52_fu_547_p2, tmp_5_fu_885_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1))) then 
            line_buf_d0 <= tmp_5_fu_885_p3;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buf_d0 <= empty_52_fu_547_p2;
        else 
            line_buf_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buf_we0_assign_proc : process(exitcond5216_reg_1438, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_block_pp2_stage0_11001, icmp_ln95_reg_1568_pp2_iter2_reg, ap_enable_reg_pp0_iter1, ap_enable_reg_pp2_iter3, mask_fu_557_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter3 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter2_reg = ap_const_lv1_0))) then 
            line_buf_we0 <= ap_const_lv3_7;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (exitcond5216_reg_1438 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buf_we0 <= mask_fu_557_p2;
        else 
            line_buf_we0 <= ap_const_lv3_0;
        end if; 
    end process;

    mantissa_V_fu_1276_p4 <= ((ap_const_lv1_1 & p_Repl2_s_reg_1793) & ap_const_lv1_0);
    mask_fu_557_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv3_1),to_integer(unsigned('0' & empty_53_fu_554_p1(3-1 downto 0)))));
    next_mul_fu_594_p2 <= std_logic_vector(unsigned(ap_const_lv8_16) + unsigned(phi_mul_reg_296));
    next_urem_fu_644_p2 <= std_logic_vector(unsigned(phi_urem_reg_307) + unsigned(ap_const_lv4_1));
    or_ln174_1_fu_686_p2 <= (icmp_fu_674_p2 or cmp88_not_fu_680_p2);
    or_ln174_2_fu_823_p2 <= (select_ln95_2_fu_772_p3 or or_ln174_fu_817_p2);
    or_ln174_3_fu_1379_p2 <= (or_ln174_2_reg_1593_pp2_iter35_reg or icmp_ln143_fu_1358_p2);
    or_ln174_4_fu_766_p2 <= (icmp75_fu_754_p2 or cmp88_not_mid1_fu_760_p2);
    or_ln174_fu_817_p2 <= (icmp_ln174_fu_805_p2 or icmp_ln174_1_fu_811_p2);
    out_0_address0 <= zext_ln109_reg_1604_pp2_iter36_reg(18 - 1 downto 0);

    out_0_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter37)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter37 = ap_const_logic_1))) then 
            out_0_ce0 <= ap_const_logic_1;
        else 
            out_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_0_d0 <= select_ln174_1_reg_1824;

    out_0_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln95_reg_1568_pp2_iter36_reg, ap_enable_reg_pp2_iter37)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter37 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter36_reg = ap_const_lv1_0))) then 
            out_0_we0 <= ap_const_logic_1;
        else 
            out_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    out_1_address0 <= zext_ln109_reg_1604_pp2_iter29_reg(18 - 1 downto 0);

    out_1_ce0_assign_proc : process(ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter30)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter30 = ap_const_logic_1))) then 
            out_1_ce0 <= ap_const_logic_1;
        else 
            out_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    out_1_d0 <= ap_phi_reg_pp2_iter30_grad_sobel_reg_422;

    out_1_we0_assign_proc : process(ap_block_pp2_stage0_11001, icmp_ln95_reg_1568_pp2_iter29_reg, ap_enable_reg_pp2_iter30)
    begin
        if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter30 = ap_const_logic_1) and (icmp_ln95_reg_1568_pp2_iter29_reg = ap_const_lv1_0))) then 
            out_1_we0 <= ap_const_logic_1;
        else 
            out_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    p_Repl2_1_fu_1226_p4 <= p_Val2_s_fu_1215_p1(30 downto 23);
    p_Repl2_s_fu_1236_p1 <= p_Val2_s_fu_1215_p1(23 - 1 downto 0);
    p_Val2_3_fu_1342_p3 <= 
        result_V_1_fu_1337_p2 when (p_Result_s_reg_1788_pp2_iter34_reg(0) = '1') else 
        val_V_reg_1808;
    p_Val2_s_fu_1215_p1 <= f_reg_1783;
    p_cast120_fu_506_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_41_reg_1447),64));
    p_demorgan_fu_541_p2 <= (empty_51_fu_535_p2 and empty_50_fu_529_p2);
    p_mid2_fu_736_p3 <= (trunc_ln95_fu_732_p1 & ap_const_lv9_0);
    r_V_1_fu_1302_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_1285_p1),to_integer(unsigned('0' & sh_prom_i_i_i_cast_cast_cast_cast_cast_cast_fu_1292_p1(31-1 downto 0)))));
    r_V_fu_1296_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_1285_p1),to_integer(unsigned('0' & sh_prom_i_i_i_cast_cast_cast_cast_cast_cast_fu_1292_p1(31-1 downto 0)))));
    result_V_1_fu_1337_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_V_reg_1808));
    select_ln157_1_fu_1099_p3 <= 
        xor_ln157_fu_1082_p2 when (tmp_12_fu_1067_p3(0) = '1') else 
        xor_ln157_1_fu_1093_p2;
    select_ln157_fu_1059_p3 <= 
        icmp_ln157_fu_1049_p2 when (tmp_11_fu_1039_p3(0) = '1') else 
        icmp_ln157_1_fu_1054_p2;
    select_ln161_1_fu_1171_p3 <= 
        icmp_ln161_2_fu_1161_p2 when (tmp_14_fu_1151_p3(0) = '1') else 
        icmp_ln161_3_fu_1166_p2;
    select_ln161_fu_1143_p3 <= 
        icmp_ln161_fu_1133_p2 when (tmp_13_fu_1123_p3(0) = '1') else 
        icmp_ln161_1_fu_1138_p2;
    select_ln165_fu_1207_p3 <= 
        ap_const_lv8_2D when (and_ln165_fu_1201_p2(0) = '1') else 
        ap_const_lv8_5A;
    select_ln174_1_fu_1384_p3 <= 
        select_ln174_fu_1371_p3 when (or_ln174_3_fu_1379_p2(0) = '1') else 
        trunc_ln176_fu_1363_p1;
    select_ln174_fu_1371_p3 <= 
        ap_const_lv8_FF when (xor_ln174_fu_1366_p2(0) = '1') else 
        ap_const_lv8_0;
    select_ln95_1_fu_724_p3 <= 
        add_ln95_1_fu_718_p2 when (icmp_ln96_fu_704_p2(0) = '1') else 
        ap_phi_mux_yi_phi_fu_333_p4;
    select_ln95_2_fu_772_p3 <= 
        or_ln174_4_fu_766_p2 when (icmp_ln96_fu_704_p2(0) = '1') else 
        or_ln174_1_fu_686_p2;
    select_ln95_fu_710_p3 <= 
        ap_const_lv10_0 when (icmp_ln96_fu_704_p2(0) = '1') else 
        xi_reg_340;
        sext_ln129_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln129_fu_895_p2),11));

        sext_ln1311_fu_1264_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln1311_fu_1258_p2),9));

        sext_ln136_fu_1036_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln150_reg_1671_pp2_iter5_reg),22));

        sext_ln140_fu_1007_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln150_1_reg_1681),22));

        sext_ln150_1_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln150_reg_1671),20));

        sext_ln150_2_fu_1185_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1024_p2),32));

        sext_ln157_1_fu_1046_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_reg_1697_pp2_iter7_reg),31));

        sext_ln157_3_fu_1074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_reg_1697_pp2_iter7_reg),28));

        sext_ln161_1_fu_1130_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_reg_1697_pp2_iter10_reg),28));

        sext_ln161_3_fu_1158_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln2_reg_1697_pp2_iter10_reg),28));

    sh_prom_i_i_i_cast_cast_cast_cast_cast_cast_fu_1292_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sh_prom_i_i_i_cast_cast_cast_cast_cast_fu_1289_p1),79));
        sh_prom_i_i_i_cast_cast_cast_cast_cast_fu_1289_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ush_reg_1803),32));

    shl_ln129_1_fu_948_p3 <= (window_buf_1_2_reg_1621_pp2_iter3_reg & ap_const_lv1_0);
    shl_ln136_1_fu_940_p3 <= (window_buf_2_1_reg_351 & ap_const_lv1_0);
    shl_ln1_fu_913_p3 <= (window_buf_0_1_reg_391 & ap_const_lv1_0);
    shl_ln2_fu_1010_p3 <= (sub_ln150_1_reg_1681 & ap_const_lv8_0);
    shl_ln_fu_873_p3 <= (ap_phi_mux_window_buf_1_1_3_phi_fu_384_p4 & ap_const_lv1_0);
    sub_ln129_1_fu_959_p2 <= std_logic_vector(unsigned(add_ln129_reg_1656) - unsigned(zext_ln129_2_fu_955_p1));
    sub_ln129_fu_895_p2 <= std_logic_vector(unsigned(window_buf_0_1_3_cast7_reg_1639) - unsigned(zext_ln129_fu_892_p1));
    sub_ln1311_fu_1258_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(p_Repl2_1_fu_1226_p4));
    sub_ln136_1_fu_989_p2 <= std_logic_vector(unsigned(sub_ln136_fu_981_p2) - unsigned(zext_ln136_3_fu_986_p1));
    sub_ln136_fu_981_p2 <= std_logic_vector(unsigned(zext_ln136_2_fu_978_p1) - unsigned(zext_ln129_3_reg_1650_pp2_iter3_reg));
    sub_ln150_1_fu_995_p2 <= std_logic_vector(unsigned(sub_ln136_1_fu_989_p2) - unsigned(zext_ln129_4_fu_969_p1));
    sub_ln150_fu_972_p2 <= std_logic_vector(unsigned(add_ln129_1_fu_964_p2) - unsigned(zext_ln129_4_fu_969_p1));
    tmp_11_fu_1039_p3 <= sext_ln150_1_reg_1710_pp2_iter7_reg(19 downto 19);
    tmp_12_fu_1067_p3 <= sext_ln150_1_reg_1710_pp2_iter7_reg(19 downto 19);
    tmp_13_fu_1123_p3 <= sext_ln150_1_reg_1710_pp2_iter10_reg(19 downto 19);
    tmp_14_fu_1151_p3 <= sext_ln150_1_reg_1710_pp2_iter10_reg(19 downto 19);
    tmp_15_fu_795_p4 <= select_ln95_fu_710_p3(9 downto 2);
    tmp_2_fu_462_p4 <= empty_reg_274(10 downto 9);
    tmp_3_fu_472_p3 <= (tmp_2_fu_462_p4 & ap_const_lv3_0);
    tmp_4_fu_744_p4 <= add_ln95_1_fu_718_p2(9 downto 2);
    tmp_5_fu_885_p3 <= (window_buf_2_2_reg_1627 & tmp_1_reg_1634);
    tmp_8_fu_1320_p4 <= r_V_1_fu_1302_p2(55 downto 24);
    tmp_9_fu_1308_p3 <= r_V_fu_1296_p2(24 downto 24);
    tmp_fu_664_p4 <= ap_phi_mux_yi_phi_fu_333_p4(9 downto 2);
    trunc_ln176_fu_1363_p1 <= p_Val2_3_reg_1814(8 - 1 downto 0);
    trunc_ln95_fu_732_p1 <= select_ln95_1_fu_724_p3(9 - 1 downto 0);
    ush_fu_1268_p3 <= 
        sext_ln1311_fu_1264_p1 when (isNeg_fu_1250_p3(0) = '1') else 
        add_ln340_fu_1244_p2;
    val_V_fu_1330_p3 <= 
        zext_ln662_fu_1316_p1 when (isNeg_reg_1798(0) = '1') else 
        tmp_8_fu_1320_p4;
    window_buf_0_1_0_load_reg_1514 <= ap_const_lv8_0;
    window_buf_0_1_3_cast7_fu_869_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_window_buf_0_1_3_phi_fu_404_p4),9));
    window_buf_0_2_0_load_reg_1519 <= ap_const_lv8_0;
    window_buf_1_1_0_load_reg_1524 <= ap_const_lv8_0;
    window_buf_1_2_0_load_reg_1529 <= ap_const_lv8_0;
    window_buf_2_1_0_load_reg_1534 <= ap_const_lv8_0;
    window_buf_2_2_0_load_reg_1539 <= ap_const_lv8_0;
    xor_ln157_1_fu_1093_p2 <= (icmp_ln157_3_fu_1088_p2 xor ap_const_lv1_1);
    xor_ln157_fu_1082_p2 <= (icmp_ln157_2_fu_1077_p2 xor ap_const_lv1_1);
    xor_ln174_fu_1366_p2 <= (or_ln174_2_reg_1593_pp2_iter35_reg xor ap_const_lv1_1);
    zext_ln109_fu_835_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln109_reg_1588),64));
    zext_ln129_1_fu_904_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_reg_1645),11));
    zext_ln129_2_fu_955_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln129_1_fu_948_p3),11));
    zext_ln129_3_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_window_buf_2_1_3_phi_fu_364_p4),11));
    zext_ln129_4_fu_969_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_2_2_reg_1627_pp2_iter3_reg),11));
    zext_ln129_fu_892_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(window_buf_0_2_reg_1615),9));
    zext_ln136_1_fu_930_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_fu_925_p2),10));
    zext_ln136_2_fu_978_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_1_reg_1661),11));
    zext_ln136_3_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln136_1_reg_1666),11));
    zext_ln136_fu_921_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_913_p3),10));
    zext_ln15_fu_1285_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_V_fu_1276_p4),79));
    zext_ln340_fu_1240_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Repl2_1_fu_1226_p4),9));
    zext_ln662_fu_1316_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_9_fu_1308_p3),32));
    zext_ln96_1_fu_785_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln95_fu_710_p3),18));
    zext_ln96_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln95_fu_710_p3),64));
end behav;
