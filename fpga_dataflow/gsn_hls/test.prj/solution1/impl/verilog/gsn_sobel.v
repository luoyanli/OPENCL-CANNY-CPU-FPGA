// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module gsn_sobel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_address0,
        data_ce0,
        data_q0,
        out_0_address0,
        out_0_ce0,
        out_0_we0,
        out_0_d0,
        out_1_address0,
        out_1_ce0,
        out_1_we0,
        out_1_d0
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_pp0_stage0 = 7'd2;
parameter    ap_ST_fsm_state4 = 7'd4;
parameter    ap_ST_fsm_state5 = 7'd8;
parameter    ap_ST_fsm_state6 = 7'd16;
parameter    ap_ST_fsm_pp2_stage0 = 7'd32;
parameter    ap_ST_fsm_state45 = 7'd64;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [17:0] data_address0;
output   data_ce0;
input  [7:0] data_q0;
output  [17:0] out_0_address0;
output   out_0_ce0;
output   out_0_we0;
output  [7:0] out_0_d0;
output  [17:0] out_1_address0;
output   out_1_ce0;
output   out_1_we0;
output  [7:0] out_1_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg data_ce0;
reg out_0_ce0;
reg out_0_we0;
reg out_1_ce0;
reg out_1_we0;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [10:0] empty_reg_274;
reg   [18:0] indvar_flatten_reg_318;
reg   [9:0] yi_reg_329;
reg   [9:0] xi_reg_340;
reg   [7:0] window_buf_2_1_reg_351;
reg   [7:0] window_buf_2_1_3_reg_361;
reg   [7:0] window_buf_1_1_reg_371;
reg   [7:0] window_buf_1_1_3_reg_381;
reg   [7:0] window_buf_0_1_reg_391;
reg   [7:0] window_buf_0_1_3_reg_401;
wire   [0:0] exitcond5216_fu_446_p2;
reg   [0:0] exitcond5216_reg_1438;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [10:0] empty_40_fu_452_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [8:0] empty_41_fu_458_p1;
reg   [8:0] empty_41_reg_1447;
wire   [1:0] tmp_2_fu_462_p4;
reg   [1:0] tmp_2_reg_1452;
wire   [4:0] tmp_3_fu_472_p3;
reg   [4:0] tmp_3_reg_1457;
wire   [4:0] empty_42_fu_480_p2;
reg   [4:0] empty_42_reg_1462;
wire   [0:0] empty_43_fu_486_p2;
reg   [0:0] empty_43_reg_1467;
wire   [4:0] empty_46_fu_500_p2;
reg   [4:0] empty_46_reg_1473;
wire   [7:0] window_buf_0_1_0_load_reg_1514;
wire    ap_CS_fsm_state5;
wire   [7:0] window_buf_0_2_0_load_reg_1519;
wire   [7:0] window_buf_1_1_0_load_reg_1524;
wire   [7:0] window_buf_1_2_0_load_reg_1529;
wire   [7:0] window_buf_2_1_0_load_reg_1534;
wire   [7:0] window_buf_2_2_0_load_reg_1539;
wire   [3:0] empty_56_fu_588_p2;
wire   [7:0] next_mul_fu_594_p2;
wire   [0:0] exitcond5115_fu_582_p2;
wire   [3:0] idx_urem_fu_656_p3;
wire   [0:0] icmp_ln95_fu_692_p2;
reg   [0:0] icmp_ln95_reg_1568;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state7_pp2_stage0_iter0;
wire    ap_block_state8_pp2_stage0_iter1;
wire    ap_block_state9_pp2_stage0_iter2;
wire    ap_block_state10_pp2_stage0_iter3;
wire    ap_block_state11_pp2_stage0_iter4;
wire    ap_block_state12_pp2_stage0_iter5;
wire    ap_block_state13_pp2_stage0_iter6;
wire    ap_block_state14_pp2_stage0_iter7;
wire    ap_block_state15_pp2_stage0_iter8;
wire    ap_block_state16_pp2_stage0_iter9;
wire    ap_block_state17_pp2_stage0_iter10;
wire    ap_block_state18_pp2_stage0_iter11;
wire    ap_block_state19_pp2_stage0_iter12;
wire    ap_block_state20_pp2_stage0_iter13;
wire    ap_block_state21_pp2_stage0_iter14;
wire    ap_block_state22_pp2_stage0_iter15;
wire    ap_block_state23_pp2_stage0_iter16;
wire    ap_block_state24_pp2_stage0_iter17;
wire    ap_block_state25_pp2_stage0_iter18;
wire    ap_block_state26_pp2_stage0_iter19;
wire    ap_block_state27_pp2_stage0_iter20;
wire    ap_block_state28_pp2_stage0_iter21;
wire    ap_block_state29_pp2_stage0_iter22;
wire    ap_block_state30_pp2_stage0_iter23;
wire    ap_block_state31_pp2_stage0_iter24;
wire    ap_block_state32_pp2_stage0_iter25;
wire    ap_block_state33_pp2_stage0_iter26;
wire    ap_block_state34_pp2_stage0_iter27;
wire    ap_block_state35_pp2_stage0_iter28;
wire    ap_block_state36_pp2_stage0_iter29;
wire    ap_block_state37_pp2_stage0_iter30;
wire    ap_block_state38_pp2_stage0_iter31;
wire    ap_block_state39_pp2_stage0_iter32;
wire    ap_block_state40_pp2_stage0_iter33;
wire    ap_block_state41_pp2_stage0_iter34;
wire    ap_block_state42_pp2_stage0_iter35;
wire    ap_block_state43_pp2_stage0_iter36;
wire    ap_block_state44_pp2_stage0_iter37;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter1_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter2_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter3_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter4_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter5_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter6_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter7_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter8_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter9_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter10_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter11_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter12_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter13_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter14_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter15_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter16_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter17_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter18_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter19_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter20_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter21_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter22_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter23_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter24_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter25_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter26_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter27_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter28_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter29_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter30_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter31_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter32_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter33_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter34_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter35_reg;
reg   [0:0] icmp_ln95_reg_1568_pp2_iter36_reg;
wire   [18:0] add_ln95_fu_698_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [9:0] select_ln95_1_fu_724_p3;
reg   [9:0] select_ln95_1_reg_1577;
reg   [8:0] line_buf_addr_1_reg_1582;
reg   [8:0] line_buf_addr_1_reg_1582_pp2_iter1_reg;
reg   [8:0] line_buf_addr_1_reg_1582_pp2_iter2_reg;
wire   [17:0] add_ln109_fu_789_p2;
reg   [17:0] add_ln109_reg_1588;
wire   [0:0] or_ln174_2_fu_823_p2;
reg   [0:0] or_ln174_2_reg_1593;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter1_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter2_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter3_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter4_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter5_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter6_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter7_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter8_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter9_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter10_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter11_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter12_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter13_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter14_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter15_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter16_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter17_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter18_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter19_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter20_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter21_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter22_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter23_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter24_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter25_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter26_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter27_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter28_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter29_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter30_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter31_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter32_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter33_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter34_reg;
reg   [0:0] or_ln174_2_reg_1593_pp2_iter35_reg;
wire   [9:0] add_ln96_fu_829_p2;
wire   [63:0] zext_ln109_fu_835_p1;
reg   [63:0] zext_ln109_reg_1604;
reg   [63:0] zext_ln109_reg_1604_pp2_iter2_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter3_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter4_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter5_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter6_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter7_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter8_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter9_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter10_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter11_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter12_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter13_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter14_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter15_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter16_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter17_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter18_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter19_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter20_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter21_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter22_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter23_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter24_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter25_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter26_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter27_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter28_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter29_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter30_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter31_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter32_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter33_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter34_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter35_reg;
reg   [63:0] zext_ln109_reg_1604_pp2_iter36_reg;
reg   [7:0] window_buf_0_2_reg_1615;
reg    ap_enable_reg_pp2_iter2;
reg   [7:0] window_buf_1_2_reg_1621;
reg   [7:0] window_buf_1_2_reg_1621_pp2_iter3_reg;
reg   [7:0] window_buf_2_2_reg_1627;
reg   [7:0] window_buf_2_2_reg_1627_pp2_iter3_reg;
reg   [15:0] tmp_1_reg_1634;
wire   [8:0] window_buf_0_1_3_cast7_fu_869_p1;
reg   [8:0] window_buf_0_1_3_cast7_reg_1639;
wire   [8:0] shl_ln_fu_873_p3;
reg   [8:0] shl_ln_reg_1645;
wire   [10:0] zext_ln129_3_fu_881_p1;
reg   [10:0] zext_ln129_3_reg_1650;
reg   [10:0] zext_ln129_3_reg_1650_pp2_iter3_reg;
wire   [10:0] add_ln129_fu_907_p2;
reg   [10:0] add_ln129_reg_1656;
wire   [9:0] add_ln136_1_fu_934_p2;
reg   [9:0] add_ln136_1_reg_1661;
wire   [8:0] shl_ln136_1_fu_940_p3;
reg   [8:0] shl_ln136_1_reg_1666;
wire  signed [10:0] sub_ln150_fu_972_p2;
reg  signed [10:0] sub_ln150_reg_1671;
reg  signed [10:0] sub_ln150_reg_1671_pp2_iter5_reg;
reg  signed [10:0] sub_ln150_reg_1671_pp2_iter6_reg;
reg  signed [10:0] sub_ln150_reg_1671_pp2_iter7_reg;
wire  signed [10:0] sub_ln150_1_fu_995_p2;
reg  signed [10:0] sub_ln150_1_reg_1681;
wire   [0:0] icmp_ln149_fu_1001_p2;
reg   [0:0] icmp_ln149_reg_1687;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter5_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter6_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter7_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter8_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter9_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter10_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter11_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter12_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter13_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter14_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter15_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter16_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter17_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter18_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter19_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter20_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter21_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter22_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter23_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter24_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter25_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter26_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter27_reg;
reg   [0:0] icmp_ln149_reg_1687_pp2_iter28_reg;
wire  signed [21:0] sext_ln140_fu_1007_p1;
wire  signed [18:0] shl_ln2_fu_1010_p3;
reg  signed [18:0] shl_ln2_reg_1697;
reg  signed [18:0] shl_ln2_reg_1697_pp2_iter6_reg;
reg  signed [18:0] shl_ln2_reg_1697_pp2_iter7_reg;
reg  signed [18:0] shl_ln2_reg_1697_pp2_iter8_reg;
reg  signed [18:0] shl_ln2_reg_1697_pp2_iter9_reg;
reg  signed [18:0] shl_ln2_reg_1697_pp2_iter10_reg;
wire  signed [19:0] sext_ln150_1_fu_1021_p1;
reg  signed [19:0] sext_ln150_1_reg_1710;
reg  signed [19:0] sext_ln150_1_reg_1710_pp2_iter6_reg;
reg  signed [19:0] sext_ln150_1_reg_1710_pp2_iter7_reg;
reg  signed [19:0] sext_ln150_1_reg_1710_pp2_iter8_reg;
reg  signed [19:0] sext_ln150_1_reg_1710_pp2_iter9_reg;
reg  signed [19:0] sext_ln150_1_reg_1710_pp2_iter10_reg;
wire  signed [21:0] sext_ln136_fu_1036_p1;
wire  signed [21:0] grp_fu_1392_p2;
wire   [0:0] and_ln157_fu_1107_p2;
reg   [0:0] and_ln157_reg_1740;
reg   [0:0] and_ln157_reg_1740_pp2_iter9_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter10_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter11_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter12_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter13_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter14_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter15_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter16_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter17_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter18_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter19_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter20_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter21_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter22_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter23_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter24_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter25_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter26_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter27_reg;
reg   [0:0] and_ln157_reg_1740_pp2_iter28_reg;
wire  signed [21:0] grp_fu_1414_p3;
reg  signed [21:0] add_ln140_reg_1754;
reg    ap_enable_reg_pp2_iter9;
wire   [0:0] and_ln161_fu_1179_p2;
reg   [0:0] and_ln161_reg_1764;
reg   [0:0] and_ln161_reg_1764_pp2_iter12_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter13_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter14_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter15_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter16_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter17_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter18_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter19_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter20_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter21_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter22_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter23_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter24_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter25_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter26_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter27_reg;
reg   [0:0] and_ln161_reg_1764_pp2_iter28_reg;
wire   [31:0] grp_fu_438_p1;
reg   [31:0] x_assign_reg_1768;
wire  signed [31:0] sext_ln150_2_fu_1185_p1;
wire   [7:0] select_ln165_fu_1207_p3;
wire   [31:0] grp_fu_441_p2;
reg   [31:0] f_reg_1783;
reg   [0:0] p_Result_s_reg_1788;
reg   [0:0] p_Result_s_reg_1788_pp2_iter34_reg;
wire   [22:0] p_Repl2_s_fu_1236_p1;
reg   [22:0] p_Repl2_s_reg_1793;
wire   [0:0] isNeg_fu_1250_p3;
reg   [0:0] isNeg_reg_1798;
wire   [8:0] ush_fu_1268_p3;
reg   [8:0] ush_reg_1803;
wire   [31:0] val_V_fu_1330_p3;
reg   [31:0] val_V_reg_1808;
wire   [31:0] p_Val2_3_fu_1342_p3;
reg   [31:0] p_Val2_3_reg_1814;
reg   [23:0] tmp_10_reg_1819;
wire   [7:0] select_ln174_1_fu_1384_p3;
reg   [7:0] select_ln174_1_reg_1824;
reg    ap_block_state1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state6;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_flush_enable;
reg    ap_enable_reg_pp2_iter1;
reg    ap_enable_reg_pp2_iter3;
reg    ap_condition_pp2_exit_iter2_state9;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter17;
reg    ap_enable_reg_pp2_iter18;
reg    ap_enable_reg_pp2_iter19;
reg    ap_enable_reg_pp2_iter20;
reg    ap_enable_reg_pp2_iter21;
reg    ap_enable_reg_pp2_iter22;
reg    ap_enable_reg_pp2_iter23;
reg    ap_enable_reg_pp2_iter24;
reg    ap_enable_reg_pp2_iter25;
reg    ap_enable_reg_pp2_iter26;
reg    ap_enable_reg_pp2_iter27;
reg    ap_enable_reg_pp2_iter28;
reg    ap_enable_reg_pp2_iter29;
reg    ap_enable_reg_pp2_iter30;
reg    ap_enable_reg_pp2_iter31;
reg    ap_enable_reg_pp2_iter32;
reg    ap_enable_reg_pp2_iter33;
reg    ap_enable_reg_pp2_iter34;
reg    ap_enable_reg_pp2_iter35;
reg    ap_enable_reg_pp2_iter36;
reg    ap_enable_reg_pp2_iter37;
reg   [8:0] line_buf_address0;
reg    line_buf_ce0;
reg   [2:0] line_buf_we0;
reg   [23:0] line_buf_d0;
reg    line_buf_ce1;
wire   [23:0] line_buf_q1;
reg   [3:0] empty_54_reg_285;
wire    ap_CS_fsm_state4;
reg   [7:0] phi_mul_reg_296;
reg   [3:0] phi_urem_reg_307;
reg   [9:0] ap_phi_mux_yi_phi_fu_333_p4;
wire    ap_block_pp2_stage0;
reg   [7:0] ap_phi_mux_window_buf_2_1_3_phi_fu_364_p4;
reg   [7:0] ap_phi_mux_window_buf_1_1_3_phi_fu_384_p4;
reg   [7:0] ap_phi_mux_window_buf_0_1_3_phi_fu_404_p4;
wire   [31:0] ap_phi_reg_pp2_iter0_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter1_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter2_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter3_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter4_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter5_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter6_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter7_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter8_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter9_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter10_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter11_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter12_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter13_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter14_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter15_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter16_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter17_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter18_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter19_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter20_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter21_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter22_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter23_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter24_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter25_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter26_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter27_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter28_t_int_06368_reg_411;
reg   [31:0] ap_phi_reg_pp2_iter29_t_int_06368_reg_411;
wire   [7:0] ap_phi_reg_pp2_iter0_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter1_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter2_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter3_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter4_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter5_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter6_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter7_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter8_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter9_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter10_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter11_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter12_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter13_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter14_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter15_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter16_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter17_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter18_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter19_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter20_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter21_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter22_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter23_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter24_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter25_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter26_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter27_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter28_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter29_grad_sobel_reg_422;
reg   [7:0] ap_phi_reg_pp2_iter30_grad_sobel_reg_422;
wire   [63:0] p_cast120_fu_506_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln96_fu_780_p1;
wire   [23:0] empty_52_fu_547_p2;
wire   [2:0] mask_fu_557_p2;
wire   [23:0] tmp_5_fu_885_p3;
wire  signed [31:0] grp_fu_438_p0;
wire   [4:0] empty_44_fu_492_p3;
wire   [4:0] empty_45_fu_510_p3;
wire   [23:0] empty_47_fu_515_p1;
wire   [23:0] empty_48_fu_519_p1;
wire   [23:0] empty_50_fu_529_p2;
wire   [23:0] empty_51_fu_535_p2;
wire   [23:0] empty_49_fu_522_p3;
wire   [23:0] p_demorgan_fu_541_p2;
wire   [2:0] empty_53_fu_554_p1;
wire   [3:0] next_urem_fu_644_p2;
wire   [0:0] empty_58_fu_650_p2;
wire   [7:0] tmp_fu_664_p4;
wire   [0:0] icmp_fu_674_p2;
wire   [0:0] cmp88_not_fu_680_p2;
wire   [0:0] icmp_ln96_fu_704_p2;
wire   [9:0] add_ln95_1_fu_718_p2;
wire   [8:0] trunc_ln95_fu_732_p1;
wire   [7:0] tmp_4_fu_744_p4;
wire   [0:0] icmp75_fu_754_p2;
wire   [0:0] cmp88_not_mid1_fu_760_p2;
wire   [0:0] or_ln174_4_fu_766_p2;
wire   [0:0] or_ln174_1_fu_686_p2;
wire   [9:0] select_ln95_fu_710_p3;
wire   [17:0] zext_ln96_1_fu_785_p1;
wire   [17:0] p_mid2_fu_736_p3;
wire   [7:0] tmp_15_fu_795_p4;
wire   [0:0] icmp_ln174_1_fu_811_p2;
wire   [0:0] icmp_ln174_fu_805_p2;
wire   [0:0] select_ln95_2_fu_772_p3;
wire   [0:0] or_ln174_fu_817_p2;
wire   [8:0] zext_ln129_fu_892_p1;
wire   [8:0] sub_ln129_fu_895_p2;
wire   [10:0] zext_ln129_1_fu_904_p1;
wire  signed [10:0] sext_ln129_fu_900_p1;
wire   [8:0] shl_ln1_fu_913_p3;
wire   [8:0] add_ln136_fu_925_p2;
wire   [9:0] zext_ln136_fu_921_p1;
wire   [9:0] zext_ln136_1_fu_930_p1;
wire   [8:0] shl_ln129_1_fu_948_p3;
wire   [10:0] zext_ln129_2_fu_955_p1;
wire   [10:0] sub_ln129_1_fu_959_p2;
wire   [10:0] add_ln129_1_fu_964_p2;
wire   [10:0] zext_ln129_4_fu_969_p1;
wire   [10:0] zext_ln136_2_fu_978_p1;
wire   [10:0] sub_ln136_fu_981_p2;
wire   [10:0] zext_ln136_3_fu_986_p1;
wire   [10:0] sub_ln136_1_fu_989_p2;
wire  signed [19:0] grp_fu_1024_p0;
wire  signed [30:0] sext_ln157_1_fu_1046_p1;
wire  signed [30:0] grp_fu_1398_p2;
wire   [0:0] tmp_11_fu_1039_p3;
wire   [0:0] icmp_ln157_fu_1049_p2;
wire   [0:0] icmp_ln157_1_fu_1054_p2;
wire  signed [27:0] sext_ln157_3_fu_1074_p1;
wire  signed [27:0] grp_fu_1406_p2;
wire   [0:0] icmp_ln157_2_fu_1077_p2;
wire   [0:0] icmp_ln157_3_fu_1088_p2;
wire   [0:0] tmp_12_fu_1067_p3;
wire   [0:0] xor_ln157_fu_1082_p2;
wire   [0:0] xor_ln157_1_fu_1093_p2;
wire   [0:0] select_ln157_fu_1059_p3;
wire   [0:0] select_ln157_1_fu_1099_p3;
wire  signed [27:0] sext_ln161_1_fu_1130_p1;
wire  signed [27:0] grp_fu_1422_p2;
wire   [0:0] tmp_13_fu_1123_p3;
wire   [0:0] icmp_ln161_fu_1133_p2;
wire   [0:0] icmp_ln161_1_fu_1138_p2;
wire  signed [27:0] sext_ln161_3_fu_1158_p1;
wire  signed [27:0] grp_fu_1430_p2;
wire   [0:0] tmp_14_fu_1151_p3;
wire   [0:0] icmp_ln161_2_fu_1161_p2;
wire   [0:0] icmp_ln161_3_fu_1166_p2;
wire   [0:0] select_ln161_fu_1143_p3;
wire   [0:0] select_ln161_1_fu_1171_p3;
wire   [19:0] grp_fu_1024_p2;
wire   [0:0] icmp_ln165_fu_1189_p2;
wire   [0:0] icmp_ln165_1_fu_1195_p2;
wire   [0:0] and_ln165_fu_1201_p2;
wire   [31:0] p_Val2_s_fu_1215_p1;
wire   [7:0] p_Repl2_1_fu_1226_p4;
wire   [8:0] zext_ln340_fu_1240_p1;
wire   [8:0] add_ln340_fu_1244_p2;
wire   [7:0] sub_ln1311_fu_1258_p2;
wire  signed [8:0] sext_ln1311_fu_1264_p1;
wire   [24:0] mantissa_V_fu_1276_p4;
wire  signed [31:0] sh_prom_i_i_i_cast_cast_cast_cast_cast_fu_1289_p1;
wire   [78:0] zext_ln15_fu_1285_p1;
wire   [78:0] sh_prom_i_i_i_cast_cast_cast_cast_cast_cast_fu_1292_p1;
wire   [78:0] r_V_fu_1296_p2;
wire   [0:0] tmp_9_fu_1308_p3;
wire   [78:0] r_V_1_fu_1302_p2;
wire   [31:0] zext_ln662_fu_1316_p1;
wire   [31:0] tmp_8_fu_1320_p4;
wire   [31:0] result_V_1_fu_1337_p2;
wire   [0:0] xor_ln174_fu_1366_p2;
wire   [0:0] icmp_ln143_fu_1358_p2;
wire   [0:0] or_ln174_3_fu_1379_p2;
wire   [7:0] select_ln174_fu_1371_p3;
wire   [7:0] trunc_ln176_fu_1363_p1;
wire  signed [10:0] grp_fu_1392_p0;
wire  signed [10:0] grp_fu_1392_p1;
wire  signed [10:0] grp_fu_1398_p1;
wire  signed [7:0] grp_fu_1406_p1;
wire  signed [10:0] grp_fu_1414_p0;
wire  signed [10:0] grp_fu_1414_p1;
wire  signed [7:0] grp_fu_1422_p1;
wire   [7:0] grp_fu_1430_p1;
wire    ap_CS_fsm_state45;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
reg    ap_condition_961;
reg    ap_condition_964;
reg    ap_condition_920;
reg    ap_condition_603;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp2_iter19 = 1'b0;
#0 ap_enable_reg_pp2_iter20 = 1'b0;
#0 ap_enable_reg_pp2_iter21 = 1'b0;
#0 ap_enable_reg_pp2_iter22 = 1'b0;
#0 ap_enable_reg_pp2_iter23 = 1'b0;
#0 ap_enable_reg_pp2_iter24 = 1'b0;
#0 ap_enable_reg_pp2_iter25 = 1'b0;
#0 ap_enable_reg_pp2_iter26 = 1'b0;
#0 ap_enable_reg_pp2_iter27 = 1'b0;
#0 ap_enable_reg_pp2_iter28 = 1'b0;
#0 ap_enable_reg_pp2_iter29 = 1'b0;
#0 ap_enable_reg_pp2_iter30 = 1'b0;
#0 ap_enable_reg_pp2_iter31 = 1'b0;
#0 ap_enable_reg_pp2_iter32 = 1'b0;
#0 ap_enable_reg_pp2_iter33 = 1'b0;
#0 ap_enable_reg_pp2_iter34 = 1'b0;
#0 ap_enable_reg_pp2_iter35 = 1'b0;
#0 ap_enable_reg_pp2_iter36 = 1'b0;
#0 ap_enable_reg_pp2_iter37 = 1'b0;
end

gsn_gau6_line_buf #(
    .DataWidth( 24 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
line_buf_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(line_buf_address0),
    .ce0(line_buf_ce0),
    .we0(line_buf_we0),
    .d0(line_buf_d0),
    .address1(line_buf_addr_1_reg_1582),
    .ce1(line_buf_ce1),
    .q1(line_buf_q1)
);

gsn_sitofp_32s_32_6_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
sitofp_32s_32_6_no_dsp_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_438_p0),
    .ce(1'b1),
    .dout(grp_fu_438_p1)
);

gsn_fsqrt_32ns_32ns_32_17_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 17 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsqrt_32ns_32ns_32_17_no_dsp_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(x_assign_reg_1768),
    .ce(1'b1),
    .dout(grp_fu_441_p2)
);

gsn_sdiv_20s_11s_20_24_1 #(
    .ID( 1 ),
    .NUM_STAGE( 24 ),
    .din0_WIDTH( 20 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 20 ))
sdiv_20s_11s_20_24_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1024_p0),
    .din1(sub_ln150_reg_1671),
    .ce(1'b1),
    .dout(grp_fu_1024_p2)
);

gsn_mul_mul_11s_11s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 22 ))
mul_mul_11s_11s_22_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1392_p0),
    .din1(grp_fu_1392_p1),
    .ce(1'b1),
    .dout(grp_fu_1392_p2)
);

gsn_mul_mul_11s_11s_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .dout_WIDTH( 31 ))
mul_mul_11s_11s_31_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln150_reg_1671),
    .din1(grp_fu_1398_p1),
    .ce(1'b1),
    .dout(grp_fu_1398_p2)
);

gsn_mul_mul_11s_8s_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 28 ))
mul_mul_11s_8s_28_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln150_reg_1671),
    .din1(grp_fu_1406_p1),
    .ce(1'b1),
    .dout(grp_fu_1406_p2)
);

gsn_mac_muladd_11s_11s_22s_22_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 11 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 22 ))
mac_muladd_11s_11s_22s_22_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1414_p0),
    .din1(grp_fu_1414_p1),
    .din2(grp_fu_1392_p2),
    .ce(1'b1),
    .dout(grp_fu_1414_p3)
);

gsn_mul_mul_11s_8s_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 28 ))
mul_mul_11s_8s_28_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln150_reg_1671_pp2_iter7_reg),
    .din1(grp_fu_1422_p1),
    .ce(1'b1),
    .dout(grp_fu_1422_p2)
);

gsn_mul_mul_11s_8ns_28_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 11 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 28 ))
mul_mul_11s_8ns_28_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sub_ln150_reg_1671_pp2_iter7_reg),
    .din1(grp_fu_1430_p1),
    .ce(1'b1),
    .dout(grp_fu_1430_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp2_flush_enable)) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter24 <= ap_enable_reg_pp2_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter25 <= ap_enable_reg_pp2_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter26 <= ap_enable_reg_pp2_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter27 <= ap_enable_reg_pp2_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter28 <= ap_enable_reg_pp2_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter29 <= ap_enable_reg_pp2_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter2_state9)) begin
                ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter1;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter30 <= ap_enable_reg_pp2_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter31 <= ap_enable_reg_pp2_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter32 <= ap_enable_reg_pp2_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter33 <= ap_enable_reg_pp2_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter34 <= ap_enable_reg_pp2_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter35 <= ap_enable_reg_pp2_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter36 <= ap_enable_reg_pp2_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter37 <= ap_enable_reg_pp2_iter36;
        end else if ((1'b1 == ap_CS_fsm_state6)) begin
            ap_enable_reg_pp2_iter37 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        if ((1'b1 == ap_condition_961)) begin
            ap_phi_reg_pp2_iter10_grad_sobel_reg_422 <= 8'd135;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter10_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter9_grad_sobel_reg_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter28 == 1'b1))) begin
        if ((1'b1 == ap_condition_964)) begin
            ap_phi_reg_pp2_iter29_grad_sobel_reg_422 <= 8'd0;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter29_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter28_grad_sobel_reg_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter28 == 1'b1))) begin
        if ((1'b1 == ap_condition_920)) begin
            ap_phi_reg_pp2_iter29_t_int_06368_reg_411 <= sext_ln150_2_fu_1185_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter29_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter28_t_int_06368_reg_411;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter29 == 1'b1))) begin
        if ((1'b1 == ap_condition_603)) begin
            ap_phi_reg_pp2_iter30_grad_sobel_reg_422 <= select_ln165_fu_1207_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter30_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter29_grad_sobel_reg_422;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        if (((icmp_ln149_reg_1687 == 1'd1) & (icmp_ln95_reg_1568_pp2_iter4_reg == 1'd0))) begin
            ap_phi_reg_pp2_iter6_t_int_06368_reg_411 <= 32'd2147483647;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp2_iter6_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter5_t_int_06368_reg_411;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        empty_54_reg_285 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond5115_fu_582_p2 == 1'd0))) begin
        empty_54_reg_285 <= empty_56_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond5216_fu_446_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_reg_274 <= empty_40_fu_452_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_reg_274 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        indvar_flatten_reg_318 <= 19'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln95_fu_692_p2 == 1'd0))) begin
        indvar_flatten_reg_318 <= add_ln95_fu_698_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_mul_reg_296 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond5115_fu_582_p2 == 1'd0))) begin
        phi_mul_reg_296 <= next_mul_fu_594_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        phi_urem_reg_307 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state5) & (exitcond5115_fu_582_p2 == 1'd0))) begin
        phi_urem_reg_307 <= idx_urem_fu_656_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_0_1_3_reg_401 <= window_buf_0_1_0_load_reg_1514;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter2_reg == 1'd0))) begin
        window_buf_0_1_3_reg_401 <= window_buf_0_1_reg_391;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_0_1_reg_391 <= window_buf_0_2_0_load_reg_1519;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter2_reg == 1'd0))) begin
        window_buf_0_1_reg_391 <= window_buf_0_2_reg_1615;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_1_1_3_reg_381 <= window_buf_1_1_0_load_reg_1524;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter2_reg == 1'd0))) begin
        window_buf_1_1_3_reg_381 <= window_buf_1_1_reg_371;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_1_1_reg_371 <= window_buf_1_2_0_load_reg_1529;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter2_reg == 1'd0))) begin
        window_buf_1_1_reg_371 <= window_buf_1_2_reg_1621;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_2_1_3_reg_361 <= window_buf_2_1_0_load_reg_1534;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter2_reg == 1'd0))) begin
        window_buf_2_1_3_reg_361 <= window_buf_2_1_reg_351;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        window_buf_2_1_reg_351 <= window_buf_2_2_0_load_reg_1539;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter2_reg == 1'd0))) begin
        window_buf_2_1_reg_351 <= window_buf_2_2_reg_1627;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        xi_reg_340 <= 10'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln95_fu_692_p2 == 1'd0))) begin
        xi_reg_340 <= add_ln96_fu_829_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        yi_reg_329 <= 10'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln95_reg_1568 == 1'd0))) begin
        yi_reg_329 <= select_ln95_1_reg_1577;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln95_fu_692_p2 == 1'd0))) begin
        add_ln109_reg_1588 <= add_ln109_fu_789_p2;
        line_buf_addr_1_reg_1582 <= zext_ln96_fu_780_p1;
        or_ln174_2_reg_1593 <= or_ln174_2_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln95_reg_1568_pp2_iter2_reg == 1'd0))) begin
        add_ln129_reg_1656 <= add_ln129_fu_907_p2;
        add_ln136_1_reg_1661 <= add_ln136_1_fu_934_p2;
        shl_ln136_1_reg_1666[8 : 1] <= shl_ln136_1_fu_940_p3[8 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter8_reg == 1'd0))) begin
        add_ln140_reg_1754 <= grp_fu_1414_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln149_reg_1687_pp2_iter7_reg == 1'd0) & (icmp_ln95_reg_1568_pp2_iter7_reg == 1'd0))) begin
        and_ln157_reg_1740 <= and_ln157_fu_1107_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        and_ln157_reg_1740_pp2_iter10_reg <= and_ln157_reg_1740_pp2_iter9_reg;
        and_ln157_reg_1740_pp2_iter11_reg <= and_ln157_reg_1740_pp2_iter10_reg;
        and_ln157_reg_1740_pp2_iter12_reg <= and_ln157_reg_1740_pp2_iter11_reg;
        and_ln157_reg_1740_pp2_iter13_reg <= and_ln157_reg_1740_pp2_iter12_reg;
        and_ln157_reg_1740_pp2_iter14_reg <= and_ln157_reg_1740_pp2_iter13_reg;
        and_ln157_reg_1740_pp2_iter15_reg <= and_ln157_reg_1740_pp2_iter14_reg;
        and_ln157_reg_1740_pp2_iter16_reg <= and_ln157_reg_1740_pp2_iter15_reg;
        and_ln157_reg_1740_pp2_iter17_reg <= and_ln157_reg_1740_pp2_iter16_reg;
        and_ln157_reg_1740_pp2_iter18_reg <= and_ln157_reg_1740_pp2_iter17_reg;
        and_ln157_reg_1740_pp2_iter19_reg <= and_ln157_reg_1740_pp2_iter18_reg;
        and_ln157_reg_1740_pp2_iter20_reg <= and_ln157_reg_1740_pp2_iter19_reg;
        and_ln157_reg_1740_pp2_iter21_reg <= and_ln157_reg_1740_pp2_iter20_reg;
        and_ln157_reg_1740_pp2_iter22_reg <= and_ln157_reg_1740_pp2_iter21_reg;
        and_ln157_reg_1740_pp2_iter23_reg <= and_ln157_reg_1740_pp2_iter22_reg;
        and_ln157_reg_1740_pp2_iter24_reg <= and_ln157_reg_1740_pp2_iter23_reg;
        and_ln157_reg_1740_pp2_iter25_reg <= and_ln157_reg_1740_pp2_iter24_reg;
        and_ln157_reg_1740_pp2_iter26_reg <= and_ln157_reg_1740_pp2_iter25_reg;
        and_ln157_reg_1740_pp2_iter27_reg <= and_ln157_reg_1740_pp2_iter26_reg;
        and_ln157_reg_1740_pp2_iter28_reg <= and_ln157_reg_1740_pp2_iter27_reg;
        and_ln157_reg_1740_pp2_iter9_reg <= and_ln157_reg_1740;
        and_ln161_reg_1764_pp2_iter12_reg <= and_ln161_reg_1764;
        and_ln161_reg_1764_pp2_iter13_reg <= and_ln161_reg_1764_pp2_iter12_reg;
        and_ln161_reg_1764_pp2_iter14_reg <= and_ln161_reg_1764_pp2_iter13_reg;
        and_ln161_reg_1764_pp2_iter15_reg <= and_ln161_reg_1764_pp2_iter14_reg;
        and_ln161_reg_1764_pp2_iter16_reg <= and_ln161_reg_1764_pp2_iter15_reg;
        and_ln161_reg_1764_pp2_iter17_reg <= and_ln161_reg_1764_pp2_iter16_reg;
        and_ln161_reg_1764_pp2_iter18_reg <= and_ln161_reg_1764_pp2_iter17_reg;
        and_ln161_reg_1764_pp2_iter19_reg <= and_ln161_reg_1764_pp2_iter18_reg;
        and_ln161_reg_1764_pp2_iter20_reg <= and_ln161_reg_1764_pp2_iter19_reg;
        and_ln161_reg_1764_pp2_iter21_reg <= and_ln161_reg_1764_pp2_iter20_reg;
        and_ln161_reg_1764_pp2_iter22_reg <= and_ln161_reg_1764_pp2_iter21_reg;
        and_ln161_reg_1764_pp2_iter23_reg <= and_ln161_reg_1764_pp2_iter22_reg;
        and_ln161_reg_1764_pp2_iter24_reg <= and_ln161_reg_1764_pp2_iter23_reg;
        and_ln161_reg_1764_pp2_iter25_reg <= and_ln161_reg_1764_pp2_iter24_reg;
        and_ln161_reg_1764_pp2_iter26_reg <= and_ln161_reg_1764_pp2_iter25_reg;
        and_ln161_reg_1764_pp2_iter27_reg <= and_ln161_reg_1764_pp2_iter26_reg;
        and_ln161_reg_1764_pp2_iter28_reg <= and_ln161_reg_1764_pp2_iter27_reg;
        icmp_ln149_reg_1687_pp2_iter10_reg <= icmp_ln149_reg_1687_pp2_iter9_reg;
        icmp_ln149_reg_1687_pp2_iter11_reg <= icmp_ln149_reg_1687_pp2_iter10_reg;
        icmp_ln149_reg_1687_pp2_iter12_reg <= icmp_ln149_reg_1687_pp2_iter11_reg;
        icmp_ln149_reg_1687_pp2_iter13_reg <= icmp_ln149_reg_1687_pp2_iter12_reg;
        icmp_ln149_reg_1687_pp2_iter14_reg <= icmp_ln149_reg_1687_pp2_iter13_reg;
        icmp_ln149_reg_1687_pp2_iter15_reg <= icmp_ln149_reg_1687_pp2_iter14_reg;
        icmp_ln149_reg_1687_pp2_iter16_reg <= icmp_ln149_reg_1687_pp2_iter15_reg;
        icmp_ln149_reg_1687_pp2_iter17_reg <= icmp_ln149_reg_1687_pp2_iter16_reg;
        icmp_ln149_reg_1687_pp2_iter18_reg <= icmp_ln149_reg_1687_pp2_iter17_reg;
        icmp_ln149_reg_1687_pp2_iter19_reg <= icmp_ln149_reg_1687_pp2_iter18_reg;
        icmp_ln149_reg_1687_pp2_iter20_reg <= icmp_ln149_reg_1687_pp2_iter19_reg;
        icmp_ln149_reg_1687_pp2_iter21_reg <= icmp_ln149_reg_1687_pp2_iter20_reg;
        icmp_ln149_reg_1687_pp2_iter22_reg <= icmp_ln149_reg_1687_pp2_iter21_reg;
        icmp_ln149_reg_1687_pp2_iter23_reg <= icmp_ln149_reg_1687_pp2_iter22_reg;
        icmp_ln149_reg_1687_pp2_iter24_reg <= icmp_ln149_reg_1687_pp2_iter23_reg;
        icmp_ln149_reg_1687_pp2_iter25_reg <= icmp_ln149_reg_1687_pp2_iter24_reg;
        icmp_ln149_reg_1687_pp2_iter26_reg <= icmp_ln149_reg_1687_pp2_iter25_reg;
        icmp_ln149_reg_1687_pp2_iter27_reg <= icmp_ln149_reg_1687_pp2_iter26_reg;
        icmp_ln149_reg_1687_pp2_iter28_reg <= icmp_ln149_reg_1687_pp2_iter27_reg;
        icmp_ln149_reg_1687_pp2_iter5_reg <= icmp_ln149_reg_1687;
        icmp_ln149_reg_1687_pp2_iter6_reg <= icmp_ln149_reg_1687_pp2_iter5_reg;
        icmp_ln149_reg_1687_pp2_iter7_reg <= icmp_ln149_reg_1687_pp2_iter6_reg;
        icmp_ln149_reg_1687_pp2_iter8_reg <= icmp_ln149_reg_1687_pp2_iter7_reg;
        icmp_ln149_reg_1687_pp2_iter9_reg <= icmp_ln149_reg_1687_pp2_iter8_reg;
        icmp_ln95_reg_1568_pp2_iter10_reg <= icmp_ln95_reg_1568_pp2_iter9_reg;
        icmp_ln95_reg_1568_pp2_iter11_reg <= icmp_ln95_reg_1568_pp2_iter10_reg;
        icmp_ln95_reg_1568_pp2_iter12_reg <= icmp_ln95_reg_1568_pp2_iter11_reg;
        icmp_ln95_reg_1568_pp2_iter13_reg <= icmp_ln95_reg_1568_pp2_iter12_reg;
        icmp_ln95_reg_1568_pp2_iter14_reg <= icmp_ln95_reg_1568_pp2_iter13_reg;
        icmp_ln95_reg_1568_pp2_iter15_reg <= icmp_ln95_reg_1568_pp2_iter14_reg;
        icmp_ln95_reg_1568_pp2_iter16_reg <= icmp_ln95_reg_1568_pp2_iter15_reg;
        icmp_ln95_reg_1568_pp2_iter17_reg <= icmp_ln95_reg_1568_pp2_iter16_reg;
        icmp_ln95_reg_1568_pp2_iter18_reg <= icmp_ln95_reg_1568_pp2_iter17_reg;
        icmp_ln95_reg_1568_pp2_iter19_reg <= icmp_ln95_reg_1568_pp2_iter18_reg;
        icmp_ln95_reg_1568_pp2_iter20_reg <= icmp_ln95_reg_1568_pp2_iter19_reg;
        icmp_ln95_reg_1568_pp2_iter21_reg <= icmp_ln95_reg_1568_pp2_iter20_reg;
        icmp_ln95_reg_1568_pp2_iter22_reg <= icmp_ln95_reg_1568_pp2_iter21_reg;
        icmp_ln95_reg_1568_pp2_iter23_reg <= icmp_ln95_reg_1568_pp2_iter22_reg;
        icmp_ln95_reg_1568_pp2_iter24_reg <= icmp_ln95_reg_1568_pp2_iter23_reg;
        icmp_ln95_reg_1568_pp2_iter25_reg <= icmp_ln95_reg_1568_pp2_iter24_reg;
        icmp_ln95_reg_1568_pp2_iter26_reg <= icmp_ln95_reg_1568_pp2_iter25_reg;
        icmp_ln95_reg_1568_pp2_iter27_reg <= icmp_ln95_reg_1568_pp2_iter26_reg;
        icmp_ln95_reg_1568_pp2_iter28_reg <= icmp_ln95_reg_1568_pp2_iter27_reg;
        icmp_ln95_reg_1568_pp2_iter29_reg <= icmp_ln95_reg_1568_pp2_iter28_reg;
        icmp_ln95_reg_1568_pp2_iter2_reg <= icmp_ln95_reg_1568_pp2_iter1_reg;
        icmp_ln95_reg_1568_pp2_iter30_reg <= icmp_ln95_reg_1568_pp2_iter29_reg;
        icmp_ln95_reg_1568_pp2_iter31_reg <= icmp_ln95_reg_1568_pp2_iter30_reg;
        icmp_ln95_reg_1568_pp2_iter32_reg <= icmp_ln95_reg_1568_pp2_iter31_reg;
        icmp_ln95_reg_1568_pp2_iter33_reg <= icmp_ln95_reg_1568_pp2_iter32_reg;
        icmp_ln95_reg_1568_pp2_iter34_reg <= icmp_ln95_reg_1568_pp2_iter33_reg;
        icmp_ln95_reg_1568_pp2_iter35_reg <= icmp_ln95_reg_1568_pp2_iter34_reg;
        icmp_ln95_reg_1568_pp2_iter36_reg <= icmp_ln95_reg_1568_pp2_iter35_reg;
        icmp_ln95_reg_1568_pp2_iter3_reg <= icmp_ln95_reg_1568_pp2_iter2_reg;
        icmp_ln95_reg_1568_pp2_iter4_reg <= icmp_ln95_reg_1568_pp2_iter3_reg;
        icmp_ln95_reg_1568_pp2_iter5_reg <= icmp_ln95_reg_1568_pp2_iter4_reg;
        icmp_ln95_reg_1568_pp2_iter6_reg <= icmp_ln95_reg_1568_pp2_iter5_reg;
        icmp_ln95_reg_1568_pp2_iter7_reg <= icmp_ln95_reg_1568_pp2_iter6_reg;
        icmp_ln95_reg_1568_pp2_iter8_reg <= icmp_ln95_reg_1568_pp2_iter7_reg;
        icmp_ln95_reg_1568_pp2_iter9_reg <= icmp_ln95_reg_1568_pp2_iter8_reg;
        line_buf_addr_1_reg_1582_pp2_iter2_reg <= line_buf_addr_1_reg_1582_pp2_iter1_reg;
        or_ln174_2_reg_1593_pp2_iter10_reg <= or_ln174_2_reg_1593_pp2_iter9_reg;
        or_ln174_2_reg_1593_pp2_iter11_reg <= or_ln174_2_reg_1593_pp2_iter10_reg;
        or_ln174_2_reg_1593_pp2_iter12_reg <= or_ln174_2_reg_1593_pp2_iter11_reg;
        or_ln174_2_reg_1593_pp2_iter13_reg <= or_ln174_2_reg_1593_pp2_iter12_reg;
        or_ln174_2_reg_1593_pp2_iter14_reg <= or_ln174_2_reg_1593_pp2_iter13_reg;
        or_ln174_2_reg_1593_pp2_iter15_reg <= or_ln174_2_reg_1593_pp2_iter14_reg;
        or_ln174_2_reg_1593_pp2_iter16_reg <= or_ln174_2_reg_1593_pp2_iter15_reg;
        or_ln174_2_reg_1593_pp2_iter17_reg <= or_ln174_2_reg_1593_pp2_iter16_reg;
        or_ln174_2_reg_1593_pp2_iter18_reg <= or_ln174_2_reg_1593_pp2_iter17_reg;
        or_ln174_2_reg_1593_pp2_iter19_reg <= or_ln174_2_reg_1593_pp2_iter18_reg;
        or_ln174_2_reg_1593_pp2_iter20_reg <= or_ln174_2_reg_1593_pp2_iter19_reg;
        or_ln174_2_reg_1593_pp2_iter21_reg <= or_ln174_2_reg_1593_pp2_iter20_reg;
        or_ln174_2_reg_1593_pp2_iter22_reg <= or_ln174_2_reg_1593_pp2_iter21_reg;
        or_ln174_2_reg_1593_pp2_iter23_reg <= or_ln174_2_reg_1593_pp2_iter22_reg;
        or_ln174_2_reg_1593_pp2_iter24_reg <= or_ln174_2_reg_1593_pp2_iter23_reg;
        or_ln174_2_reg_1593_pp2_iter25_reg <= or_ln174_2_reg_1593_pp2_iter24_reg;
        or_ln174_2_reg_1593_pp2_iter26_reg <= or_ln174_2_reg_1593_pp2_iter25_reg;
        or_ln174_2_reg_1593_pp2_iter27_reg <= or_ln174_2_reg_1593_pp2_iter26_reg;
        or_ln174_2_reg_1593_pp2_iter28_reg <= or_ln174_2_reg_1593_pp2_iter27_reg;
        or_ln174_2_reg_1593_pp2_iter29_reg <= or_ln174_2_reg_1593_pp2_iter28_reg;
        or_ln174_2_reg_1593_pp2_iter2_reg <= or_ln174_2_reg_1593_pp2_iter1_reg;
        or_ln174_2_reg_1593_pp2_iter30_reg <= or_ln174_2_reg_1593_pp2_iter29_reg;
        or_ln174_2_reg_1593_pp2_iter31_reg <= or_ln174_2_reg_1593_pp2_iter30_reg;
        or_ln174_2_reg_1593_pp2_iter32_reg <= or_ln174_2_reg_1593_pp2_iter31_reg;
        or_ln174_2_reg_1593_pp2_iter33_reg <= or_ln174_2_reg_1593_pp2_iter32_reg;
        or_ln174_2_reg_1593_pp2_iter34_reg <= or_ln174_2_reg_1593_pp2_iter33_reg;
        or_ln174_2_reg_1593_pp2_iter35_reg <= or_ln174_2_reg_1593_pp2_iter34_reg;
        or_ln174_2_reg_1593_pp2_iter3_reg <= or_ln174_2_reg_1593_pp2_iter2_reg;
        or_ln174_2_reg_1593_pp2_iter4_reg <= or_ln174_2_reg_1593_pp2_iter3_reg;
        or_ln174_2_reg_1593_pp2_iter5_reg <= or_ln174_2_reg_1593_pp2_iter4_reg;
        or_ln174_2_reg_1593_pp2_iter6_reg <= or_ln174_2_reg_1593_pp2_iter5_reg;
        or_ln174_2_reg_1593_pp2_iter7_reg <= or_ln174_2_reg_1593_pp2_iter6_reg;
        or_ln174_2_reg_1593_pp2_iter8_reg <= or_ln174_2_reg_1593_pp2_iter7_reg;
        or_ln174_2_reg_1593_pp2_iter9_reg <= or_ln174_2_reg_1593_pp2_iter8_reg;
        p_Result_s_reg_1788_pp2_iter34_reg <= p_Result_s_reg_1788;
        sext_ln150_1_reg_1710_pp2_iter10_reg <= sext_ln150_1_reg_1710_pp2_iter9_reg;
        sext_ln150_1_reg_1710_pp2_iter6_reg <= sext_ln150_1_reg_1710;
        sext_ln150_1_reg_1710_pp2_iter7_reg <= sext_ln150_1_reg_1710_pp2_iter6_reg;
        sext_ln150_1_reg_1710_pp2_iter8_reg <= sext_ln150_1_reg_1710_pp2_iter7_reg;
        sext_ln150_1_reg_1710_pp2_iter9_reg <= sext_ln150_1_reg_1710_pp2_iter8_reg;
        shl_ln2_reg_1697_pp2_iter10_reg[18 : 8] <= shl_ln2_reg_1697_pp2_iter9_reg[18 : 8];
        shl_ln2_reg_1697_pp2_iter6_reg[18 : 8] <= shl_ln2_reg_1697[18 : 8];
        shl_ln2_reg_1697_pp2_iter7_reg[18 : 8] <= shl_ln2_reg_1697_pp2_iter6_reg[18 : 8];
        shl_ln2_reg_1697_pp2_iter8_reg[18 : 8] <= shl_ln2_reg_1697_pp2_iter7_reg[18 : 8];
        shl_ln2_reg_1697_pp2_iter9_reg[18 : 8] <= shl_ln2_reg_1697_pp2_iter8_reg[18 : 8];
        sub_ln150_reg_1671_pp2_iter5_reg <= sub_ln150_reg_1671;
        sub_ln150_reg_1671_pp2_iter6_reg <= sub_ln150_reg_1671_pp2_iter5_reg;
        sub_ln150_reg_1671_pp2_iter7_reg <= sub_ln150_reg_1671_pp2_iter6_reg;
        window_buf_1_2_reg_1621_pp2_iter3_reg <= window_buf_1_2_reg_1621;
        window_buf_2_2_reg_1627_pp2_iter3_reg <= window_buf_2_2_reg_1627;
        zext_ln109_reg_1604_pp2_iter10_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter9_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter11_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter10_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter12_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter11_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter13_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter12_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter14_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter13_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter15_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter14_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter16_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter15_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter17_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter16_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter18_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter17_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter19_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter18_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter20_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter19_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter21_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter20_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter22_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter21_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter23_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter22_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter24_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter23_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter25_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter24_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter26_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter25_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter27_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter26_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter28_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter27_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter29_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter28_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter2_reg[17 : 0] <= zext_ln109_reg_1604[17 : 0];
        zext_ln109_reg_1604_pp2_iter30_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter29_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter31_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter30_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter32_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter31_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter33_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter32_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter34_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter33_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter35_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter34_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter36_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter35_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter3_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter2_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter4_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter3_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter5_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter4_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter6_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter5_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter7_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter6_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter8_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter7_reg[17 : 0];
        zext_ln109_reg_1604_pp2_iter9_reg[17 : 0] <= zext_ln109_reg_1604_pp2_iter8_reg[17 : 0];
        zext_ln129_3_reg_1650_pp2_iter3_reg[7 : 0] <= zext_ln129_3_reg_1650[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln157_reg_1740_pp2_iter10_reg) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln149_reg_1687_pp2_iter10_reg == 1'd0) & (icmp_ln95_reg_1568_pp2_iter10_reg == 1'd0))) begin
        and_ln161_reg_1764 <= and_ln161_fu_1179_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter9 == 1'b1))) begin
        ap_phi_reg_pp2_iter10_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter9_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter10 == 1'b1))) begin
        ap_phi_reg_pp2_iter11_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter10_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter11_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter10_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter11 == 1'b1))) begin
        ap_phi_reg_pp2_iter12_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter11_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter12_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter11_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter12 == 1'b1))) begin
        ap_phi_reg_pp2_iter13_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter12_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter13_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter12_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter13 == 1'b1))) begin
        ap_phi_reg_pp2_iter14_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter13_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter14_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter13_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter14 == 1'b1))) begin
        ap_phi_reg_pp2_iter15_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter14_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter15_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter14_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter15 == 1'b1))) begin
        ap_phi_reg_pp2_iter16_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter15_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter16_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter15_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter16 == 1'b1))) begin
        ap_phi_reg_pp2_iter17_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter16_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter17_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter16_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter17 == 1'b1))) begin
        ap_phi_reg_pp2_iter18_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter17_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter18_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter17_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter18 == 1'b1))) begin
        ap_phi_reg_pp2_iter19_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter18_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter19_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter18_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_reg_pp2_iter1_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter0_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter1_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter0_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter19 == 1'b1))) begin
        ap_phi_reg_pp2_iter20_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter19_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter20_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter19_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter20 == 1'b1))) begin
        ap_phi_reg_pp2_iter21_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter20_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter21_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter20_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter21 == 1'b1))) begin
        ap_phi_reg_pp2_iter22_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter21_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter22_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter21_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter22 == 1'b1))) begin
        ap_phi_reg_pp2_iter23_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter22_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter23_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter22_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter23 == 1'b1))) begin
        ap_phi_reg_pp2_iter24_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter23_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter24_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter23_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter24 == 1'b1))) begin
        ap_phi_reg_pp2_iter25_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter24_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter25_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter24_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter25 == 1'b1))) begin
        ap_phi_reg_pp2_iter26_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter25_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter26_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter25_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter26 == 1'b1))) begin
        ap_phi_reg_pp2_iter27_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter26_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter27_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter26_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter27 == 1'b1))) begin
        ap_phi_reg_pp2_iter28_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter27_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter28_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter27_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        ap_phi_reg_pp2_iter2_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter1_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter2_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter1_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        ap_phi_reg_pp2_iter3_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter2_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter3_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter2_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        ap_phi_reg_pp2_iter4_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter3_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter4_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter3_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter4 == 1'b1))) begin
        ap_phi_reg_pp2_iter5_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter4_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter5_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter4_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter5 == 1'b1))) begin
        ap_phi_reg_pp2_iter6_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter5_grad_sobel_reg_422;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter6 == 1'b1))) begin
        ap_phi_reg_pp2_iter7_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter6_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter7_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter6_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter7 == 1'b1))) begin
        ap_phi_reg_pp2_iter8_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter7_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter8_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter7_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter8 == 1'b1))) begin
        ap_phi_reg_pp2_iter9_grad_sobel_reg_422 <= ap_phi_reg_pp2_iter8_grad_sobel_reg_422;
        ap_phi_reg_pp2_iter9_t_int_06368_reg_411 <= ap_phi_reg_pp2_iter8_t_int_06368_reg_411;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond5216_fu_446_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_41_reg_1447 <= empty_41_fu_458_p1;
        empty_42_reg_1462[4 : 3] <= empty_42_fu_480_p2[4 : 3];
        empty_43_reg_1467 <= empty_43_fu_486_p2;
        empty_46_reg_1473 <= empty_46_fu_500_p2;
        tmp_2_reg_1452 <= {{empty_reg_274[10:9]}};
        tmp_3_reg_1457[4 : 3] <= tmp_3_fu_472_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond5216_reg_1438 <= exitcond5216_fu_446_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln95_reg_1568_pp2_iter31_reg == 1'd0))) begin
        f_reg_1783 <= grp_fu_441_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln95_reg_1568_pp2_iter3_reg == 1'd0))) begin
        icmp_ln149_reg_1687 <= icmp_ln149_fu_1001_p2;
        sub_ln150_1_reg_1681 <= sub_ln150_1_fu_995_p2;
        sub_ln150_reg_1671 <= sub_ln150_fu_972_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln95_reg_1568 <= icmp_ln95_fu_692_p2;
        icmp_ln95_reg_1568_pp2_iter1_reg <= icmp_ln95_reg_1568;
        line_buf_addr_1_reg_1582_pp2_iter1_reg <= line_buf_addr_1_reg_1582;
        or_ln174_2_reg_1593_pp2_iter1_reg <= or_ln174_2_reg_1593;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln95_reg_1568_pp2_iter32_reg == 1'd0))) begin
        isNeg_reg_1798 <= add_ln340_fu_1244_p2[32'd8];
        p_Repl2_s_reg_1793 <= p_Repl2_s_fu_1236_p1;
        p_Result_s_reg_1788 <= p_Val2_s_fu_1215_p1[32'd31];
        ush_reg_1803 <= ush_fu_1268_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln95_reg_1568_pp2_iter34_reg == 1'd0))) begin
        p_Val2_3_reg_1814 <= p_Val2_3_fu_1342_p3;
        tmp_10_reg_1819 <= {{p_Val2_3_fu_1342_p3[31:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln95_reg_1568_pp2_iter35_reg == 1'd0))) begin
        select_ln174_1_reg_1824 <= select_ln174_1_fu_1384_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln95_fu_692_p2 == 1'd0))) begin
        select_ln95_1_reg_1577 <= select_ln95_1_fu_724_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln149_reg_1687 == 1'd0) & (icmp_ln95_reg_1568_pp2_iter4_reg == 1'd0))) begin
        sext_ln150_1_reg_1710 <= sext_ln150_1_fu_1021_p1;
        shl_ln2_reg_1697[18 : 8] <= shl_ln2_fu_1010_p3[18 : 8];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln95_reg_1568_pp2_iter1_reg == 1'd0))) begin
        shl_ln_reg_1645[8 : 1] <= shl_ln_fu_873_p3[8 : 1];
        tmp_1_reg_1634 <= {{line_buf_q1[23:8]}};
        window_buf_0_1_3_cast7_reg_1639[7 : 0] <= window_buf_0_1_3_cast7_fu_869_p1[7 : 0];
        zext_ln129_3_reg_1650[7 : 0] <= zext_ln129_3_fu_881_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln95_reg_1568_pp2_iter33_reg == 1'd0))) begin
        val_V_reg_1808 <= val_V_fu_1330_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter2 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter1_reg == 1'd0))) begin
        window_buf_0_2_reg_1615 <= {{line_buf_q1[15:8]}};
        window_buf_1_2_reg_1621 <= {{line_buf_q1[23:16]}};
        window_buf_2_2_reg_1627 <= data_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln95_reg_1568_pp2_iter14_reg == 1'd0))) begin
        x_assign_reg_1768 <= grp_fu_438_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln95_reg_1568 == 1'd0))) begin
        zext_ln109_reg_1604[17 : 0] <= zext_ln109_fu_835_p1[17 : 0];
    end
end

always @ (*) begin
    if ((exitcond5216_fu_446_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1))) begin
        ap_condition_pp2_exit_iter2_state9 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter2_state9 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln95_fu_692_p2 == 1'd1))) begin
        ap_condition_pp2_flush_enable = 1'b1;
    end else begin
        ap_condition_pp2_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter37 == 1'b0) & (ap_enable_reg_pp2_iter36 == 1'b0) & (ap_enable_reg_pp2_iter35 == 1'b0) & (ap_enable_reg_pp2_iter34 == 1'b0) & (ap_enable_reg_pp2_iter33 == 1'b0) & (ap_enable_reg_pp2_iter32 == 1'b0) & (ap_enable_reg_pp2_iter31 == 1'b0) & (ap_enable_reg_pp2_iter30 == 1'b0) & (ap_enable_reg_pp2_iter29 == 1'b0) & (ap_enable_reg_pp2_iter28 == 1'b0) & (ap_enable_reg_pp2_iter27 == 1'b0) & (ap_enable_reg_pp2_iter26 == 1'b0) & (ap_enable_reg_pp2_iter25 == 1'b0) & (ap_enable_reg_pp2_iter24 == 1'b0) & (ap_enable_reg_pp2_iter23 == 1'b0) & (ap_enable_reg_pp2_iter22 == 1'b0) & (ap_enable_reg_pp2_iter21 == 1'b0) & (ap_enable_reg_pp2_iter20 == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b0) & (ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter2_reg == 1'd0))) begin
        ap_phi_mux_window_buf_0_1_3_phi_fu_404_p4 = window_buf_0_1_reg_391;
    end else begin
        ap_phi_mux_window_buf_0_1_3_phi_fu_404_p4 = window_buf_0_1_3_reg_401;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter2_reg == 1'd0))) begin
        ap_phi_mux_window_buf_1_1_3_phi_fu_384_p4 = window_buf_1_1_reg_371;
    end else begin
        ap_phi_mux_window_buf_1_1_3_phi_fu_384_p4 = window_buf_1_1_3_reg_381;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter2_reg == 1'd0))) begin
        ap_phi_mux_window_buf_2_1_3_phi_fu_364_p4 = window_buf_2_1_reg_351;
    end else begin
        ap_phi_mux_window_buf_2_1_3_phi_fu_364_p4 = window_buf_2_1_3_reg_361;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (icmp_ln95_reg_1568 == 1'd0))) begin
        ap_phi_mux_yi_phi_fu_333_p4 = select_ln95_1_reg_1577;
    end else begin
        ap_phi_mux_yi_phi_fu_333_p4 = yi_reg_329;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        data_ce0 = 1'b1;
    end else begin
        data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        line_buf_address0 = line_buf_addr_1_reg_1582_pp2_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buf_address0 = p_cast120_fu_506_p1;
    end else begin
        line_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1)))) begin
        line_buf_ce0 = 1'b1;
    end else begin
        line_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        line_buf_ce1 = 1'b1;
    end else begin
        line_buf_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter3 == 1'b1))) begin
        line_buf_d0 = tmp_5_fu_885_p3;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buf_d0 = empty_52_fu_547_p2;
    end else begin
        line_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter3 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter2_reg == 1'd0))) begin
        line_buf_we0 = 3'd7;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond5216_reg_1438 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        line_buf_we0 = mask_fu_557_p2;
    end else begin
        line_buf_we0 = 3'd0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter37 == 1'b1))) begin
        out_0_ce0 = 1'b1;
    end else begin
        out_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter37 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter36_reg == 1'd0))) begin
        out_0_we0 = 1'b1;
    end else begin
        out_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter30 == 1'b1))) begin
        out_1_ce0 = 1'b1;
    end else begin
        out_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter30 == 1'b1) & (icmp_ln95_reg_1568_pp2_iter29_reg == 1'd0))) begin
        out_1_we0 = 1'b1;
    end else begin
        out_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond5216_fu_446_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond5216_fu_446_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (exitcond5115_fu_582_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1)) & ~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter37 == 1'b1) & (ap_enable_reg_pp2_iter36 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter37 == 1'b1) & (ap_enable_reg_pp2_iter36 == 1'b0)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln109_fu_789_p2 = (zext_ln96_1_fu_785_p1 + p_mid2_fu_736_p3);

assign add_ln129_1_fu_964_p2 = (zext_ln129_3_reg_1650_pp2_iter3_reg + sub_ln129_1_fu_959_p2);

assign add_ln129_fu_907_p2 = ($signed(zext_ln129_1_fu_904_p1) + $signed(sext_ln129_fu_900_p1));

assign add_ln136_1_fu_934_p2 = (zext_ln136_fu_921_p1 + zext_ln136_1_fu_930_p1);

assign add_ln136_fu_925_p2 = (zext_ln129_fu_892_p1 + window_buf_0_1_3_cast7_reg_1639);

assign add_ln340_fu_1244_p2 = ($signed(9'd385) + $signed(zext_ln340_fu_1240_p1));

assign add_ln95_1_fu_718_p2 = (10'd1 + ap_phi_mux_yi_phi_fu_333_p4);

assign add_ln95_fu_698_p2 = (indvar_flatten_reg_318 + 19'd1);

assign add_ln96_fu_829_p2 = (10'd1 + select_ln95_fu_710_p3);

assign and_ln157_fu_1107_p2 = (select_ln157_fu_1059_p3 & select_ln157_1_fu_1099_p3);

assign and_ln161_fu_1179_p2 = (select_ln161_fu_1143_p3 & select_ln161_1_fu_1171_p3);

assign and_ln165_fu_1201_p2 = (icmp_ln165_fu_1189_p2 & icmp_ln165_1_fu_1195_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state10_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_603 = (((icmp_ln149_reg_1687_pp2_iter28_reg == 1'd1) & (icmp_ln95_reg_1568_pp2_iter28_reg == 1'd0)) | ((1'd0 == and_ln161_reg_1764_pp2_iter28_reg) & (1'd0 == and_ln157_reg_1740_pp2_iter28_reg) & (icmp_ln95_reg_1568_pp2_iter28_reg == 1'd0)));
end

always @ (*) begin
    ap_condition_920 = ((1'd0 == and_ln161_reg_1764_pp2_iter27_reg) & (1'd0 == and_ln157_reg_1740_pp2_iter27_reg) & (icmp_ln149_reg_1687_pp2_iter27_reg == 1'd0) & (icmp_ln95_reg_1568_pp2_iter27_reg == 1'd0));
end

always @ (*) begin
    ap_condition_961 = ((1'd1 == and_ln157_reg_1740) & (icmp_ln149_reg_1687_pp2_iter8_reg == 1'd0) & (icmp_ln95_reg_1568_pp2_iter8_reg == 1'd0));
end

always @ (*) begin
    ap_condition_964 = ((1'd0 == and_ln157_reg_1740_pp2_iter27_reg) & (1'd1 == and_ln161_reg_1764_pp2_iter27_reg) & (icmp_ln149_reg_1687_pp2_iter27_reg == 1'd0) & (icmp_ln95_reg_1568_pp2_iter27_reg == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign ap_phi_reg_pp2_iter0_grad_sobel_reg_422 = 'bx;

assign ap_phi_reg_pp2_iter0_t_int_06368_reg_411 = 'bx;

assign cmp88_not_fu_680_p2 = ((ap_phi_mux_yi_phi_fu_333_p4 > 10'd508) ? 1'b1 : 1'b0);

assign cmp88_not_mid1_fu_760_p2 = ((add_ln95_1_fu_718_p2 > 10'd508) ? 1'b1 : 1'b0);

assign data_address0 = zext_ln109_fu_835_p1;

assign empty_40_fu_452_p2 = (empty_reg_274 + 11'd1);

assign empty_41_fu_458_p1 = empty_reg_274[8:0];

assign empty_42_fu_480_p2 = (tmp_3_fu_472_p3 | 5'd7);

assign empty_43_fu_486_p2 = ((tmp_3_fu_472_p3 > empty_42_fu_480_p2) ? 1'b1 : 1'b0);

assign empty_44_fu_492_p3 = ((empty_43_fu_486_p2[0:0] === 1'b1) ? tmp_3_fu_472_p3 : empty_42_fu_480_p2);

assign empty_45_fu_510_p3 = ((empty_43_reg_1467[0:0] === 1'b1) ? empty_42_reg_1462 : tmp_3_reg_1457);

assign empty_46_fu_500_p2 = ($signed(5'd23) - $signed(empty_44_fu_492_p3));

assign empty_47_fu_515_p1 = empty_45_fu_510_p3;

assign empty_48_fu_519_p1 = empty_46_reg_1473;

assign empty_49_fu_522_p3 = ((empty_43_reg_1467[0:0] === 1'b1) ? 24'd0 : 24'd0);

assign empty_50_fu_529_p2 = 24'd16777215 << empty_47_fu_515_p1;

assign empty_51_fu_535_p2 = 24'd16777215 >> empty_48_fu_519_p1;

assign empty_52_fu_547_p2 = (p_demorgan_fu_541_p2 & empty_49_fu_522_p3);

assign empty_53_fu_554_p1 = tmp_2_reg_1452;

assign empty_56_fu_588_p2 = (empty_54_reg_285 + 4'd1);

assign empty_58_fu_650_p2 = ((next_urem_fu_644_p2 < 4'd3) ? 1'b1 : 1'b0);

assign exitcond5115_fu_582_p2 = ((empty_54_reg_285 == 4'd9) ? 1'b1 : 1'b0);

assign exitcond5216_fu_446_p2 = ((empty_reg_274 == 11'd1536) ? 1'b1 : 1'b0);

assign grp_fu_1024_p0 = shl_ln2_fu_1010_p3;

assign grp_fu_1392_p0 = sext_ln140_fu_1007_p1;

assign grp_fu_1392_p1 = sext_ln140_fu_1007_p1;

assign grp_fu_1398_p1 = 31'd2147483030;

assign grp_fu_1406_p1 = 28'd268435350;

assign grp_fu_1414_p0 = sext_ln136_fu_1036_p1;

assign grp_fu_1414_p1 = sext_ln136_fu_1036_p1;

assign grp_fu_1422_p1 = 28'd268435350;

assign grp_fu_1430_p1 = 28'd107;

assign grp_fu_438_p0 = add_ln140_reg_1754;

assign icmp75_fu_754_p2 = ((tmp_4_fu_744_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_fu_674_p2 = ((tmp_fu_664_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln143_fu_1358_p2 = (($signed(tmp_10_reg_1819) > $signed(24'd0)) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_1001_p2 = ((add_ln129_1_fu_964_p2 == zext_ln129_4_fu_969_p1) ? 1'b1 : 1'b0);

assign icmp_ln157_1_fu_1054_p2 = (($signed(sext_ln157_1_fu_1046_p1) > $signed(grp_fu_1398_p2)) ? 1'b1 : 1'b0);

assign icmp_ln157_2_fu_1077_p2 = (($signed(sext_ln157_3_fu_1074_p1) < $signed(grp_fu_1406_p2)) ? 1'b1 : 1'b0);

assign icmp_ln157_3_fu_1088_p2 = (($signed(grp_fu_1406_p2) < $signed(sext_ln157_3_fu_1074_p1)) ? 1'b1 : 1'b0);

assign icmp_ln157_fu_1049_p2 = (($signed(sext_ln157_1_fu_1046_p1) < $signed(grp_fu_1398_p2)) ? 1'b1 : 1'b0);

assign icmp_ln161_1_fu_1138_p2 = (($signed(sext_ln161_1_fu_1130_p1) > $signed(grp_fu_1422_p2)) ? 1'b1 : 1'b0);

assign icmp_ln161_2_fu_1161_p2 = (($signed(sext_ln161_3_fu_1158_p1) > $signed(grp_fu_1430_p2)) ? 1'b1 : 1'b0);

assign icmp_ln161_3_fu_1166_p2 = (($signed(sext_ln161_3_fu_1158_p1) < $signed(grp_fu_1430_p2)) ? 1'b1 : 1'b0);

assign icmp_ln161_fu_1133_p2 = (($signed(sext_ln161_1_fu_1130_p1) < $signed(grp_fu_1422_p2)) ? 1'b1 : 1'b0);

assign icmp_ln165_1_fu_1195_p2 = (($signed(ap_phi_reg_pp2_iter29_t_int_06368_reg_411) < $signed(32'd618)) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_1189_p2 = (($signed(ap_phi_reg_pp2_iter29_t_int_06368_reg_411) > $signed(32'd106)) ? 1'b1 : 1'b0);

assign icmp_ln174_1_fu_811_p2 = ((select_ln95_fu_710_p3 > 10'd508) ? 1'b1 : 1'b0);

assign icmp_ln174_fu_805_p2 = ((tmp_15_fu_795_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln95_fu_692_p2 = ((indvar_flatten_reg_318 == 19'd262144) ? 1'b1 : 1'b0);

assign icmp_ln96_fu_704_p2 = ((xi_reg_340 == 10'd512) ? 1'b1 : 1'b0);

assign idx_urem_fu_656_p3 = ((empty_58_fu_650_p2[0:0] === 1'b1) ? next_urem_fu_644_p2 : 4'd0);

assign isNeg_fu_1250_p3 = add_ln340_fu_1244_p2[32'd8];

assign mantissa_V_fu_1276_p4 = {{{{1'd1}, {p_Repl2_s_reg_1793}}}, {1'd0}};

assign mask_fu_557_p2 = 3'd1 << empty_53_fu_554_p1;

assign next_mul_fu_594_p2 = (8'd22 + phi_mul_reg_296);

assign next_urem_fu_644_p2 = (phi_urem_reg_307 + 4'd1);

assign or_ln174_1_fu_686_p2 = (icmp_fu_674_p2 | cmp88_not_fu_680_p2);

assign or_ln174_2_fu_823_p2 = (select_ln95_2_fu_772_p3 | or_ln174_fu_817_p2);

assign or_ln174_3_fu_1379_p2 = (or_ln174_2_reg_1593_pp2_iter35_reg | icmp_ln143_fu_1358_p2);

assign or_ln174_4_fu_766_p2 = (icmp75_fu_754_p2 | cmp88_not_mid1_fu_760_p2);

assign or_ln174_fu_817_p2 = (icmp_ln174_fu_805_p2 | icmp_ln174_1_fu_811_p2);

assign out_0_address0 = zext_ln109_reg_1604_pp2_iter36_reg;

assign out_0_d0 = select_ln174_1_reg_1824;

assign out_1_address0 = zext_ln109_reg_1604_pp2_iter29_reg;

assign out_1_d0 = ap_phi_reg_pp2_iter30_grad_sobel_reg_422;

assign p_Repl2_1_fu_1226_p4 = {{p_Val2_s_fu_1215_p1[30:23]}};

assign p_Repl2_s_fu_1236_p1 = p_Val2_s_fu_1215_p1[22:0];

assign p_Val2_3_fu_1342_p3 = ((p_Result_s_reg_1788_pp2_iter34_reg[0:0] === 1'b1) ? result_V_1_fu_1337_p2 : val_V_reg_1808);

assign p_Val2_s_fu_1215_p1 = f_reg_1783;

assign p_cast120_fu_506_p1 = empty_41_reg_1447;

assign p_demorgan_fu_541_p2 = (empty_51_fu_535_p2 & empty_50_fu_529_p2);

assign p_mid2_fu_736_p3 = {{trunc_ln95_fu_732_p1}, {9'd0}};

assign r_V_1_fu_1302_p2 = zext_ln15_fu_1285_p1 << sh_prom_i_i_i_cast_cast_cast_cast_cast_cast_fu_1292_p1;

assign r_V_fu_1296_p2 = zext_ln15_fu_1285_p1 >> sh_prom_i_i_i_cast_cast_cast_cast_cast_cast_fu_1292_p1;

assign result_V_1_fu_1337_p2 = (32'd0 - val_V_reg_1808);

assign select_ln157_1_fu_1099_p3 = ((tmp_12_fu_1067_p3[0:0] === 1'b1) ? xor_ln157_fu_1082_p2 : xor_ln157_1_fu_1093_p2);

assign select_ln157_fu_1059_p3 = ((tmp_11_fu_1039_p3[0:0] === 1'b1) ? icmp_ln157_fu_1049_p2 : icmp_ln157_1_fu_1054_p2);

assign select_ln161_1_fu_1171_p3 = ((tmp_14_fu_1151_p3[0:0] === 1'b1) ? icmp_ln161_2_fu_1161_p2 : icmp_ln161_3_fu_1166_p2);

assign select_ln161_fu_1143_p3 = ((tmp_13_fu_1123_p3[0:0] === 1'b1) ? icmp_ln161_fu_1133_p2 : icmp_ln161_1_fu_1138_p2);

assign select_ln165_fu_1207_p3 = ((and_ln165_fu_1201_p2[0:0] === 1'b1) ? 8'd45 : 8'd90);

assign select_ln174_1_fu_1384_p3 = ((or_ln174_3_fu_1379_p2[0:0] === 1'b1) ? select_ln174_fu_1371_p3 : trunc_ln176_fu_1363_p1);

assign select_ln174_fu_1371_p3 = ((xor_ln174_fu_1366_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln95_1_fu_724_p3 = ((icmp_ln96_fu_704_p2[0:0] === 1'b1) ? add_ln95_1_fu_718_p2 : ap_phi_mux_yi_phi_fu_333_p4);

assign select_ln95_2_fu_772_p3 = ((icmp_ln96_fu_704_p2[0:0] === 1'b1) ? or_ln174_4_fu_766_p2 : or_ln174_1_fu_686_p2);

assign select_ln95_fu_710_p3 = ((icmp_ln96_fu_704_p2[0:0] === 1'b1) ? 10'd0 : xi_reg_340);

assign sext_ln129_fu_900_p1 = $signed(sub_ln129_fu_895_p2);

assign sext_ln1311_fu_1264_p1 = $signed(sub_ln1311_fu_1258_p2);

assign sext_ln136_fu_1036_p1 = sub_ln150_reg_1671_pp2_iter5_reg;

assign sext_ln140_fu_1007_p1 = sub_ln150_1_reg_1681;

assign sext_ln150_1_fu_1021_p1 = sub_ln150_reg_1671;

assign sext_ln150_2_fu_1185_p1 = $signed(grp_fu_1024_p2);

assign sext_ln157_1_fu_1046_p1 = shl_ln2_reg_1697_pp2_iter7_reg;

assign sext_ln157_3_fu_1074_p1 = shl_ln2_reg_1697_pp2_iter7_reg;

assign sext_ln161_1_fu_1130_p1 = shl_ln2_reg_1697_pp2_iter10_reg;

assign sext_ln161_3_fu_1158_p1 = shl_ln2_reg_1697_pp2_iter10_reg;

assign sh_prom_i_i_i_cast_cast_cast_cast_cast_cast_fu_1292_p1 = $unsigned(sh_prom_i_i_i_cast_cast_cast_cast_cast_fu_1289_p1);

assign sh_prom_i_i_i_cast_cast_cast_cast_cast_fu_1289_p1 = $signed(ush_reg_1803);

assign shl_ln129_1_fu_948_p3 = {{window_buf_1_2_reg_1621_pp2_iter3_reg}, {1'd0}};

assign shl_ln136_1_fu_940_p3 = {{window_buf_2_1_reg_351}, {1'd0}};

assign shl_ln1_fu_913_p3 = {{window_buf_0_1_reg_391}, {1'd0}};

assign shl_ln2_fu_1010_p3 = {{sub_ln150_1_reg_1681}, {8'd0}};

assign shl_ln_fu_873_p3 = {{ap_phi_mux_window_buf_1_1_3_phi_fu_384_p4}, {1'd0}};

assign sub_ln129_1_fu_959_p2 = (add_ln129_reg_1656 - zext_ln129_2_fu_955_p1);

assign sub_ln129_fu_895_p2 = (window_buf_0_1_3_cast7_reg_1639 - zext_ln129_fu_892_p1);

assign sub_ln1311_fu_1258_p2 = (8'd127 - p_Repl2_1_fu_1226_p4);

assign sub_ln136_1_fu_989_p2 = (sub_ln136_fu_981_p2 - zext_ln136_3_fu_986_p1);

assign sub_ln136_fu_981_p2 = (zext_ln136_2_fu_978_p1 - zext_ln129_3_reg_1650_pp2_iter3_reg);

assign sub_ln150_1_fu_995_p2 = (sub_ln136_1_fu_989_p2 - zext_ln129_4_fu_969_p1);

assign sub_ln150_fu_972_p2 = (add_ln129_1_fu_964_p2 - zext_ln129_4_fu_969_p1);

assign tmp_11_fu_1039_p3 = sext_ln150_1_reg_1710_pp2_iter7_reg[32'd19];

assign tmp_12_fu_1067_p3 = sext_ln150_1_reg_1710_pp2_iter7_reg[32'd19];

assign tmp_13_fu_1123_p3 = sext_ln150_1_reg_1710_pp2_iter10_reg[32'd19];

assign tmp_14_fu_1151_p3 = sext_ln150_1_reg_1710_pp2_iter10_reg[32'd19];

assign tmp_15_fu_795_p4 = {{select_ln95_fu_710_p3[9:2]}};

assign tmp_2_fu_462_p4 = {{empty_reg_274[10:9]}};

assign tmp_3_fu_472_p3 = {{tmp_2_fu_462_p4}, {3'd0}};

assign tmp_4_fu_744_p4 = {{add_ln95_1_fu_718_p2[9:2]}};

assign tmp_5_fu_885_p3 = {{window_buf_2_2_reg_1627}, {tmp_1_reg_1634}};

assign tmp_8_fu_1320_p4 = {{r_V_1_fu_1302_p2[55:24]}};

assign tmp_9_fu_1308_p3 = r_V_fu_1296_p2[32'd24];

assign tmp_fu_664_p4 = {{ap_phi_mux_yi_phi_fu_333_p4[9:2]}};

assign trunc_ln176_fu_1363_p1 = p_Val2_3_reg_1814[7:0];

assign trunc_ln95_fu_732_p1 = select_ln95_1_fu_724_p3[8:0];

assign ush_fu_1268_p3 = ((isNeg_fu_1250_p3[0:0] === 1'b1) ? sext_ln1311_fu_1264_p1 : add_ln340_fu_1244_p2);

assign val_V_fu_1330_p3 = ((isNeg_reg_1798[0:0] === 1'b1) ? zext_ln662_fu_1316_p1 : tmp_8_fu_1320_p4);

assign window_buf_0_1_0_load_reg_1514 = 8'd0;

assign window_buf_0_1_3_cast7_fu_869_p1 = ap_phi_mux_window_buf_0_1_3_phi_fu_404_p4;

assign window_buf_0_2_0_load_reg_1519 = 8'd0;

assign window_buf_1_1_0_load_reg_1524 = 8'd0;

assign window_buf_1_2_0_load_reg_1529 = 8'd0;

assign window_buf_2_1_0_load_reg_1534 = 8'd0;

assign window_buf_2_2_0_load_reg_1539 = 8'd0;

assign xor_ln157_1_fu_1093_p2 = (icmp_ln157_3_fu_1088_p2 ^ 1'd1);

assign xor_ln157_fu_1082_p2 = (icmp_ln157_2_fu_1077_p2 ^ 1'd1);

assign xor_ln174_fu_1366_p2 = (or_ln174_2_reg_1593_pp2_iter35_reg ^ 1'd1);

assign zext_ln109_fu_835_p1 = add_ln109_reg_1588;

assign zext_ln129_1_fu_904_p1 = shl_ln_reg_1645;

assign zext_ln129_2_fu_955_p1 = shl_ln129_1_fu_948_p3;

assign zext_ln129_3_fu_881_p1 = ap_phi_mux_window_buf_2_1_3_phi_fu_364_p4;

assign zext_ln129_4_fu_969_p1 = window_buf_2_2_reg_1627_pp2_iter3_reg;

assign zext_ln129_fu_892_p1 = window_buf_0_2_reg_1615;

assign zext_ln136_1_fu_930_p1 = add_ln136_fu_925_p2;

assign zext_ln136_2_fu_978_p1 = add_ln136_1_reg_1661;

assign zext_ln136_3_fu_986_p1 = shl_ln136_1_reg_1666;

assign zext_ln136_fu_921_p1 = shl_ln1_fu_913_p3;

assign zext_ln15_fu_1285_p1 = mantissa_V_fu_1276_p4;

assign zext_ln340_fu_1240_p1 = p_Repl2_1_fu_1226_p4;

assign zext_ln662_fu_1316_p1 = tmp_9_fu_1308_p3;

assign zext_ln96_1_fu_785_p1 = select_ln95_fu_710_p3;

assign zext_ln96_fu_780_p1 = select_ln95_fu_710_p3;

always @ (posedge ap_clk) begin
    tmp_3_reg_1457[2:0] <= 3'b000;
    empty_42_reg_1462[2:0] <= 3'b111;
    zext_ln109_reg_1604[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter2_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter3_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter4_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter5_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter6_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter7_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter8_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter9_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter10_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter11_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter12_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter13_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter14_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter15_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter16_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter17_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter18_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter19_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter20_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter21_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter22_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter23_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter24_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter25_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter26_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter27_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter28_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter29_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter30_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter31_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter32_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter33_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter34_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter35_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    zext_ln109_reg_1604_pp2_iter36_reg[63:18] <= 46'b0000000000000000000000000000000000000000000000;
    window_buf_0_1_3_cast7_reg_1639[8] <= 1'b0;
    shl_ln_reg_1645[0] <= 1'b0;
    zext_ln129_3_reg_1650[10:8] <= 3'b000;
    zext_ln129_3_reg_1650_pp2_iter3_reg[10:8] <= 3'b000;
    shl_ln136_1_reg_1666[0] <= 1'b0;
    shl_ln2_reg_1697[7:0] <= 8'b00000000;
    shl_ln2_reg_1697_pp2_iter6_reg[7:0] <= 8'b00000000;
    shl_ln2_reg_1697_pp2_iter7_reg[7:0] <= 8'b00000000;
    shl_ln2_reg_1697_pp2_iter8_reg[7:0] <= 8'b00000000;
    shl_ln2_reg_1697_pp2_iter9_reg[7:0] <= 8'b00000000;
    shl_ln2_reg_1697_pp2_iter10_reg[7:0] <= 8'b00000000;
end

endmodule //gsn_sobel
